{
  "hash": "74977a5e723939fceb410a0c1c655557",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: FID\njupyter:\n  jupytext:\n    split_at_heading: true\n  kernelspec:\n    display_name: Python 3 (ipykernel)\n    language: python\n    name: python3\n---\n\n::: {#4cf88466 .cell 0='e' 1='x' 2='p' 3='o' 4='r' 5='t' execution_count=1}\n``` {.python .cell-code}\nimport pickle,gzip,math,os,time,shutil,torch,random\nimport fastcore.all as fc,matplotlib as mpl,numpy as np,matplotlib.pyplot as plt\nfrom collections.abc import Mapping\nfrom pathlib import Path\nfrom operator import attrgetter,itemgetter\nfrom functools import partial\nfrom copy import copy\nfrom contextlib import contextmanager\nfrom scipy import linalg\n\nfrom fastcore.foundation import L\nimport torchvision.transforms.functional as TF,torch.nn.functional as F\nfrom torch import tensor,nn,optim\nfrom torch.utils.data import DataLoader,default_collate\nfrom torch.nn import init\nfrom torch.optim import lr_scheduler\nfrom torcheval.metrics import MulticlassAccuracy\nfrom datasets import load_dataset,load_dataset_builder\n\nfrom miniai.datasets import *\nfrom miniai.conv import *\nfrom miniai.learner import *\nfrom miniai.activations import *\nfrom miniai.init import *\nfrom miniai.sgd import *\nfrom miniai.resnet import *\nfrom miniai.augment import *\nfrom miniai.accel import *\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[1], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pickle</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">gzip</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">os</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">time</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">shutil</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">collections</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">abc</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Mapping\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pathlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Path\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'fastcore'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#dfb31abd .cell execution_count=2}\n``` {.python .cell-code}\nfrom fastcore.test import test_close\nfrom torch import distributions\n\ntorch.set_printoptions(precision=2, linewidth=140, sci_mode=False)\ntorch.manual_seed(1)\nmpl.rcParams['image.cmap'] = 'gray_r'\n\nimport logging\nlogging.disable(logging.WARNING)\n\nset_seed(42)\nif fc.defaults.cpus>8: fc.defaults.cpus=8\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">test</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> test_close\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> distributions\n<span class=\"ansi-green-fg ansi-bold\">      4</span> torch<span style=\"color:rgb(98,98,98)\">.</span>set_printoptions(precision<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>, linewidth<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">140</span>, sci_mode<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>)\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'fastcore'</pre>\n```\n:::\n\n:::\n:::\n\n\n## Classifier\n\n::: {#53cef33f .cell execution_count=3}\n``` {.python .cell-code}\nxl,yl = 'image','label'\nname = \"fashion_mnist\"\nbs = 512\n\n@inplace\ndef transformi(b): b[xl] = [F.pad(TF.to_tensor(o), (2,2,2,2))*2-1 for o in b[xl]]\n\ndsd = load_dataset(name)\ntds = dsd.with_transform(transformi)\ndls = DataLoaders.from_dd(tds, bs, num_workers=fc.defaults.cpus)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[3], line 5</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> name <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">fashion_mnist</span><span style=\"color:rgb(175,0,0)\">\"</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> bs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">512</span>\n<span class=\"ansi-green-fg\">----&gt; 5</span> <span style=\"color:rgb(175,0,255)\">@inplace</span>\n<span class=\"ansi-green-fg ansi-bold\">      6</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">transformi</span>(b): b[xl] <span style=\"color:rgb(98,98,98)\">=</span> [F<span style=\"color:rgb(98,98,98)\">.</span>pad(TF<span style=\"color:rgb(98,98,98)\">.</span>to_tensor(o), (<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>))<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span><span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> b[xl]]\n<span class=\"ansi-green-fg ansi-bold\">      8</span> dsd <span style=\"color:rgb(98,98,98)\">=</span> load_dataset(name)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'inplace' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e37e4248 .cell execution_count=4}\n``` {.python .cell-code}\nb = xb,yb = next(iter(dls.train))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> b <span style=\"color:rgb(98,98,98)\">=</span> xb,yb <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(<span style=\"color:rgb(0,135,0)\">iter</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#73dc6e03 .cell execution_count=5}\n``` {.python .cell-code}\ncbs = [DeviceCB(), MixedPrecision()]\nmodel = torch.load('models/data_aug2.pkl')\nlearn = Learner(model, dls, F.cross_entropy, cbs=cbs, opt_func=None)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[5], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> cbs <span style=\"color:rgb(98,98,98)\">=</span> [<span class=\"ansi-yellow-bg\">DeviceCB</span>(), MixedPrecision()]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> model <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>load(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/data_aug2.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> learn <span style=\"color:rgb(98,98,98)\">=</span> Learner(model, dls, F<span style=\"color:rgb(98,98,98)\">.</span>cross_entropy, cbs<span style=\"color:rgb(98,98,98)\">=</span>cbs, opt_func<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'DeviceCB' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#341cbb94 .cell execution_count=6}\n``` {.python .cell-code}\ndef append_outp(hook, mod, inp, outp):\n    if not hasattr(hook,'outp'): hook.outp = []\n    hook.outp.append(to_cpu(outp))\n```\n:::\n\n\n::: {#5024cd60 .cell execution_count=7}\n``` {.python .cell-code}\nhcb = HooksCallback(append_outp, mods=[learn.model[6]], on_valid=True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[7], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> hcb <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">HooksCallback</span>(append_outp, mods<span style=\"color:rgb(98,98,98)\">=</span>[learn<span style=\"color:rgb(98,98,98)\">.</span>model[<span style=\"color:rgb(98,98,98)\">6</span>]], on_valid<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'HooksCallback' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#433e9e2e .cell execution_count=8}\n``` {.python .cell-code}\nlearn.fit(1, train=False, cbs=[hcb])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[8], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(<span style=\"color:rgb(98,98,98)\">1</span>, train<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>, cbs<span style=\"color:rgb(98,98,98)\">=</span>[hcb])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#08ec9596 .cell execution_count=9}\n``` {.python .cell-code}\nfeats = hcb.hooks[0].outp[0].float()[:64]\nfeats.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[9], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> feats <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">hcb</span><span style=\"color:rgb(98,98,98)\">.</span>hooks[<span style=\"color:rgb(98,98,98)\">0</span>]<span style=\"color:rgb(98,98,98)\">.</span>outp[<span style=\"color:rgb(98,98,98)\">0</span>]<span style=\"color:rgb(98,98,98)\">.</span>float()[:<span style=\"color:rgb(98,98,98)\">64</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> feats<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'hcb' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f51e5977 .cell execution_count=10}\n``` {.python .cell-code}\ndel(learn.model[8])\ndel(learn.model[7])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(<span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>model[<span style=\"color:rgb(98,98,98)\">8</span>])\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(learn<span style=\"color:rgb(98,98,98)\">.</span>model[<span style=\"color:rgb(98,98,98)\">7</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#85b4cd19 .cell execution_count=11}\n``` {.python .cell-code}\nfeats,y = learn.capture_preds()\nfeats = feats.float()\nfeats.shape,y\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[11], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> feats,y <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>capture_preds()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> feats <span style=\"color:rgb(98,98,98)\">=</span> feats<span style=\"color:rgb(98,98,98)\">.</span>float()\n<span class=\"ansi-green-fg ansi-bold\">      3</span> feats<span style=\"color:rgb(98,98,98)\">.</span>shape,y\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Calc FID\n\n::: {#f089436b .cell execution_count=12}\n``` {.python .cell-code}\nbetamin,betamax,n_steps = 0.0001,0.02,1000\nbeta = torch.linspace(betamin, betamax, n_steps)\nalpha = 1.-beta\nalphabar = alpha.cumprod(dim=0)\nsigma = beta.sqrt()\n```\n:::\n\n\n::: {#be5eb17d .cell execution_count=13}\n``` {.python .cell-code}\ndef noisify(x0, ᾱ):\n    device = x0.device\n    n = len(x0)\n    t = torch.randint(0, n_steps, (n,), dtype=torch.long)\n    ε = torch.randn(x0.shape, device=device)\n    ᾱ_t = ᾱ[t].reshape(-1, 1, 1, 1).to(device)\n    xt = ᾱ_t.sqrt()*x0 + (1-ᾱ_t).sqrt()*ε\n    return (xt, t.to(device)), ε\n\ndef collate_ddpm(b): return noisify(default_collate(b)[xl], alphabar)\ndef dl_ddpm(ds): return DataLoader(ds, batch_size=bs, collate_fn=collate_ddpm, num_workers=4)\n```\n:::\n\n\n::: {#97870765 .cell execution_count=14}\n``` {.python .cell-code}\ndls2 = DataLoaders(dl_ddpm(tds['train']), dl_ddpm(tds['test']))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[14], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> dls2 <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">DataLoaders</span>(dl_ddpm(tds[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">train</span><span style=\"color:rgb(175,0,0)\">'</span>]), dl_ddpm(tds[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">test</span><span style=\"color:rgb(175,0,0)\">'</span>]))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'DataLoaders' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9b4a86a2 .cell execution_count=15}\n``` {.python .cell-code}\nfrom diffusers import UNet2DModel\n\nclass UNet(UNet2DModel):\n    def forward(self, x): return super().forward(*x).sample\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[15], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">diffusers</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> UNet2DModel\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">UNet</span>(UNet2DModel):\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">forward</span>(<span style=\"color:rgb(0,135,0)\">self</span>, x): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span>forward(<span style=\"color:rgb(98,98,98)\">*</span>x)<span style=\"color:rgb(98,98,98)\">.</span>sample\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'diffusers'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#3b2ae3f6 .cell execution_count=16}\n``` {.python .cell-code}\nsmodel = torch.load('models/fashion_ddpm_mp.pkl').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[16], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> smodel <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">load</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">models/fashion_ddpm_mp.pkl</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\">.</span>cuda()\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:997</span>, in <span class=\"ansi-cyan-fg\">load</span><span class=\"ansi-blue-fg\">(f, map_location, pickle_module, weights_only, mmap, **pickle_load_args)</span>\n<span class=\"ansi-green-fg ansi-bold\">    994</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">encoding</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> pickle_load_args<span style=\"color:rgb(98,98,98)\">.</span>keys():\n<span class=\"ansi-green-fg ansi-bold\">    995</span>     pickle_load_args[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">encoding</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">utf-8</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg\">--&gt; 997</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span class=\"ansi-yellow-bg\">_open_file_like</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">rb</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> opened_file:\n<span class=\"ansi-green-fg ansi-bold\">    998</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> _is_zipfile(opened_file):\n<span class=\"ansi-green-fg ansi-bold\">    999</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># The zipfile reader is going to advance the current file position.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1000</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># If we want to actually tail call to torch.jit.load, we need to</span>\n<span class=\"ansi-green-fg ansi-bold\">   1001</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># reset back to the original position.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1002</span>         orig_position <span style=\"color:rgb(98,98,98)\">=</span> opened_file<span style=\"color:rgb(98,98,98)\">.</span>tell()\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:444</span>, in <span class=\"ansi-cyan-fg\">_open_file_like</span><span class=\"ansi-blue-fg\">(name_or_buffer, mode)</span>\n<span class=\"ansi-green-fg ansi-bold\">    442</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_open_file_like</span>(name_or_buffer, mode):\n<span class=\"ansi-green-fg ansi-bold\">    443</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> _is_path(name_or_buffer):\n<span class=\"ansi-green-fg\">--&gt; 444</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_open_file</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name_or_buffer</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    445</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">    446</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">w</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> mode:\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:425</span>, in <span class=\"ansi-cyan-fg\">_open_file.__init__</span><span class=\"ansi-blue-fg\">(self, name, mode)</span>\n<span class=\"ansi-green-fg ansi-bold\">    424</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, name, mode):\n<span class=\"ansi-green-fg\">--&gt; 425</span>     <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">open</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">)</span>)\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: 'models/fashion_ddpm_mp.pkl'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#490409dc .cell execution_count=17}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample(model, sz, alpha, alphabar, sigma, n_steps):\n    device = next(model.parameters()).device\n    x_t = torch.randn(sz, device=device)\n    preds = []\n    for t in reversed(range(n_steps)):\n        t_batch = torch.full((x_t.shape[0],), t, device=device, dtype=torch.long)\n        z = (torch.randn(x_t.shape) if t > 0 else torch.zeros(x_t.shape)).to(device)\n        ᾱ_t1 = alphabar[t-1]  if t > 0 else torch.tensor(1)\n        b̄_t = 1 - alphabar[t]\n        b̄_t1 = 1 - ᾱ_t1\n        x_0_hat = ((x_t - b̄_t.sqrt() * model((x_t, t_batch)))/alphabar[t].sqrt())\n        x_t = x_0_hat * ᾱ_t1.sqrt()*(1-alpha[t])/b̄_t + x_t * alpha[t].sqrt()*b̄_t1/b̄_t + sigma[t]*z\n        preds.append(x_0_hat.cpu())\n    return preds\n```\n:::\n\n\n::: {#e28445fc .cell execution_count=18}\n``` {.python .cell-code}\n%%time\nsamples = sample(smodel, (256, 1, 32, 32), alpha, alphabar, sigma, n_steps)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'smodel' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6845971d .cell execution_count=19}\n``` {.python .cell-code}\ns = samples[-1]*2-1\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[19], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">samples</span>[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span><span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'samples' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8ccfd943 .cell execution_count=20}\n``` {.python .cell-code}\nshow_images(s[:16], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[20], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">16</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#02637d53 .cell execution_count=21}\n``` {.python .cell-code}\nclearn = TrainLearner(model, DataLoaders([],[(s,yb)]), loss_func=fc.noop, cbs=[DeviceCB()], opt_func=None)\nfeats2,y2 = clearn.capture_preds()\nfeats2 = feats2.float().squeeze()\nfeats2.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[21], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> clearn <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">TrainLearner</span>(model, DataLoaders([],[(s,yb)]), loss_func<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>noop, cbs<span style=\"color:rgb(98,98,98)\">=</span>[DeviceCB()], opt_func<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> feats2,y2 <span style=\"color:rgb(98,98,98)\">=</span> clearn<span style=\"color:rgb(98,98,98)\">.</span>capture_preds()\n<span class=\"ansi-green-fg ansi-bold\">      3</span> feats2 <span style=\"color:rgb(98,98,98)\">=</span> feats2<span style=\"color:rgb(98,98,98)\">.</span>float()<span style=\"color:rgb(98,98,98)\">.</span>squeeze()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'TrainLearner' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f34db966 .cell execution_count=22}\n``` {.python .cell-code}\nmeans = feats.mean(0)\nmeans.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[22], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> means <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">feats</span><span style=\"color:rgb(98,98,98)\">.</span>mean(<span style=\"color:rgb(98,98,98)\">0</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> means<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'feats' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#910b2e4a .cell execution_count=23}\n``` {.python .cell-code}\ncovs = feats.T.cov()\ncovs.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> covs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">feats</span><span style=\"color:rgb(98,98,98)\">.</span>T<span style=\"color:rgb(98,98,98)\">.</span>cov()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> covs<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'feats' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ab2c8719 .cell 0='e' 1='x' 2='p' 3='o' 4='r' 5='t' execution_count=24}\n``` {.python .cell-code}\ndef _sqrtm_newton_schulz(mat, num_iters=100):\n    mat_nrm = mat.norm()\n    mat = mat.double()\n    Y = mat/mat_nrm\n    n = len(mat)\n    I = torch.eye(n, n).to(mat)\n    Z = torch.eye(n, n).to(mat)\n\n    for i in range(num_iters):\n        T = (3*I - Z@Y)/2\n        Y,Z = Y@T,T@Z\n        res = Y*mat_nrm.sqrt()\n        if ((mat-(res@res)).norm()/mat_nrm).abs()<=1e-6: break\n    return res\n```\n:::\n\n\n::: {#6d153a05 .cell 0='e' 1='x' 2='p' 3='o' 4='r' 5='t' execution_count=25}\n``` {.python .cell-code}\ndef _calc_stats(feats):\n    feats = feats.squeeze()\n    return feats.mean(0),feats.T.cov()\n\ndef _calc_fid(m1,c1,m2,c2):\n#     csr = _sqrtm_newton_schulz(c1@c2)\n    csr = tensor(linalg.sqrtm(c1@c2, 256).real)\n    return (((m1-m2)**2).sum() + c1.trace() + c2.trace() - 2*csr.trace()).item()\n```\n:::\n\n\n::: {#28c0b69f .cell execution_count=26}\n``` {.python .cell-code}\ns1,s2 = _calc_stats(feats),_calc_stats(feats2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[26], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s1,s2 <span style=\"color:rgb(98,98,98)\">=</span> _calc_stats(<span class=\"ansi-yellow-bg\">feats</span>),_calc_stats(feats2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'feats' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6627041f .cell execution_count=27}\n``` {.python .cell-code}\n_calc_fid(*s1, *s2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> _calc_fid(<span style=\"color:rgb(98,98,98)\">*</span><span class=\"ansi-yellow-bg\">s1</span>, <span style=\"color:rgb(98,98,98)\">*</span>s2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 's1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#41d5b649 .cell 0='e' 1='x' 2='p' 3='o' 4='r' 5='t' execution_count=28}\n``` {.python .cell-code}\ndef _squared_mmd(x, y):\n    def k(a,b): return (a@b.transpose(-2,-1)/a.shape[-1]+1)**3\n    m,n = x.shape[-2],y.shape[-2]\n    kxx,kyy,kxy = k(x,x), k(y,y), k(x,y)\n    kxx_sum = kxx.sum([-1,-2])-kxx.diagonal(0,-1,-2).sum(-1)\n    kyy_sum = kyy.sum([-1,-2])-kyy.diagonal(0,-1,-2).sum(-1)\n    kxy_sum = kxy.sum([-1,-2])\n    return kxx_sum/m/(m-1) + kyy_sum/n/(n-1) - kxy_sum*2/m/n\n```\n:::\n\n\n::: {#46257169 .cell 0='e' 1='x' 2='p' 3='o' 4='r' 5='t' execution_count=29}\n``` {.python .cell-code}\ndef _calc_kid(x, y, maxs=50):\n    xs,ys = x.shape[0],y.shape[0]\n    n = max(math.ceil(min(xs/maxs, ys/maxs)), 4)\n    mmd = 0.\n    for i in range(n):\n        cur_x = x[round(i*xs/n) : round((i+1)*xs/n)]\n        cur_y = y[round(i*ys/n) : round((i+1)*ys/n)]\n        mmd += _squared_mmd(cur_x, cur_y)\n    return (mmd/n).item()\n```\n:::\n\n\n::: {#f17ac0ae .cell execution_count=30}\n``` {.python .cell-code}\n_calc_kid(feats, feats2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[30], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> _calc_kid(<span class=\"ansi-yellow-bg\">feats</span>, feats2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'feats' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## FID class\n\n::: {#ea54ce6f .cell 0='e' 1='x' 2='p' 3='o' 4='r' 5='t' execution_count=31}\n``` {.python .cell-code}\nclass ImageEval:\n    def __init__(self, model, dls, cbs=None):\n        self.learn = TrainLearner(model, dls, loss_func=fc.noop, cbs=cbs, opt_func=None)\n        self.feats = self.learn.capture_preds()[0].float().cpu().squeeze()\n        self.stats = _calc_stats(self.feats)\n\n    def get_feats(self, samp):\n        self.learn.dls = DataLoaders([],[(samp, tensor([0]))])\n        return self.learn.capture_preds()[0].float().cpu().squeeze()\n\n    def fid(self, samp): return _calc_fid(*self.stats, *_calc_stats(self.get_feats(samp)))\n    def kid(self, samp): return _calc_kid(self.feats, self.get_feats(samp))\n```\n:::\n\n\n::: {#52ece8eb .cell execution_count=32}\n``` {.python .cell-code}\nie = ImageEval(model, learn.dls, cbs=[DeviceCB()])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[32], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> ie <span style=\"color:rgb(98,98,98)\">=</span> ImageEval(<span class=\"ansi-yellow-bg\">model</span>, learn<span style=\"color:rgb(98,98,98)\">.</span>dls, cbs<span style=\"color:rgb(98,98,98)\">=</span>[DeviceCB()])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#17f6bb55 .cell execution_count=33}\n``` {.python .cell-code}\n%%time\nie.fid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed eval&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c5e22e5b .cell execution_count=34}\n``` {.python .cell-code}\n%%time\nie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed eval&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#64082ed5 .cell execution_count=35}\n``` {.python .cell-code}\nxs = L.range(0,1000,50)+[975,990,999]\nplt.plot(xs, [ie.fid(samples[i].clamp(-0.5,0.5)*2) for i in xs]);\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> xs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">L</span><span style=\"color:rgb(98,98,98)\">.</span>range(<span style=\"color:rgb(98,98,98)\">0</span>,<span style=\"color:rgb(98,98,98)\">1000</span>,<span style=\"color:rgb(98,98,98)\">50</span>)<span style=\"color:rgb(98,98,98)\">+</span>[<span style=\"color:rgb(98,98,98)\">975</span>,<span style=\"color:rgb(98,98,98)\">990</span>,<span style=\"color:rgb(98,98,98)\">999</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(xs, [ie<span style=\"color:rgb(98,98,98)\">.</span>fid(samples[i]<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">0.5</span>,<span style=\"color:rgb(98,98,98)\">0.5</span>)<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>) <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> xs]);\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'L' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#43802b9c .cell execution_count=36}\n``` {.python .cell-code}\nxs = L.range(0,1000,50)+[975,990,999]\nplt.plot(xs, [ie.kid(samples[i].clamp(-0.5,0.5)*2) for i in xs]);\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[36], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> xs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">L</span><span style=\"color:rgb(98,98,98)\">.</span>range(<span style=\"color:rgb(98,98,98)\">0</span>,<span style=\"color:rgb(98,98,98)\">1000</span>,<span style=\"color:rgb(98,98,98)\">50</span>)<span style=\"color:rgb(98,98,98)\">+</span>[<span style=\"color:rgb(98,98,98)\">975</span>,<span style=\"color:rgb(98,98,98)\">990</span>,<span style=\"color:rgb(98,98,98)\">999</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(xs, [ie<span style=\"color:rgb(98,98,98)\">.</span>kid(samples[i]<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">0.5</span>,<span style=\"color:rgb(98,98,98)\">0.5</span>)<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>) <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> xs]);\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'L' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2498f720 .cell execution_count=37}\n``` {.python .cell-code}\nie.fid(xb)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[37], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(xb)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d0d58a1c .cell execution_count=38}\n``` {.python .cell-code}\nie.kid(xb)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[38], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>kid(xb)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Inception\n\n::: {#3248f1af .cell execution_count=39}\n``` {.python .cell-code}\nfrom pytorch_fid.inception import InceptionV3\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[39], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pytorch_fid</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">inception</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> InceptionV3\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'pytorch_fid'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#38a9d0a1 .cell execution_count=40}\n``` {.python .cell-code}\na = tensor([1,2,3])\na.repeat((3,1))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[40], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> a <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">tensor</span>([<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">3</span>])\n<span class=\"ansi-green-fg ansi-bold\">      2</span> a<span style=\"color:rgb(98,98,98)\">.</span>repeat((<span style=\"color:rgb(98,98,98)\">3</span>,<span style=\"color:rgb(98,98,98)\">1</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#fe27e3b3 .cell execution_count=41}\n``` {.python .cell-code}\nclass IncepWrap(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.m = InceptionV3(resize_input=True)\n    def forward(self, x): return self.m(x.repeat(1,3,1,1))[0]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">IncepWrap</span>(<span class=\"ansi-yellow-bg\">nn</span><span style=\"color:rgb(98,98,98)\">.</span>Module):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'nn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6d7ef531 .cell execution_count=42}\n``` {.python .cell-code}\ntds = dsd.with_transform(transformi)\ndls = DataLoaders.from_dd(tds, bs, num_workers=fc.defaults.cpus)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> tds <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">dsd</span><span style=\"color:rgb(98,98,98)\">.</span>with_transform(transformi)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> dls <span style=\"color:rgb(98,98,98)\">=</span> DataLoaders<span style=\"color:rgb(98,98,98)\">.</span>from_dd(tds, bs, num_workers<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>defaults<span style=\"color:rgb(98,98,98)\">.</span>cpus)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dsd' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#160b4d18 .cell execution_count=43}\n``` {.python .cell-code}\nie = ImageEval(IncepWrap(), dls, cbs=[DeviceCB()])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> ie <span style=\"color:rgb(98,98,98)\">=</span> ImageEval(<span class=\"ansi-yellow-bg\">IncepWrap</span>(), dls, cbs<span style=\"color:rgb(98,98,98)\">=</span>[DeviceCB()])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'IncepWrap' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#90a2d469 .cell execution_count=44}\n``` {.python .cell-code}\n%%time\nie.fid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed eval&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#823d941c .cell execution_count=45}\n``` {.python .cell-code}\nie.fid(xb)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[45], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(xb)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6d95465e .cell execution_count=46}\n``` {.python .cell-code}\n%%time\nie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed eval&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5509f3a4 .cell execution_count=47}\n``` {.python .cell-code}\nie.kid(xb)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>kid(xb)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Export -\n\n::: {#8fd8b8d4 .cell execution_count=48}\n``` {.python .cell-code}\nimport nbdev; nbdev.nbdev_export()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">nbdev</span>; nbdev<span style=\"color:rgb(98,98,98)\">.</span>nbdev_export()\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'nbdev'</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "18_fid_files"
    ],
    "filters": [],
    "includes": {}
  }
}