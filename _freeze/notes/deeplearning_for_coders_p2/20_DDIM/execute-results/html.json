{
  "hash": "9c3283df9ea563418298d2b4b767366f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Denoising Diffusion Implicit Models - DDIM\njupyter: python3\n---\n\n::: {#d81158bc .cell execution_count=1}\n``` {.python .cell-code}\nimport pickle,gzip,math,os,time,shutil,torch,random,logging\nimport fastcore.all as fc,matplotlib as mpl,numpy as np,matplotlib.pyplot as plt\nfrom collections.abc import Mapping\nfrom pathlib import Path\nfrom functools import partial\n\nfrom fastcore.foundation import L\nimport torchvision.transforms.functional as TF,torch.nn.functional as F\nfrom torch import tensor,nn,optim\nfrom torch.utils.data import DataLoader,default_collate\nfrom torch.nn import init\nfrom torch.optim import lr_scheduler\n\nfrom miniai.datasets import *\nfrom miniai.conv import *\nfrom miniai.learner import *\nfrom miniai.activations import *\nfrom miniai.init import *\nfrom miniai.sgd import *\nfrom miniai.resnet import *\nfrom miniai.augment import *\nfrom miniai.accel import *\nfrom miniai.fid import *\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[1], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pickle</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">gzip</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">os</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">time</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">shutil</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">logging</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">collections</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">abc</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Mapping\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pathlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Path\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'fastcore'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0ce9c5c8 .cell execution_count=2}\n``` {.python .cell-code}\nfrom fastprogress.fastprogress import progress_bar\n```\n:::\n\n\n::: {#3f218831 .cell execution_count=3}\n``` {.python .cell-code}\nfrom torcheval.metrics import MulticlassAccuracy\nfrom datasets import load_dataset,load_dataset_builder\n\nmpl.rcParams['image.cmap'] = 'gray_r'\nlogging.disable(logging.WARNING)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[3], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> MulticlassAccuracy\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">datasets</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> load_dataset,load_dataset_builder\n<span class=\"ansi-green-fg ansi-bold\">      4</span> mpl<span style=\"color:rgb(98,98,98)\">.</span>rcParams[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">image.cmap</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">gray_r</span><span style=\"color:rgb(175,0,0)\">'</span>\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'torcheval'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2d91ec30 .cell execution_count=4}\n``` {.python .cell-code}\nxl,yl = 'image','label'\nname = \"fashion_mnist\"\ndsd = load_dataset(name)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> xl,yl <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">image</span><span style=\"color:rgb(175,0,0)\">'</span>,<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">label</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> name <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">fashion_mnist</span><span style=\"color:rgb(175,0,0)\">\"</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> dsd <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">load_dataset</span>(name)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'load_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#563f4837 .cell execution_count=5}\n``` {.python .cell-code}\nfrom diffusers import UNet2DModel, DDIMPipeline, DDPMPipeline, DDIMScheduler, DDPMScheduler\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[5], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">diffusers</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> UNet2DModel, DDIMPipeline, DDPMPipeline, DDIMScheduler, DDPMScheduler\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'diffusers'</pre>\n```\n:::\n\n:::\n:::\n\n\n## Diffusers DDPM Scheduler\n\n::: {#af98003c .cell execution_count=6}\n``` {.python .cell-code}\nclass UNet(UNet2DModel): pass\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[6], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">UNet</span>(UNet2DModel): <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'UNet2DModel' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b15b4925 .cell execution_count=7}\n``` {.python .cell-code}\nmodel = torch.load('models/fashion_ddpm3_25.pkl').cuda()\n# model = torch.load('models/fashion_no-t.pkl').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[7], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">load</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">models/fashion_ddpm3_25.pkl</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\">.</span>cuda()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># model = torch.load('models/fashion_no-t.pkl').cuda()</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:997</span>, in <span class=\"ansi-cyan-fg\">load</span><span class=\"ansi-blue-fg\">(f, map_location, pickle_module, weights_only, mmap, **pickle_load_args)</span>\n<span class=\"ansi-green-fg ansi-bold\">    994</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">encoding</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> pickle_load_args<span style=\"color:rgb(98,98,98)\">.</span>keys():\n<span class=\"ansi-green-fg ansi-bold\">    995</span>     pickle_load_args[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">encoding</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">utf-8</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg\">--&gt; 997</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span class=\"ansi-yellow-bg\">_open_file_like</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">rb</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> opened_file:\n<span class=\"ansi-green-fg ansi-bold\">    998</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> _is_zipfile(opened_file):\n<span class=\"ansi-green-fg ansi-bold\">    999</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># The zipfile reader is going to advance the current file position.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1000</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># If we want to actually tail call to torch.jit.load, we need to</span>\n<span class=\"ansi-green-fg ansi-bold\">   1001</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># reset back to the original position.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1002</span>         orig_position <span style=\"color:rgb(98,98,98)\">=</span> opened_file<span style=\"color:rgb(98,98,98)\">.</span>tell()\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:444</span>, in <span class=\"ansi-cyan-fg\">_open_file_like</span><span class=\"ansi-blue-fg\">(name_or_buffer, mode)</span>\n<span class=\"ansi-green-fg ansi-bold\">    442</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_open_file_like</span>(name_or_buffer, mode):\n<span class=\"ansi-green-fg ansi-bold\">    443</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> _is_path(name_or_buffer):\n<span class=\"ansi-green-fg\">--&gt; 444</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_open_file</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name_or_buffer</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    445</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">    446</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">w</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> mode:\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:425</span>, in <span class=\"ansi-cyan-fg\">_open_file.__init__</span><span class=\"ansi-blue-fg\">(self, name, mode)</span>\n<span class=\"ansi-green-fg ansi-bold\">    424</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, name, mode):\n<span class=\"ansi-green-fg\">--&gt; 425</span>     <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">open</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">)</span>)\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: 'models/fashion_ddpm3_25.pkl'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ed92fa7a .cell execution_count=8}\n``` {.python .cell-code}\nsched = DDPMScheduler(beta_end=0.01)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[8], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sched <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">DDPMScheduler</span>(beta_end<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'DDPMScheduler' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#bb51c478 .cell execution_count=9}\n``` {.python .cell-code}\nx_t = torch.randn((32,1,32,32)).cuda()\n```\n:::\n\n\n::: {#18765907 .cell execution_count=10}\n``` {.python .cell-code}\nt = 999\nt_batch = torch.full((len(x_t),), t, device=x_t.device, dtype=torch.long)\nwith torch.no_grad(): noise = model(x_t, t_batch).sample\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">999</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> t_batch <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>full((<span style=\"color:rgb(0,135,0)\">len</span>(x_t),), t, device<span style=\"color:rgb(98,98,98)\">=</span>x_t<span style=\"color:rgb(98,98,98)\">.</span>device, dtype<span style=\"color:rgb(98,98,98)\">=</span>torch<span style=\"color:rgb(98,98,98)\">.</span>long)\n<span class=\"ansi-green-fg\">----&gt; 3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> torch<span style=\"color:rgb(98,98,98)\">.</span>no_grad(): noise <span style=\"color:rgb(98,98,98)\">=</span> model(x_t, t_batch)<span style=\"color:rgb(98,98,98)\">.</span>sample\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4d58c6ae .cell execution_count=11}\n``` {.python .cell-code}\nres = sched.step(noise, t, x_t)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[11], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> res <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">sched</span><span style=\"color:rgb(98,98,98)\">.</span>step(noise, t, x_t)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sched' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f80f1ade .cell execution_count=12}\n``` {.python .cell-code}\nres.prev_sample.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[12], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">res</span><span style=\"color:rgb(98,98,98)\">.</span>prev_sample<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'res' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#736e3bec .cell execution_count=13}\n``` {.python .cell-code}\nsz = (2048,1,32,32)\n```\n:::\n\n\n::: {#756cb477 .cell execution_count=14}\n``` {.python .cell-code}\n%%time\nx_t = torch.randn(sz).cuda()\npreds = []\n\nfor t in progress_bar(sched.timesteps):\n    with torch.no_grad(): noise = model(x_t, t).sample\n    x_t = sched.step(noise, t, x_t).prev_sample\n    preds.append(x_t.float().cpu())\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:4</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sched' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#79c606ef .cell execution_count=15}\n``` {.python .cell-code}\ns = preds[-1].clamp(-0.5,0.5)*2\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">IndexError</span>                                Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[15], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">preds</span><span class=\"ansi-yellow-bg\">[</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">-</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">1</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">0.5</span>,<span style=\"color:rgb(98,98,98)\">0.5</span>)<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>\n\n<span class=\"ansi-red-fg\">IndexError</span>: list index out of range</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#86d8ea11 .cell execution_count=16}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[16], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#29d7914c .cell execution_count=17}\n``` {.python .cell-code}\ncmodel = torch.load('models/data_aug2.pkl')\ndel(cmodel[8])\ndel(cmodel[7])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[17], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> cmodel <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">load</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">models/data_aug2.pkl</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(cmodel[<span style=\"color:rgb(98,98,98)\">8</span>])\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(cmodel[<span style=\"color:rgb(98,98,98)\">7</span>])\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:997</span>, in <span class=\"ansi-cyan-fg\">load</span><span class=\"ansi-blue-fg\">(f, map_location, pickle_module, weights_only, mmap, **pickle_load_args)</span>\n<span class=\"ansi-green-fg ansi-bold\">    994</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">encoding</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> pickle_load_args<span style=\"color:rgb(98,98,98)\">.</span>keys():\n<span class=\"ansi-green-fg ansi-bold\">    995</span>     pickle_load_args[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">encoding</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">utf-8</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg\">--&gt; 997</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span class=\"ansi-yellow-bg\">_open_file_like</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">rb</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> opened_file:\n<span class=\"ansi-green-fg ansi-bold\">    998</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> _is_zipfile(opened_file):\n<span class=\"ansi-green-fg ansi-bold\">    999</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># The zipfile reader is going to advance the current file position.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1000</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># If we want to actually tail call to torch.jit.load, we need to</span>\n<span class=\"ansi-green-fg ansi-bold\">   1001</span>         <span style=\"font-style:italic;color:rgb(95,135,135)\"># reset back to the original position.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1002</span>         orig_position <span style=\"color:rgb(98,98,98)\">=</span> opened_file<span style=\"color:rgb(98,98,98)\">.</span>tell()\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:444</span>, in <span class=\"ansi-cyan-fg\">_open_file_like</span><span class=\"ansi-blue-fg\">(name_or_buffer, mode)</span>\n<span class=\"ansi-green-fg ansi-bold\">    442</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_open_file_like</span>(name_or_buffer, mode):\n<span class=\"ansi-green-fg ansi-bold\">    443</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> _is_path(name_or_buffer):\n<span class=\"ansi-green-fg\">--&gt; 444</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_open_file</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name_or_buffer</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    445</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">    446</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">w</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> mode:\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/serialization.py:425</span>, in <span class=\"ansi-cyan-fg\">_open_file.__init__</span><span class=\"ansi-blue-fg\">(self, name, mode)</span>\n<span class=\"ansi-green-fg ansi-bold\">    424</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, name, mode):\n<span class=\"ansi-green-fg\">--&gt; 425</span>     <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">open</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">mode</span><span class=\"ansi-yellow-bg\">)</span>)\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: 'models/data_aug2.pkl'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#faa205cd .cell execution_count=18}\n``` {.python .cell-code}\n@inplace\ndef transformi(b): b[xl] = [F.pad(TF.to_tensor(o), (2,2,2,2))*2-1 for o in b[xl]]\n\nbs = 2048\ntds = dsd.with_transform(transformi)\ndls = DataLoaders.from_dd(tds, bs, num_workers=fc.defaults.cpus)\n\ndt = dls.train\nxb,yb = next(iter(dt))\n\nie = ImageEval(cmodel, dls, cbs=[DeviceCB()])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[18], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@inplace</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">transformi</span>(b): b[xl] <span style=\"color:rgb(98,98,98)\">=</span> [F<span style=\"color:rgb(98,98,98)\">.</span>pad(TF<span style=\"color:rgb(98,98,98)\">.</span>to_tensor(o), (<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>))<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span><span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> b[xl]]\n<span class=\"ansi-green-fg ansi-bold\">      4</span> bs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">2048</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'inplace' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a29fdc0a .cell execution_count=19}\n``` {.python .cell-code}\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[19], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a8d1473f .cell execution_count=20}\n``` {.python .cell-code}\nie.fid(xb),ie.kid(xb)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[20], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(xb),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(xb)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Diffusers DDIM Scheduler\n\n::: {#c2ef4ec1 .cell execution_count=21}\n``` {.python .cell-code}\nsched = DDIMScheduler(beta_end=0.01)\nsched.set_timesteps(333)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[21], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sched <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">DDIMScheduler</span>(beta_end<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> sched<span style=\"color:rgb(98,98,98)\">.</span>set_timesteps(<span style=\"color:rgb(98,98,98)\">333</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'DDIMScheduler' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6d42e0ae .cell execution_count=22}\n``` {.python .cell-code}\ndef diff_sample(model, sz, sched, **kwargs):\n    x_t = torch.randn(sz).cuda()\n    preds = []\n    for t in progress_bar(sched.timesteps):\n        with torch.no_grad(): noise = model(x_t, t).sample\n        x_t = sched.step(noise, t, x_t, **kwargs).prev_sample\n        preds.append(x_t.float().cpu())\n    return preds\n```\n:::\n\n\n::: {#18c632fc .cell execution_count=23}\n``` {.python .cell-code}\npreds = diff_sample(model, sz, sched, eta=1.)\ns = (preds[-1]*2).clamp(-1,1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> preds <span style=\"color:rgb(98,98,98)\">=</span> diff_sample(<span class=\"ansi-yellow-bg\">model</span>, sz, sched, eta<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> s <span style=\"color:rgb(98,98,98)\">=</span> (preds[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#69916e99 .cell execution_count=24}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[24], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b2d8b892 .cell execution_count=25}\n``` {.python .cell-code}\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[25], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#57035133 .cell execution_count=26}\n``` {.python .cell-code}\nsched.set_timesteps(200)\npreds = diff_sample(model, sz, sched, eta=1.)\ns = (preds[-1]*2).clamp(-1,1)\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[26], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">sched</span><span style=\"color:rgb(98,98,98)\">.</span>set_timesteps(<span style=\"color:rgb(98,98,98)\">200</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> preds <span style=\"color:rgb(98,98,98)\">=</span> diff_sample(model, sz, sched, eta<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> s <span style=\"color:rgb(98,98,98)\">=</span> (preds[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sched' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#de63db85 .cell execution_count=27}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c88ddb84 .cell execution_count=28}\n``` {.python .cell-code}\nsched.set_timesteps(100)\npreds = diff_sample(model, sz, sched, eta=1.)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[28], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">sched</span><span style=\"color:rgb(98,98,98)\">.</span>set_timesteps(<span style=\"color:rgb(98,98,98)\">100</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> preds <span style=\"color:rgb(98,98,98)\">=</span> diff_sample(model, sz, sched, eta<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sched' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7cf36302 .cell execution_count=29}\n``` {.python .cell-code}\ns = (preds[-1]*2).clamp(-1,1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">IndexError</span>                                Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[29], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">preds</span><span class=\"ansi-yellow-bg\">[</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">-</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">1</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">IndexError</span>: list index out of range</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#008bc16c .cell execution_count=30}\n``` {.python .cell-code}\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[30], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b5198208 .cell execution_count=31}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[31], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6b71fb1e .cell execution_count=32}\n``` {.python .cell-code}\nsched.set_timesteps(50)\npreds = diff_sample(model, sz, sched, eta=1.)\ns = (preds[-1]*2).clamp(-1,1)\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[32], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">sched</span><span style=\"color:rgb(98,98,98)\">.</span>set_timesteps(<span style=\"color:rgb(98,98,98)\">50</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> preds <span style=\"color:rgb(98,98,98)\">=</span> diff_sample(model, sz, sched, eta<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> s <span style=\"color:rgb(98,98,98)\">=</span> (preds[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sched' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#cfb2763a .cell execution_count=33}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[33], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#211b0783 .cell execution_count=34}\n``` {.python .cell-code}\nsched.set_timesteps(25)\npreds = diff_sample(model, sz, sched, eta=1.)\ns = (preds[-1]*2).clamp(-1,1)\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[34], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">sched</span><span style=\"color:rgb(98,98,98)\">.</span>set_timesteps(<span style=\"color:rgb(98,98,98)\">25</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> preds <span style=\"color:rgb(98,98,98)\">=</span> diff_sample(model, sz, sched, eta<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> s <span style=\"color:rgb(98,98,98)\">=</span> (preds[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sched' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e1702957 .cell execution_count=35}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Implementing DDIM\n\n::: {#b10ac35c .cell execution_count=36}\n``` {.python .cell-code}\nfrom types import SimpleNamespace\n```\n:::\n\n\n::: {#1e299a8d .cell execution_count=37}\n``` {.python .cell-code}\nn_steps=1000\n```\n:::\n\n\n::: {#a23b083e .cell execution_count=38}\n``` {.python .cell-code}\ndef linear_sched(betamin=0.0001,betamax=0.02,n_steps=1000):\n    beta = torch.linspace(betamin, betamax, n_steps)\n    return SimpleNamespace(a=1.-beta, abar=(1.-beta).cumprod(dim=0), sig=beta.sqrt())\n```\n:::\n\n\n::: {#971c6793 .cell execution_count=39}\n``` {.python .cell-code}\nsc = linear_sched(betamax=0.01, n_steps=n_steps)\nabar = sc.abar\n```\n:::\n\n\n![image.png](attachment:image.png)\n\n::: {#0e1467b1 .cell execution_count=40}\n``` {.python .cell-code}\ndef ddim_step(x_t, t, noise, abar_t, abar_t1, bbar_t, bbar_t1, eta):\n    vari = ((bbar_t1/bbar_t) * (1-abar_t/abar_t1))\n    sig = vari.sqrt()*eta\n    x_0_hat = ((x_t-bbar_t.sqrt()*noise) / abar_t.sqrt())\n    x_t = abar_t1.sqrt()*x_0_hat + (bbar_t1-sig**2).sqrt()*noise\n    if t>0: x_t += sig * torch.randn(x_t.shape).to(x_t)\n    return x_t\n```\n:::\n\n\n::: {#163ffe9c .cell execution_count=41}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample(f, model, sz, n_steps, skips=1, eta=1.):\n    tsteps = list(reversed(range(0, n_steps, skips)))\n    x_t = torch.randn(sz).to(model.device)\n    preds = []\n    for i,t in enumerate(progress_bar(tsteps)):\n        abar_t1 = abar[tsteps[i+1]] if t > 0 else torch.tensor(1)\n        noise = model(x_t,t).sample\n        x_t = f(x_t, t, noise, abar[t], abar_t1, 1-abar[t], 1-abar_t1, eta)\n        preds.append(x_t.float().cpu())\n    return preds\n```\n:::\n\n\n::: {#515e9dab .cell execution_count=42}\n``` {.python .cell-code}\n%%time\nsamples = sample(ddim_step, model, sz, 1000, 10)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e17a4709 .cell execution_count=43}\n``` {.python .cell-code}\ns = (samples[-1]*2)#.clamp(-1,1)\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">samples</span>[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"font-style:italic;color:rgb(95,135,135)\">#.clamp(-1,1)</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> show_images(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'samples' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#35155533 .cell execution_count=44}\n``` {.python .cell-code}\nie.fid(s),ie.kid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Triangular noise\n\n::: {#51ede627 .cell execution_count=45}\n``` {.python .cell-code}\ndef noisify(x0, ᾱ):\n    device = x0.device\n    n = len(x0)\n    t = torch.randint(0, n_steps, (n,), dtype=torch.long)\n    t = np.random.triangular(0, 0.5, 1, (n,))*n_steps\n    t = tensor(t, dtype=torch.long)\n    ε = torch.randn(x0.shape, device=device)\n    ᾱ_t = ᾱ[t].reshape(-1, 1, 1, 1).to(device)\n    xt = ᾱ_t.sqrt()*x0 + (1-ᾱ_t).sqrt()*ε\n    return (xt, t.to(device)), ε\n```\n:::\n\n\n::: {#9bc47669 .cell execution_count=46}\n``` {.python .cell-code}\n(xt,t),ε = noisify(xb,abar)\nplt.hist(t);\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[46], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> (xt,t),ε <span style=\"color:rgb(98,98,98)\">=</span> noisify(<span class=\"ansi-yellow-bg\">xb</span>,abar)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>hist(t);\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'xb' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "20_DDIM_files"
    ],
    "filters": [],
    "includes": {}
  }
}