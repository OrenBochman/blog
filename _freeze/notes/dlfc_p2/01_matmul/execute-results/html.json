{
  "hash": "8151d61b1255cdfd218d6b61ca125155",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Matrix multiplication from foundations\njupyter: python3\nimage: cover.png\n---\n\n\n\n\nThe *foundations* we'll assume throughout this course are:\n\n- Python\n- matplotlib\n- The Python standard library\n- Jupyter notebooks and nbdev\n\n::: {#ad7ebf8c .cell execution_count=1}\n``` {.python .cell-code}\nfrom pathlib import Path\nimport pickle, gzip, math, os, time, shutil, matplotlib as mpl, matplotlib.pyplot as plt\n```\n:::\n\n\n## Get data\n\n::: {#3022df51 .cell execution_count=2}\n``` {.python .cell-code}\nMNIST_URL='https://github.com/mnielsen/neural-networks-and-deep-learning/blob/master/data/mnist.pkl.gz?raw=true'\npath_data = Path('data')\npath_data.mkdir(exist_ok=True)\npath_gz = path_data/'mnist.pkl.gz'\n```\n:::\n\n\n[urlretrieve](https://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve) - (read the docs!)\n\n::: {#40daf81c .cell execution_count=3}\n``` {.python .cell-code}\nfrom urllib.request import urlretrieve\nif not path_gz.exists(): urlretrieve(MNIST_URL, path_gz)\n```\n:::\n\n\n::: {#f3ef6367 .cell execution_count=4}\n``` {.python .cell-code}\n!ls -l data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntotal 16656\r\n-rw-rw-r-- 1 oren oren 17051982 Jan 14 15:14 mnist.pkl.gz\r\n```\n:::\n:::\n\n\n::: {#a23c4701 .cell execution_count=5}\n``` {.python .cell-code}\nwith gzip.open(path_gz, 'rb') as f: ((x_train, y_train), (x_valid, y_valid), _) = pickle.load(f, encoding='latin-1')\n```\n:::\n\n\n::: {#5f3ba3f1 .cell execution_count=6}\n``` {.python .cell-code}\nlst1 = list(x_train[0])\nvals = lst1[200:210]\nvals\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n[0.0,\n 0.0,\n 0.0,\n 0.19140625,\n 0.9296875,\n 0.98828125,\n 0.98828125,\n 0.98828125,\n 0.98828125,\n 0.98828125]\n```\n:::\n:::\n\n\n::: {#daa3b5c9 .cell execution_count=7}\n``` {.python .cell-code}\ndef chunks(x, sz):\n    for i in range(0, len(x), sz): yield x[i:i+sz]\n```\n:::\n\n\n::: {#5b236f4f .cell execution_count=8}\n``` {.python .cell-code}\nlist(chunks(vals, 5))\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n[[0.0, 0.0, 0.0, 0.19140625, 0.9296875],\n [0.98828125, 0.98828125, 0.98828125, 0.98828125, 0.98828125]]\n```\n:::\n:::\n\n\n::: {#8d9c5606 .cell execution_count=9}\n``` {.python .cell-code}\nmpl.rcParams['image.cmap'] = 'gray'\nplt.imshow(list(chunks(lst1, 28)));\n```\n\n::: {.cell-output .cell-output-display}\n![](01_matmul_files/figure-html/cell-10-output-1.png){width=415 height=411}\n:::\n:::\n\n\n[islice](https://docs.python.org/3/library/itertools.html#itertools.islice)\n\n::: {#5caca265 .cell execution_count=10}\n``` {.python .cell-code}\nfrom itertools import islice\n```\n:::\n\n\n::: {#8e967d13 .cell execution_count=11}\n``` {.python .cell-code}\nit = iter(vals)\nislice(it, 5)\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n<itertools.islice at 0x7b740ad50270>\n```\n:::\n:::\n\n\n::: {#7fe90088 .cell execution_count=12}\n``` {.python .cell-code}\nlist(islice(it, 5))\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n[0.0, 0.0, 0.0, 0.19140625, 0.9296875]\n```\n:::\n:::\n\n\n::: {#ca403e43 .cell execution_count=13}\n``` {.python .cell-code}\nlist(islice(it, 5))\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n[0.98828125, 0.98828125, 0.98828125, 0.98828125, 0.98828125]\n```\n:::\n:::\n\n\n::: {#b6554afe .cell execution_count=14}\n``` {.python .cell-code}\nlist(islice(it, 5))\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n[]\n```\n:::\n:::\n\n\n::: {#efde0ce7 .cell execution_count=15}\n``` {.python .cell-code}\nit = iter(lst1)\nimg = list(iter(lambda: list(islice(it, 28)), []))\n```\n:::\n\n\n::: {#66af2f8a .cell execution_count=16}\n``` {.python .cell-code}\nplt.imshow(img);\n```\n\n::: {.cell-output .cell-output-display}\n![](01_matmul_files/figure-html/cell-17-output-1.png){width=415 height=411}\n:::\n:::\n\n\n## Matrix and tensor\n\n::: {#b2455f79 .cell execution_count=17}\n``` {.python .cell-code}\nimg[20][15]\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\n0.98828125\n```\n:::\n:::\n\n\n::: {#747b759b .cell execution_count=18}\n``` {.python .cell-code}\nclass Matrix:\n    def __init__(self, xs): self.xs = xs\n    def __getitem__(self, idxs): return self.xs[idxs[0]][idxs[1]]\n```\n:::\n\n\n::: {#1bc14cc4 .cell execution_count=19}\n``` {.python .cell-code}\nm = Matrix(img)\nm[20,15]\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n0.98828125\n```\n:::\n:::\n\n\n::: {#3bbe9d42 .cell execution_count=20}\n``` {.python .cell-code}\nimport torch\nfrom torch import tensor\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[20], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> tensor\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e437c0d9 .cell execution_count=21}\n``` {.python .cell-code}\ntensor([1,2,3])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[21], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">tensor</span>([<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">3</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#27ce5aa5 .cell execution_count=22}\n``` {.python .cell-code}\nx_train,y_train,x_valid,y_valid = map(tensor, (x_train,y_train,x_valid,y_valid))\nx_train.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[22], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> x_train,y_train,x_valid,y_valid <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">map</span>(<span class=\"ansi-yellow-bg\">tensor</span>, (x_train,y_train,x_valid,y_valid))\n<span class=\"ansi-green-fg ansi-bold\">      2</span> x_train<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#484899da .cell execution_count=23}\n``` {.python .cell-code}\nx_train.type()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">x_train</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">type</span>()\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'numpy.ndarray' object has no attribute 'type'</pre>\n```\n:::\n\n:::\n:::\n\n\n[Tensor](https://pytorch.org/docs/stable/tensors.html)\n\n::: {#0ab3f6c0 .cell execution_count=24}\n``` {.python .cell-code}\nimgs = x_train.reshape((-1,28,28))\nimgs.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\n(50000, 28, 28)\n```\n:::\n:::\n\n\n::: {#7b1e09d4 .cell execution_count=25}\n``` {.python .cell-code}\nplt.imshow(imgs[0]);\n```\n\n::: {.cell-output .cell-output-display}\n![](01_matmul_files/figure-html/cell-26-output-1.png){width=415 height=411}\n:::\n:::\n\n\n::: {#5a20f0e5 .cell execution_count=26}\n``` {.python .cell-code}\nimgs[0,20,15]\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```\n0.98828125\n```\n:::\n:::\n\n\n::: {#7e32f976 .cell execution_count=27}\n``` {.python .cell-code}\nn,c = x_train.shape\ny_train, y_train.shape\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```\n(array([5, 0, 4, ..., 8, 4, 8]), (50000,))\n```\n:::\n:::\n\n\n::: {#081fdab9 .cell execution_count=28}\n``` {.python .cell-code}\nmin(y_train),max(y_train)\n```\n\n::: {.cell-output .cell-output-display execution_count=28}\n```\n(0, 9)\n```\n:::\n:::\n\n\n::: {#518a2e1f .cell execution_count=29}\n``` {.python .cell-code}\ny_train.min(), y_train.max()\n```\n\n::: {.cell-output .cell-output-display execution_count=29}\n```\n(0, 9)\n```\n:::\n:::\n\n\n## Random numbers\n\nBased on the Wichmann Hill algorithm used before Python 2.3.\n\n::: {#8c4bb46c .cell execution_count=30}\n``` {.python .cell-code}\nrnd_state = None\ndef seed(a):\n    global rnd_state\n    a, x = divmod(a, 30268)\n    a, y = divmod(a, 30306)\n    a, z = divmod(a, 30322)\n    rnd_state = int(x)+1, int(y)+1, int(z)+1\n```\n:::\n\n\n::: {#580c3a0b .cell execution_count=31}\n``` {.python .cell-code}\nseed(457428938475)\nrnd_state\n```\n\n::: {.cell-output .cell-output-display execution_count=31}\n```\n(4976, 20238, 499)\n```\n:::\n:::\n\n\n::: {#cf29ecf4 .cell execution_count=32}\n``` {.python .cell-code}\ndef rand():\n    global rnd_state\n    x, y, z = rnd_state\n    x = (171 * x) % 30269\n    y = (172 * y) % 30307\n    z = (170 * z) % 30323\n    rnd_state = x,y,z\n    return (x/30269 + y/30307 + z/30323) % 1.0\n```\n:::\n\n\n::: {#41735994 .cell execution_count=33}\n``` {.python .cell-code}\nrand(),rand(),rand()\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```\n(0.7645251082582081, 0.7920889799553945, 0.06912886811267205)\n```\n:::\n:::\n\n\n::: {#0cfc3115 .cell execution_count=34}\n``` {.python .cell-code}\nif os.fork(): print(f'In parent: {rand()}')\nelse:\n    print(f'In child: {rand()}')\n    os._exit(os.EX_OK)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIn parent: 0.9559050644103264\n```\n:::\n:::\n\n\n::: {#91c799a4 .cell execution_count=35}\n``` {.python .cell-code}\nif os.fork(): print(f'In parent: {torch.rand(1)}')\nelse:\n    print(f'In child: {torch.rand(1)}')\n    os._exit(os.EX_OK)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> os<span style=\"color:rgb(98,98,98)\">.</span>fork(): <span style=\"color:rgb(0,135,0)\">print</span>(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">In parent: </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>torch<span style=\"color:rgb(98,98,98)\">.</span>rand(<span style=\"color:rgb(98,98,98)\">1</span>)<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     <span style=\"color:rgb(0,135,0)\">print</span>(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">In child: </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>torch<span style=\"color:rgb(98,98,98)\">.</span>rand(<span style=\"color:rgb(98,98,98)\">1</span>)<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#be0ce2e7 .cell execution_count=36}\n``` {.python .cell-code}\nplt.plot([rand() for _ in range(50)]);\n```\n\n::: {.cell-output .cell-output-display}\n![](01_matmul_files/figure-html/cell-37-output-1.png){width=571 height=411}\n:::\n:::\n\n\n::: {#d68f12d0 .cell execution_count=37}\n``` {.python .cell-code}\nplt.hist([rand() for _ in range(10000)]);\n```\n\n::: {.cell-output .cell-output-display}\n![](01_matmul_files/figure-html/cell-38-output-1.png){width=583 height=411}\n:::\n:::\n\n\n::: {#5e56017c .cell execution_count=38}\n``` {.python .cell-code}\n%timeit -n 10 list(chunks([rand() for _ in range(7840)], 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n6.38 ms ± 486 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n```\n:::\n:::\n\n\n::: {#0e06028c .cell execution_count=39}\n``` {.python .cell-code}\n%timeit -n 10 torch.randn(784,10)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[39], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 10 torch.randn(784,10)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Matrix multiplication\n\n::: {#1411b6bb .cell execution_count=40}\n``` {.python .cell-code}\ntorch.manual_seed(1)\nweights = torch.randn(784,10)\nbias = torch.zeros(10)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[40], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>manual_seed(<span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> weights <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(<span style=\"color:rgb(98,98,98)\">784</span>,<span style=\"color:rgb(98,98,98)\">10</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> bias <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>zeros(<span style=\"color:rgb(98,98,98)\">10</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b0ac7e7e .cell execution_count=41}\n``` {.python .cell-code}\nm1 = x_valid[:5]\nm2 = weights\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> m1 <span style=\"color:rgb(98,98,98)\">=</span> x_valid[:<span style=\"color:rgb(98,98,98)\">5</span>]\n<span class=\"ansi-green-fg\">----&gt; 2</span> m2 <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">weights</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'weights' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ae01f221 .cell execution_count=42}\n``` {.python .cell-code}\nm1.shape,m2.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m1<span style=\"color:rgb(98,98,98)\">.</span>shape,<span class=\"ansi-yellow-bg\">m2</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#93f98204 .cell execution_count=43}\n``` {.python .cell-code}\nar,ac = m1.shape # n_rows * n_cols\nbr,bc = m2.shape\n(ar,ac),(br,bc)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> ar,ac <span style=\"color:rgb(98,98,98)\">=</span> m1<span style=\"color:rgb(98,98,98)\">.</span>shape <span style=\"font-style:italic;color:rgb(95,135,135)\"># n_rows * n_cols</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> br,bc <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">m2</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n<span class=\"ansi-green-fg ansi-bold\">      3</span> (ar,ac),(br,bc)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8b3412ba .cell execution_count=44}\n``` {.python .cell-code}\nt1 = torch.zeros(ar, bc)\nt1.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> t1 <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>zeros(ar, bc)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> t1<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8df59e0c .cell execution_count=45}\n``` {.python .cell-code}\nfor i in range(ar):         # 5\n    for j in range(bc):     # 10\n        for k in range(ac): # 784\n            t1[i,j] += m1[i,k] * m2[k,j]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[45], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(ar):         <span style=\"font-style:italic;color:rgb(95,135,135)\"># 5</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> j <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(<span class=\"ansi-yellow-bg\">bc</span>):     <span style=\"font-style:italic;color:rgb(95,135,135)\"># 10</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> k <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(ac): <span style=\"font-style:italic;color:rgb(95,135,135)\"># 784</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span>             t1[i,j] <span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">=</span> m1[i,k] <span style=\"color:rgb(98,98,98)\">*</span> m2[k,j]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'bc' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1842e493 .cell execution_count=46}\n``` {.python .cell-code}\nt1\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[46], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">t1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4912ade9 .cell execution_count=47}\n``` {.python .cell-code}\nt1.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">t1</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#32f190ba .cell execution_count=48}\n``` {.python .cell-code}\ntorch.set_printoptions(precision=2, linewidth=140, sci_mode=False)\nt1\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>set_printoptions(precision<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>, linewidth<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">140</span>, sci_mode<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> t1\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2297e8c8 .cell execution_count=49}\n``` {.python .cell-code}\nimport numpy as np\nnp.set_printoptions(precision=2, linewidth=140)\n```\n:::\n\n\n::: {#6edce934 .cell execution_count=50}\n``` {.python .cell-code}\ndef matmul(a,b):\n    (ar,ac),(br,bc) = a.shape,b.shape\n    c = torch.zeros(ar, bc)\n    for i in range(ar):\n        for j in range(bc):\n            for k in range(ac): c[i,j] += a[i,k] * b[k,j]\n    return c\n```\n:::\n\n\n::: {#39dc994e .cell execution_count=51}\n``` {.python .cell-code}\n%time _=matmul(m1, m2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#82ce99d2 .cell execution_count=52}\n``` {.python .cell-code}\nar*bc*ac\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[52], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> ar<span style=\"color:rgb(98,98,98)\">*</span><span class=\"ansi-yellow-bg\">bc</span><span style=\"color:rgb(98,98,98)\">*</span>ac\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'bc' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Numba\n\n::: {#e6e0c755 .cell execution_count=53}\n``` {.python .cell-code}\nfrom numba import njit\n```\n:::\n\n\n::: {#34e8efb9 .cell execution_count=54}\n``` {.python .cell-code}\n@njit\ndef dot(a,b):\n    res = 0.\n    for i in range(len(a)): res+=a[i]*b[i]\n    return res\n```\n:::\n\n\n::: {#4d8afe73 .cell execution_count=55}\n``` {.python .cell-code}\nfrom numpy import array\n```\n:::\n\n\n::: {#cd11b05e .cell execution_count=56}\n``` {.python .cell-code}\n%time dot(array([1.,2,3]),array([2.,3,4]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCPU times: user 558 ms, sys: 785 ms, total: 1.34 s\nWall time: 829 ms\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=56}\n```\n20.0\n```\n:::\n:::\n\n\n::: {#3d2e3096 .cell execution_count=57}\n``` {.python .cell-code}\n%time dot(array([1.,2,3]),array([2.,3,4]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCPU times: user 10 µs, sys: 9 µs, total: 19 µs\nWall time: 21.5 µs\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=57}\n```\n20.0\n```\n:::\n:::\n\n\nNow only two of our loops are running in Python, not three:\n\n::: {#fcb0c03e .cell execution_count=58}\n``` {.python .cell-code}\ndef matmul(a,b):\n    (ar,ac),(br,bc) = a.shape,b.shape\n    c = torch.zeros(ar, bc)\n    for i in range(ar):\n        for j in range(bc): c[i,j] = dot(a[i,:], b[:,j])\n    return c\n```\n:::\n\n\n::: {#cbd2d7c8 .cell execution_count=59}\n``` {.python .cell-code}\nm1a,m2a = m1.numpy(),m2.numpy()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[59], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m1a,m2a <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">m1</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">numpy</span>(),m2<span style=\"color:rgb(98,98,98)\">.</span>numpy()\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'numpy.ndarray' object has no attribute 'numpy'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#547790cb .cell execution_count=60}\n``` {.python .cell-code}\nfrom fastcore.test import *\n```\n:::\n\n\n::: {#2f7446c4 .cell execution_count=61}\n``` {.python .cell-code}\ntest_close(t1,matmul(m1a, m2a))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[61], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> test_close(<span class=\"ansi-yellow-bg\">t1</span>,matmul(m1a, m2a))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0eca9a13 .cell execution_count=62}\n``` {.python .cell-code}\n%timeit -n 50 matmul(m1a,m2a)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[62], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 50 matmul(m1a,m2a)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm1a' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Elementwise ops\n\n[TryAPL](https://tryapl.org/)\n\n::: {#f3a61137 .cell execution_count=63}\n``` {.python .cell-code}\na = tensor([10., 6, -4])\nb = tensor([2., 8, 7])\na,b\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[63], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> a <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">tensor</span>([<span style=\"color:rgb(98,98,98)\">10.</span>, <span style=\"color:rgb(98,98,98)\">6</span>, <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">4</span>])\n<span class=\"ansi-green-fg ansi-bold\">      2</span> b <span style=\"color:rgb(98,98,98)\">=</span> tensor([<span style=\"color:rgb(98,98,98)\">2.</span>, <span style=\"color:rgb(98,98,98)\">8</span>, <span style=\"color:rgb(98,98,98)\">7</span>])\n<span class=\"ansi-green-fg ansi-bold\">      3</span> a,b\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#78e5778b .cell execution_count=64}\n``` {.python .cell-code}\na + b\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[64], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">a</span> <span style=\"color:rgb(98,98,98)\">+</span> b\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'a' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ab0123d7 .cell execution_count=65}\n``` {.python .cell-code}\n(a < b).float().mean()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[65], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> (<span class=\"ansi-yellow-bg\">a</span> <span style=\"color:rgb(98,98,98)\">&lt;</span> b)<span style=\"color:rgb(98,98,98)\">.</span>float()<span style=\"color:rgb(98,98,98)\">.</span>mean()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'a' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#bc462429 .cell execution_count=66}\n``` {.python .cell-code}\nm = tensor([[1., 2, 3], [4,5,6], [7,8,9]]); m\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[66], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">tensor</span>([[<span style=\"color:rgb(98,98,98)\">1.</span>, <span style=\"color:rgb(98,98,98)\">2</span>, <span style=\"color:rgb(98,98,98)\">3</span>], [<span style=\"color:rgb(98,98,98)\">4</span>,<span style=\"color:rgb(98,98,98)\">5</span>,<span style=\"color:rgb(98,98,98)\">6</span>], [<span style=\"color:rgb(98,98,98)\">7</span>,<span style=\"color:rgb(98,98,98)\">8</span>,<span style=\"color:rgb(98,98,98)\">9</span>]]); m\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nFrobenius norm:\n\n$$\\| A \\|_F = \\left( \\sum_{i,j=1}^n | a_{ij} |^2 \\right)^{1/2}$$\n\n*Hint*: you don't normally need to write equations in LaTeX yourself, instead, you can click 'edit' in Wikipedia and copy the LaTeX from there (which is what I did for the above equation). Or on arxiv.org, click \"Download: Other formats\" in the top right, then \"Download source\"; rename the downloaded file to end in `.tgz` if it doesn't already, and you should find the source there, including the equations to copy and paste. This is the source LaTeX that I pasted to render the equation above:\n\n```latex\n$$\\| A \\|_F = \\left( \\sum_{i,j=1}^n | a_{ij} |^2 \\right)^{1/2}$$\n```\n\n::: {#2254be77 .cell execution_count=67}\n``` {.python .cell-code}\nsf = (m*m).sum()\nsf\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[67], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sf <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">m</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">m</span>)<span style=\"color:rgb(98,98,98)\">.</span>sum()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> sf\n\n<span class=\"ansi-red-fg\">TypeError</span>: unsupported operand type(s) for *: 'Matrix' and 'Matrix'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7a3bf8eb .cell execution_count=68}\n``` {.python .cell-code}\nsf.sqrt()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[68], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">sf</span><span style=\"color:rgb(98,98,98)\">.</span>sqrt()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sf' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c9d10df8 .cell execution_count=69}\n``` {.python .cell-code}\nm[2,:],m[:,2]\n```\n\n::: {.cell-output .cell-output-display execution_count=69}\n```\n([0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0],\n [0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0,\n  0.0])\n```\n:::\n:::\n\n\n::: {#3dba1fa1 .cell execution_count=70}\n``` {.python .cell-code}\nm[2]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[70], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">m</span><span class=\"ansi-yellow-bg\">[</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">2</span><span class=\"ansi-yellow-bg\">]</span>\n\nCell <span class=\"ansi-green-fg\">In[18], line 3</span>, in <span class=\"ansi-cyan-fg\">Matrix.__getitem__</span><span class=\"ansi-blue-fg\">(self, idxs)</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__getitem__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, idxs): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>xs[<span class=\"ansi-yellow-bg\">idxs</span><span class=\"ansi-yellow-bg\">[</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">0</span><span class=\"ansi-yellow-bg\">]</span>][idxs[<span style=\"color:rgb(98,98,98)\">1</span>]]\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a94af0cc .cell execution_count=71}\n``` {.python .cell-code}\ndef matmul(a,b):\n    (ar,ac),(br,bc) = a.shape,b.shape\n    c = torch.zeros(ar, bc)\n    for i in range(ar):\n        for j in range(bc): c[i,j] = (a[i,:] * b[:,j]).sum()\n    return c\n```\n:::\n\n\n::: {#80c92d5e .cell execution_count=72}\n``` {.python .cell-code}\ntest_close(t1,matmul(m1, m2))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[72], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> test_close(<span class=\"ansi-yellow-bg\">t1</span>,matmul(m1, m2))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#359368c4 .cell execution_count=73}\n``` {.python .cell-code}\n%timeit -n 50 _=matmul(m1, m2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[73], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 50 _=matmul(m1, m2)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#60972540 .cell execution_count=74}\n``` {.python .cell-code}\ndef matmul(a,b):\n    (ar,ac),(br,bc) = a.shape,b.shape\n    c = torch.zeros(ar, bc)\n    for i in range(ar):\n        for j in range(bc): c[i,j] = torch.dot(a[i,:], b[:,j])\n    return c\n```\n:::\n\n\n::: {#530818ff .cell execution_count=75}\n``` {.python .cell-code}\ntest_close(t1,matmul(m1, m2))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[75], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> test_close(<span class=\"ansi-yellow-bg\">t1</span>,matmul(m1, m2))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#3366c7ce .cell execution_count=76}\n``` {.python .cell-code}\n%timeit -n 50 _=matmul(m1, m2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[76], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 50 _=matmul(m1, m2)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Broadcasting\n\nThe term **broadcasting** describes how arrays with different shapes are treated during arithmetic operations.\n\nFrom the [Numpy Documentation](https://docs.scipy.org/doc/numpy-1.10.0/user/basics.broadcasting.html):\n\n    The term broadcasting describes how numpy treats arrays with \n    different shapes during arithmetic operations. Subject to certain \n    constraints, the smaller array is “broadcast” across the larger \n    array so that they have compatible shapes. Broadcasting provides a \n    means of vectorizing array operations so that looping occurs in C\n    instead of Python. It does this without making needless copies of \n    data and usually leads to efficient algorithm implementations.\n    \nIn addition to the efficiency of broadcasting, it allows developers to write less code, which typically leads to fewer errors.\n\n*This section was adapted from [Chapter 4](http://nbviewer.jupyter.org/github/fastai/numerical-linear-algebra/blob/master/nbs/4.%20Compressed%20Sensing%20of%20CT%20Scans%20with%20Robust%20Regression.ipynb#4.-Compressed-Sensing-of-CT-Scans-with-Robust-Regression) of the fast.ai [Computational Linear Algebra](https://github.com/fastai/numerical-linear-algebra) course.*\n\n### Broadcasting with a scalar\n\n::: {#66a0995a .cell execution_count=77}\n``` {.python .cell-code}\na\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[77], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">a</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'a' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c5cd3370 .cell execution_count=78}\n``` {.python .cell-code}\na > 0\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[78], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">a</span> <span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(98,98,98)\">0</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'a' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nHow are we able to do `a > 0`?  0 is being **broadcast** to have the same dimensions as a.\n\nFor instance you can normalize our dataset by subtracting the mean (a scalar) from the entire data set (a matrix) and dividing by the standard deviation (another scalar), using broadcasting.\n\nOther examples of broadcasting with a scalar:\n\n::: {#1812604d .cell execution_count=79}\n``` {.python .cell-code}\na + 1\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[79], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">a</span> <span style=\"color:rgb(98,98,98)\">+</span> <span style=\"color:rgb(98,98,98)\">1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'a' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4c079e61 .cell execution_count=80}\n``` {.python .cell-code}\nm\n```\n\n::: {.cell-output .cell-output-display execution_count=80}\n```\n<__main__.Matrix at 0x7b74506287c0>\n```\n:::\n:::\n\n\n::: {#9df62400 .cell execution_count=81}\n``` {.python .cell-code}\n2*m\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[81], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">2</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">m</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: unsupported operand type(s) for *: 'int' and 'Matrix'</pre>\n```\n:::\n\n:::\n:::\n\n\n### Broadcasting a vector to a matrix\n\nAlthough broadcasting a scalar is an idea that dates back to APL, the more powerful idea of broadcasting across higher rank tensors [comes from](https://mail.python.org/pipermail/matrix-sig/1995-November/000143.html) a little known language called [Yorick](https://software.llnl.gov/yorick-doc/manual/yorick_50.html).\n\nWe can also broadcast a vector to a matrix:\n\n::: {#777e3d82 .cell execution_count=82}\n``` {.python .cell-code}\nc = tensor([10.,20,30]); c\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[82], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> c <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">tensor</span>([<span style=\"color:rgb(98,98,98)\">10.</span>,<span style=\"color:rgb(98,98,98)\">20</span>,<span style=\"color:rgb(98,98,98)\">30</span>]); c\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ba47a0e2 .cell execution_count=83}\n``` {.python .cell-code}\nm\n```\n\n::: {.cell-output .cell-output-display execution_count=83}\n```\n<__main__.Matrix at 0x7b74506287c0>\n```\n:::\n:::\n\n\n::: {#59f5c968 .cell execution_count=84}\n``` {.python .cell-code}\nm.shape,c.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[84], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">m</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">shape</span>,c<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'Matrix' object has no attribute 'shape'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a7681a68 .cell execution_count=85}\n``` {.python .cell-code}\nm + c\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[85], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">m</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">c</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: unsupported operand type(s) for +: 'Matrix' and 'int'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9557225a .cell execution_count=86}\n``` {.python .cell-code}\nc + m\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[86], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">m</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: unsupported operand type(s) for +: 'int' and 'Matrix'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5d312255 .cell execution_count=87}\n``` {.python .cell-code}\nt = c.expand_as(m)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[87], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> t <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">c</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">expand_as</span>(m)\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'int' object has no attribute 'expand_as'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2ec8a797 .cell execution_count=88}\n``` {.python .cell-code}\nt\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[88], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">t</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#54c2e3ec .cell execution_count=89}\n``` {.python .cell-code}\nm + t\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[89], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m <span style=\"color:rgb(98,98,98)\">+</span> <span class=\"ansi-yellow-bg\">t</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nWe don't really copy the rows, but it looks as if we did. In fact, the rows are given a *stride* of 0.\n\n::: {#0f61e369 .cell execution_count=90}\n``` {.python .cell-code}\nt.storage()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[90], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">t</span><span style=\"color:rgb(98,98,98)\">.</span>storage()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b913d95e .cell execution_count=91}\n``` {.python .cell-code}\nt.stride(), t.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[91], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">t</span><span style=\"color:rgb(98,98,98)\">.</span>stride(), t<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nYou can index with the special value [None] or use `unsqueeze()` to convert a 1-dimensional array into a 2-dimensional array (although one of those dimensions has value 1).\n\n::: {#30dffebb .cell execution_count=92}\n``` {.python .cell-code}\nc.unsqueeze(0), c[None, :]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[92], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">unsqueeze</span>(<span style=\"color:rgb(98,98,98)\">0</span>), c[<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>, :]\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'int' object has no attribute 'unsqueeze'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6e406ced .cell execution_count=93}\n``` {.python .cell-code}\nc.shape, c.unsqueeze(0).shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[93], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">shape</span>, c<span style=\"color:rgb(98,98,98)\">.</span>unsqueeze(<span style=\"color:rgb(98,98,98)\">0</span>)<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'int' object has no attribute 'shape'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ede15f94 .cell execution_count=94}\n``` {.python .cell-code}\nc.unsqueeze(1), c[:, None]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[94], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">unsqueeze</span>(<span style=\"color:rgb(98,98,98)\">1</span>), c[:, <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>]\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'int' object has no attribute 'unsqueeze'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e104b80b .cell execution_count=95}\n``` {.python .cell-code}\nc.shape, c.unsqueeze(1).shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[95], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">shape</span>, c<span style=\"color:rgb(98,98,98)\">.</span>unsqueeze(<span style=\"color:rgb(98,98,98)\">1</span>)<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'int' object has no attribute 'shape'</pre>\n```\n:::\n\n:::\n:::\n\n\nYou can always skip trailling ':'s. And '...' means '*all preceding dimensions*'\n\n::: {#12a45c01 .cell execution_count=96}\n``` {.python .cell-code}\nc[None].shape,c[...,None].shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[96], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\">.</span>shape,c[<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span>,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>]<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8a769267 .cell execution_count=97}\n``` {.python .cell-code}\nc[:,None].expand_as(m)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[97], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">,</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\">.</span>expand_as(m)\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0f5b6b1d .cell execution_count=98}\n``` {.python .cell-code}\nm + c[:,None]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[98], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m <span style=\"color:rgb(98,98,98)\">+</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">,</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f1e7ab8d .cell execution_count=99}\n``` {.python .cell-code}\nm + c[None,:]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[99], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m <span style=\"color:rgb(98,98,98)\">+</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">]</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n### Broadcasting Rules\n\n::: {#dea95773 .cell execution_count=100}\n``` {.python .cell-code}\nc[None,:]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[100], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">]</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6ff3a341 .cell execution_count=101}\n``` {.python .cell-code}\nc[None,:].shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[101], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#50b5ecb8 .cell execution_count=102}\n``` {.python .cell-code}\nc[:,None]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[102], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">,</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7add1389 .cell execution_count=103}\n``` {.python .cell-code}\nc[:,None].shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[103], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">,</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#683a8da4 .cell execution_count=104}\n``` {.python .cell-code}\nc[None,:] * c[:,None]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[104], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">]</span> <span style=\"color:rgb(98,98,98)\">*</span> c[:,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>]\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c74f9bf4 .cell execution_count=105}\n``` {.python .cell-code}\nc[None] > c[:,None]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[105], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">[</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span> <span style=\"color:rgb(98,98,98)\">&gt;</span> c[:,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>]\n\n<span class=\"ansi-red-fg\">TypeError</span>: 'int' object is not subscriptable</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5a3d4329 .cell execution_count=106}\n``` {.python .cell-code}\nm*m\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">TypeError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[106], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">m</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">m</span>\n\n<span class=\"ansi-red-fg\">TypeError</span>: unsupported operand type(s) for *: 'Matrix' and 'Matrix'</pre>\n```\n:::\n\n:::\n:::\n\n\nWhen operating on two arrays/tensors, Numpy/PyTorch compares their shapes element-wise. It starts with the **trailing dimensions**, and works its way forward. Two dimensions are **compatible** when\n\n- they are equal, or\n- one of them is 1, in which case that dimension is broadcasted to make it the same size\n\nArrays do not need to have the same number of dimensions. For example, if you have a `256*256*3` array of RGB values, and you want to scale each color in the image by a different value, you can multiply the image by a one-dimensional array with 3 values. Lining up the sizes of the trailing axes of these arrays according to the broadcast rules, shows that they are compatible:\n\n    Image  (3d array): 256 x 256 x 3\n    Scale  (1d array):             3\n    Result (3d array): 256 x 256 x 3\n\nThe [numpy documentation](https://docs.scipy.org/doc/numpy-1.13.0/user/basics.broadcasting.html#general-broadcasting-rules) includes several examples of what dimensions can and can not be broadcast together.\n\n## Matmul with broadcasting\n\n::: {#6455ccae .cell execution_count=107}\n``` {.python .cell-code}\ndigit = m1[0]\ndigit.shape,m2.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[107], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> digit <span style=\"color:rgb(98,98,98)\">=</span> m1[<span style=\"color:rgb(98,98,98)\">0</span>]\n<span class=\"ansi-green-fg\">----&gt; 2</span> digit<span style=\"color:rgb(98,98,98)\">.</span>shape,<span class=\"ansi-yellow-bg\">m2</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a82cda7e .cell execution_count=108}\n``` {.python .cell-code}\ndigit[:,None].shape\n```\n\n::: {.cell-output .cell-output-display execution_count=108}\n```\n(784, 1)\n```\n:::\n:::\n\n\n::: {#34e78abf .cell execution_count=109}\n``` {.python .cell-code}\ndigit[:,None].expand_as(m2).shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[109], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">digit</span><span class=\"ansi-yellow-bg\">[</span><span class=\"ansi-yellow-bg\">:</span><span class=\"ansi-yellow-bg\">,</span><span style=\"font-weight:bold;color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">None</span><span class=\"ansi-yellow-bg\">]</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">expand_as</span>(m2)<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'numpy.ndarray' object has no attribute 'expand_as'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a0bde4d1 .cell execution_count=110}\n``` {.python .cell-code}\n(digit[:,None]*m2).shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[110], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> (digit[:,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>]<span style=\"color:rgb(98,98,98)\">*</span><span class=\"ansi-yellow-bg\">m2</span>)<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6c81fbfd .cell execution_count=111}\n``` {.python .cell-code}\ndef matmul(a,b):\n    (ar,ac),(br,bc) = a.shape,b.shape\n    c = torch.zeros(ar, bc)\n    for i in range(ar):\n#       c[i,j] = (a[i,:] * b[:,j]).sum()      # previous version\n        c[i]   = (a[i,:,None] * b).sum(dim=0) # broadcast version\n    return c\n```\n:::\n\n\n::: {#5dcafbd4 .cell execution_count=112}\n``` {.python .cell-code}\ntest_close(t1,matmul(m1, m2))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[112], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> test_close(<span class=\"ansi-yellow-bg\">t1</span>,matmul(m1, m2))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9c45fedf .cell execution_count=113}\n``` {.python .cell-code}\n%timeit -n 50 _=matmul(m1, m2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[113], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 50 _=matmul(m1, m2)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nOur time has gone from ~500ms to <0.1ms, an over 5000x improvement! We can run on the whole dataset now.\n\n::: {#55982aa9 .cell execution_count=114}\n``` {.python .cell-code}\ntr = matmul(x_train, weights)\ntr\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[114], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> tr <span style=\"color:rgb(98,98,98)\">=</span> matmul(x_train, <span class=\"ansi-yellow-bg\">weights</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> tr\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'weights' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4f24d0f0 .cell execution_count=115}\n``` {.python .cell-code}\ntr.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[115], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">tr</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#77b22fad .cell execution_count=116}\n``` {.python .cell-code}\n%time _=matmul(x_train, weights)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'weights' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Einstein summation\n\n[Einstein summation](https://ajcr.net/Basic-guide-to-einsum/) ([`einsum`](https://numpy.org/doc/stable/reference/generated/numpy.einsum.html)) is a compact representation for combining products and sums in a general way. The key rules are:\n\n- Repeating letters between input arrays means that values along those axes will be multiplied together.\n- Omitting a letter from the output means that values along that axis will be summed.\n\n::: {#4b016597 .cell execution_count=117}\n``` {.python .cell-code}\nm1.shape,m2.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[117], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m1<span style=\"color:rgb(98,98,98)\">.</span>shape,<span class=\"ansi-yellow-bg\">m2</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a962a2f3 .cell execution_count=118}\n``` {.python .cell-code}\n# c[i,j] += a[i,k] * b[k,j]\n# c[i,j] = (a[i,:] * b[:,j]).sum()\nmr = torch.einsum('ik,kj->ikj', m1, m2)\nmr.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[118], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># c[i,j] += a[i,k] * b[k,j]</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># c[i,j] = (a[i,:] * b[:,j]).sum()</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> mr <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>einsum(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">ik,kj-&gt;ikj</span><span style=\"color:rgb(175,0,0)\">'</span>, m1, m2)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> mr<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#370ef039 .cell execution_count=119}\n``` {.python .cell-code}\nmr.sum(1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[119], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">mr</span><span style=\"color:rgb(98,98,98)\">.</span>sum(<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'mr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ce6347f1 .cell execution_count=120}\n``` {.python .cell-code}\ntorch.einsum('ik,kj->ij', m1, m2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[120], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>einsum(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">ik,kj-&gt;ij</span><span style=\"color:rgb(175,0,0)\">'</span>, m1, m2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#60b46f4e .cell execution_count=121}\n``` {.python .cell-code}\ndef matmul(a,b): return torch.einsum('ik,kj->ij', a, b)\n```\n:::\n\n\n::: {#25fdcfa5 .cell execution_count=122}\n``` {.python .cell-code}\ntest_close(tr, matmul(x_train, weights), eps=1e-3)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[122], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> test_close(<span class=\"ansi-yellow-bg\">tr</span>, matmul(x_train, weights), eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-3</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#551775c3 .cell execution_count=123}\n``` {.python .cell-code}\n%timeit -n 5 _=matmul(x_train, weights)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[123], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 5 _=matmul(x_train, weights)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'weights' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## pytorch op\n\nWe can use pytorch's function or operator directly for matrix multiplication.\n\n::: {#496b6b54 .cell execution_count=124}\n``` {.python .cell-code}\ntest_close(tr, x_train@weights, eps=1e-3)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[124], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> test_close(<span class=\"ansi-yellow-bg\">tr</span>, x_train<span style=\"color:rgb(175,0,255)\">@weights</span>, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-3</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2c1f95a3 .cell execution_count=125}\n``` {.python .cell-code}\n%timeit -n 5 _=torch.matmul(x_train, weights)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[125], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 5 _=torch.matmul(x_train, weights)</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## CUDA\n\n::: {#3d09ce13 .cell execution_count=126}\n``` {.python .cell-code}\ndef matmul(grid, a,b,c):\n    i,j = grid\n    if i < c.shape[0] and j < c.shape[1]:\n        tmp = 0.\n        for k in range(a.shape[1]): tmp += a[i, k] * b[k, j]\n        c[i,j] = tmp\n```\n:::\n\n\n::: {#4a88f67a .cell execution_count=127}\n``` {.python .cell-code}\nres = torch.zeros(ar, bc)\nmatmul((0,0), m1, m2, res)\nres\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[127], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> res <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>zeros(ar, bc)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> matmul((<span style=\"color:rgb(98,98,98)\">0</span>,<span style=\"color:rgb(98,98,98)\">0</span>), m1, m2, res)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> res\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d95e80fb .cell execution_count=128}\n``` {.python .cell-code}\ndef launch_kernel(kernel, grid_x, grid_y, *args, **kwargs):\n    for i in range(grid_x):\n        for j in range(grid_y): kernel((i,j), *args, **kwargs)\n```\n:::\n\n\n::: {#fd333e3f .cell execution_count=129}\n``` {.python .cell-code}\nres = torch.zeros(ar, bc)\nlaunch_kernel(matmul, ar, bc, m1, m2, res)\nres\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[129], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> res <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>zeros(ar, bc)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> launch_kernel(matmul, ar, bc, m1, m2, res)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> res\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8084b391 .cell execution_count=130}\n``` {.python .cell-code}\nfrom numba import cuda\n```\n:::\n\n\n::: {#b336983f .cell execution_count=131}\n``` {.python .cell-code}\ndef matmul(grid, a,b,c):\n    i,j = grid\n    if i < c.shape[0] and j < c.shape[1]:\n        tmp = 0.\n        for k in range(a.shape[1]): tmp += a[i, k] * b[k, j]\n        c[i,j] = tmp\n```\n:::\n\n\n::: {#822c08ed .cell execution_count=132}\n``` {.python .cell-code}\n@cuda.jit\ndef matmul(a,b,c):\n    i, j = cuda.grid(2)\n    if i < c.shape[0] and j < c.shape[1]:\n        tmp = 0.\n        for k in range(a.shape[1]): tmp += a[i, k] * b[k, j]\n        c[i,j] = tmp\n```\n:::\n\n\n::: {#121c0355 .cell execution_count=133}\n``` {.python .cell-code}\nr = np.zeros(tr.shape)\nm1g,m2g,rg = map(cuda.to_device, (x_train,weights,r))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[133], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> r <span style=\"color:rgb(98,98,98)\">=</span> np<span style=\"color:rgb(98,98,98)\">.</span>zeros(<span class=\"ansi-yellow-bg\">tr</span><span style=\"color:rgb(98,98,98)\">.</span>shape)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> m1g,m2g,rg <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">map</span>(cuda<span style=\"color:rgb(98,98,98)\">.</span>to_device, (x_train,weights,r))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1c81f4ff .cell execution_count=134}\n``` {.python .cell-code}\nr.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[134], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">r</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'r' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ea90a53b .cell execution_count=135}\n``` {.python .cell-code}\nTPB = 16\nrr,rc = r.shape\nblockspergrid = (math.ceil(rr / TPB), math.ceil(rc / TPB))\nblockspergrid\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[135], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> TPB <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">16</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> rr,rc <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">r</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n<span class=\"ansi-green-fg ansi-bold\">      3</span> blockspergrid <span style=\"color:rgb(98,98,98)\">=</span> (math<span style=\"color:rgb(98,98,98)\">.</span>ceil(rr <span style=\"color:rgb(98,98,98)\">/</span> TPB), math<span style=\"color:rgb(98,98,98)\">.</span>ceil(rc <span style=\"color:rgb(98,98,98)\">/</span> TPB))\n<span class=\"ansi-green-fg ansi-bold\">      4</span> blockspergrid\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'r' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9bf5650b .cell execution_count=136}\n``` {.python .cell-code}\nmatmul[blockspergrid, (TPB,TPB)](m1g,m2g,rg)\nr = rg.copy_to_host()\ntest_close(tr, r, eps=1e-3)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[136], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> matmul[<span class=\"ansi-yellow-bg\">blockspergrid</span>, (TPB,TPB)](m1g,m2g,rg)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> r <span style=\"color:rgb(98,98,98)\">=</span> rg<span style=\"color:rgb(98,98,98)\">.</span>copy_to_host()\n<span class=\"ansi-green-fg ansi-bold\">      3</span> test_close(tr, r, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-3</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'blockspergrid' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#06aef6b2 .cell execution_count=137}\n``` {.python .cell-code}\n%%timeit -n 10\nmatmul[blockspergrid, (TPB,TPB)](m1g,m2g,rg)\nr = rg.copy_to_host()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[137], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_cell_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 10</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">matmul[blockspergrid, (TPB,TPB)](m1g,m2g,rg)</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">r = rg.copy_to_host()</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2517</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_cell_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, cell)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2515</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg ansi-bold\">   2516</span>     args <span style=\"color:rgb(98,98,98)\">=</span> (magic_arg_s, cell)\n<span class=\"ansi-green-fg\">-&gt; 2517</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2519</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2520</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2521</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2522</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'blockspergrid' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4fc885c4 .cell execution_count=138}\n``` {.python .cell-code}\nm1c,m2c = x_train.cuda(),weights.cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[138], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> m1c,m2c <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">x_train</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">cuda</span>(),weights<span style=\"color:rgb(98,98,98)\">.</span>cuda()\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'numpy.ndarray' object has no attribute 'cuda'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#663cdb77 .cell execution_count=139}\n``` {.python .cell-code}\nr=(m1c@m2c).cpu()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[139], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> r<span style=\"color:rgb(98,98,98)\">=</span>(<span class=\"ansi-yellow-bg\">m1c</span><span style=\"color:rgb(175,0,255)\">@m2c</span>)<span style=\"color:rgb(98,98,98)\">.</span>cpu()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm1c' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ed22c780 .cell execution_count=140}\n``` {.python .cell-code}\n%timeit -n 10 r=(m1c@m2c).cpu()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[140], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">get_ipython</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">run_line_magic</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">timeit</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">-n 10 r=(m1c@m2c).cpu()</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/interactiveshell.py:2456</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.run_line_magic</span><span class=\"ansi-blue-fg\">(self, magic_name, line, _stack_depth)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2454</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">local_ns</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>get_local_scope(stack_depth)\n<span class=\"ansi-green-fg ansi-bold\">   2455</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>builtin_trap:\n<span class=\"ansi-green-fg\">-&gt; 2456</span>     result <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fn</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2458</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The code below prevents the output from being displayed</span>\n<span class=\"ansi-green-fg ansi-bold\">   2459</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when using magics with decorator @output_can_be_silenced</span>\n<span class=\"ansi-green-fg ansi-bold\">   2460</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># when the last Python token in the expression is a ';'.</span>\n<span class=\"ansi-green-fg ansi-bold\">   2461</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(fn, magic<span style=\"color:rgb(98,98,98)\">.</span>MAGIC_OUTPUT_CAN_BE_SILENCED, <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:1189</span>, in <span class=\"ansi-cyan-fg\">ExecutionMagics.timeit</span><span class=\"ansi-blue-fg\">(self, line, cell, local_ns)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1186</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> time_number <span style=\"color:rgb(98,98,98)\">&gt;</span><span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">0.2</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1187</span>             <span style=\"font-weight:bold;color:rgb(0,135,0)\">break</span>\n<span class=\"ansi-green-fg\">-&gt; 1189</span> all_runs <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">timer</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">repeat</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1190</span> best <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">min</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n<span class=\"ansi-green-fg ansi-bold\">   1191</span> worst <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">max</span>(all_runs) <span style=\"color:rgb(98,98,98)\">/</span> number\n\nFile <span class=\"ansi-green-fg\">/usr/lib/python3.10/timeit.py:206</span>, in <span class=\"ansi-cyan-fg\">Timer.repeat</span><span class=\"ansi-blue-fg\">(self, repeat, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    204</span> r <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">    205</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(repeat):\n<span class=\"ansi-green-fg\">--&gt; 206</span>     t <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timeit</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">number</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    207</span>     r<span style=\"color:rgb(98,98,98)\">.</span>append(t)\n<span class=\"ansi-green-fg ansi-bold\">    208</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> r\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/IPython/core/magics/execution.py:173</span>, in <span class=\"ansi-cyan-fg\">Timer.timeit</span><span class=\"ansi-blue-fg\">(self, number)</span>\n<span class=\"ansi-green-fg ansi-bold\">    171</span> gc<span style=\"color:rgb(98,98,98)\">.</span>disable()\n<span class=\"ansi-green-fg ansi-bold\">    172</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 173</span>     timing <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">inner</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">it</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">timer</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    174</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">finally</span>:\n<span class=\"ansi-green-fg ansi-bold\">    175</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> gcold:\n\nFile <span class=\"ansi-green-fg\">&lt;magic-timeit&gt;:1</span>, in <span class=\"ansi-cyan-fg\">inner</span><span class=\"ansi-blue-fg\">(_it, _timer)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm1c' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nOur broadcasting version was >500ms, and our CUDA version is around 0.5ms, which is another 1000x improvement compared to broadcasting. So our total speedup is around 5 million times!\n\n",
    "supporting": [
      "01_matmul_files"
    ],
    "filters": [],
    "includes": {}
  }
}