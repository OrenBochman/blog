{
  "hash": "ade094ebc719bbd63c2c51395f70273f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: The forward and backward passes\njupyter: python3\nimage: cover.png\n---\n\n::: {#935a9604 .cell execution_count=1}\n``` {.python .cell-code}\nimport pickle,gzip,math,os,time,shutil,torch,matplotlib as mpl, numpy as np\nfrom pathlib import Path\nfrom torch import tensor\nfrom fastcore.test import test_close\ntorch.manual_seed(42)\n\nmpl.rcParams['image.cmap'] = 'gray'\ntorch.set_printoptions(precision=2, linewidth=125, sci_mode=False)\nnp.set_printoptions(precision=2, linewidth=125)\n\npath_data = Path('data')\npath_gz = path_data/'mnist.pkl.gz'\nwith gzip.open(path_gz, 'rb') as f: ((x_train, y_train), (x_valid, y_valid), _) = pickle.load(f, encoding='latin-1')\nx_train, y_train, x_valid, y_valid = map(tensor, [x_train, y_train, x_valid, y_valid])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[1], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pickle</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">gzip</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">os</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">time</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">shutil</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pathlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Path\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> tensor\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n## Foundations version\n\n### Basic architecture\n\n::: {#5cdbf95e .cell execution_count=2}\n``` {.python .cell-code}\nn,m = x_train.shape\nc = y_train.max()+1\nn,m,c\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> n,m <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">x_train</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n<span class=\"ansi-green-fg ansi-bold\">      2</span> c <span style=\"color:rgb(98,98,98)\">=</span> y_train<span style=\"color:rgb(98,98,98)\">.</span>max()<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> n,m,c\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x_train' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#df9bfbb7 .cell execution_count=3}\n``` {.python .cell-code}\n# num hidden\nnh = 50\n```\n:::\n\n\n::: {#458a60a6 .cell execution_count=4}\n``` {.python .cell-code}\nw1 = torch.randn(m,nh)\nb1 = torch.zeros(nh)\nw2 = torch.randn(nh,1)\nb2 = torch.zeros(1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> w1 <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>randn(m,nh)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> b1 <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>zeros(nh)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> w2 <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(nh,<span style=\"color:rgb(98,98,98)\">1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f2103bf6 .cell execution_count=5}\n``` {.python .cell-code}\ndef lin(x, w, b): return x@w + b\n```\n:::\n\n\n::: {#9030e084 .cell execution_count=6}\n``` {.python .cell-code}\nt = lin(x_valid, w1, b1)\nt.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[6], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> t <span style=\"color:rgb(98,98,98)\">=</span> lin(<span class=\"ansi-yellow-bg\">x_valid</span>, w1, b1)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> t<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x_valid' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ad444fea .cell execution_count=7}\n``` {.python .cell-code}\ndef relu(x): return x.clamp_min(0.)\n```\n:::\n\n\n::: {#97a30e42 .cell execution_count=8}\n``` {.python .cell-code}\nt = relu(t)\nt\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[8], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> t <span style=\"color:rgb(98,98,98)\">=</span> relu(<span class=\"ansi-yellow-bg\">t</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> t\n\n<span class=\"ansi-red-fg\">NameError</span>: name 't' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d3f5a0fc .cell execution_count=9}\n``` {.python .cell-code}\ndef model(xb):\n    l1 = lin(xb, w1, b1)\n    l2 = relu(l1)\n    return lin(l2, w2, b2)\n```\n:::\n\n\n::: {#1c85b6db .cell execution_count=10}\n``` {.python .cell-code}\nres = model(x_valid)\nres.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> res <span style=\"color:rgb(98,98,98)\">=</span> model(<span class=\"ansi-yellow-bg\">x_valid</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> res<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x_valid' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n### Loss function: MSE\n\n(Of course, `mse` is not a suitable loss function for multi-class classification; we'll use a better loss function soon. We'll use `mse` for now to keep things simple.)\n\n::: {#ef6d9f4b .cell execution_count=11}\n``` {.python .cell-code}\nres.shape,y_valid.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[11], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">res</span><span style=\"color:rgb(98,98,98)\">.</span>shape,y_valid<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'res' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8072be06 .cell execution_count=12}\n``` {.python .cell-code}\n(res-y_valid).shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[12], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> (<span class=\"ansi-yellow-bg\">res</span><span style=\"color:rgb(98,98,98)\">-</span>y_valid)<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'res' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nWe need to get rid of that trailing (,1), in order to use `mse`.\n\n::: {#110e4652 .cell execution_count=13}\n``` {.python .cell-code}\nres[:,0].shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[13], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">res</span>[:,<span style=\"color:rgb(98,98,98)\">0</span>]<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'res' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c279a833 .cell execution_count=14}\n``` {.python .cell-code}\nres.squeeze().shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[14], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">res</span><span style=\"color:rgb(98,98,98)\">.</span>squeeze()<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'res' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e32dd59c .cell execution_count=15}\n``` {.python .cell-code}\n(res[:,0]-y_valid).shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[15], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> (<span class=\"ansi-yellow-bg\">res</span>[:,<span style=\"color:rgb(98,98,98)\">0</span>]<span style=\"color:rgb(98,98,98)\">-</span>y_valid)<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'res' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#70cb70f7 .cell execution_count=16}\n``` {.python .cell-code}\ny_train,y_valid = y_train.float(),y_valid.float()\n\npreds = model(x_train)\npreds.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[16], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> y_train,y_valid <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">y_train</span><span style=\"color:rgb(98,98,98)\">.</span>float(),y_valid<span style=\"color:rgb(98,98,98)\">.</span>float()\n<span class=\"ansi-green-fg ansi-bold\">      3</span> preds <span style=\"color:rgb(98,98,98)\">=</span> model(x_train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> preds<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'y_train' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#204b0a55 .cell execution_count=17}\n``` {.python .cell-code}\ndef mse(output, targ): return (output[:,0]-targ).pow(2).mean()\n```\n:::\n\n\n::: {#3151cecb .cell execution_count=18}\n``` {.python .cell-code}\nmse(preds, y_train)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[18], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> mse(<span class=\"ansi-yellow-bg\">preds</span>, y_train)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'preds' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n### Gradients and backward pass\n\n::: {#739292e4 .cell execution_count=19}\n``` {.python .cell-code}\nfrom sympy import symbols,diff\nx,y = symbols('x y')\ndiff(x**2, x)\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=19}\n$\\displaystyle 2 x$\n:::\n:::\n\n\n::: {#a1cf2bd8 .cell execution_count=20}\n``` {.python .cell-code}\ndiff(3*x**2+9, x)\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown execution_count=20}\n$\\displaystyle 6 x$\n:::\n:::\n\n\n::: {#6c5b9afa .cell execution_count=21}\n``` {.python .cell-code}\ndef lin_grad(inp, out, w, b):\n    # grad of matmul with respect to input\n    inp.g = out.g @ w.t()\n    w.g = (inp.unsqueeze(-1) * out.g.unsqueeze(1)).sum(0)\n    b.g = out.g.sum(0)\n```\n:::\n\n\n::: {#00fc99a0 .cell execution_count=22}\n``` {.python .cell-code}\ndef forward_and_backward(inp, targ):\n    # forward pass:\n    l1 = lin(inp, w1, b1)\n    l2 = relu(l1)\n    out = lin(l2, w2, b2)\n    diff = out[:,0]-targ\n    loss = diff.pow(2).mean()\n    \n    # backward pass:\n    out.g = 2.*diff[:,None] / inp.shape[0]\n    lin_grad(l2, out, w2, b2)\n    l1.g = (l1>0).float() * l2.g\n    lin_grad(inp, l1, w1, b1)\n```\n:::\n\n\n::: {#49905668 .cell execution_count=23}\n``` {.python .cell-code}\nforward_and_backward(x_train, y_train)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> forward_and_backward(<span class=\"ansi-yellow-bg\">x_train</span>, y_train)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x_train' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b46ccb9d .cell execution_count=24}\n``` {.python .cell-code}\n# Save for testing against later\ndef get_grad(x): return x.g.clone()\nchks = w1,w2,b1,b2,x_train\ngrads = w1g,w2g,b1g,b2g,ig = tuple(map(get_grad, chks))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[24], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Save for testing against later</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">get_grad</span>(x): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> x<span style=\"color:rgb(98,98,98)\">.</span>g<span style=\"color:rgb(98,98,98)\">.</span>clone()\n<span class=\"ansi-green-fg\">----&gt; 3</span> chks <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">w1</span>,w2,b1,b2,x_train\n<span class=\"ansi-green-fg ansi-bold\">      4</span> grads <span style=\"color:rgb(98,98,98)\">=</span> w1g,w2g,b1g,b2g,ig <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">tuple</span>(<span style=\"color:rgb(0,135,0)\">map</span>(get_grad, chks))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'w1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nWe cheat a little bit and use PyTorch autograd to check our results.\n\n::: {#08255d44 .cell execution_count=25}\n``` {.python .cell-code}\ndef mkgrad(x): return x.clone().requires_grad_(True)\nptgrads = w12,w22,b12,b22,xt2 = tuple(map(mkgrad, chks))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[25], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">mkgrad</span>(x): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> x<span style=\"color:rgb(98,98,98)\">.</span>clone()<span style=\"color:rgb(98,98,98)\">.</span>requires_grad_(<span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n<span class=\"ansi-green-fg\">----&gt; 2</span> ptgrads <span style=\"color:rgb(98,98,98)\">=</span> w12,w22,b12,b22,xt2 <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">tuple</span>(<span style=\"color:rgb(0,135,0)\">map</span>(mkgrad, <span class=\"ansi-yellow-bg\">chks</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'chks' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c2fca619 .cell execution_count=26}\n``` {.python .cell-code}\ndef forward(inp, targ):\n    l1 = lin(inp, w12, b12)\n    l2 = relu(l1)\n    out = lin(l2, w22, b22)\n    return mse(out, targ)\n```\n:::\n\n\n::: {#5078bb6b .cell execution_count=27}\n``` {.python .cell-code}\nloss = forward(xt2, y_train)\nloss.backward()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> loss <span style=\"color:rgb(98,98,98)\">=</span> forward(<span class=\"ansi-yellow-bg\">xt2</span>, y_train)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> loss<span style=\"color:rgb(98,98,98)\">.</span>backward()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'xt2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#057c3c87 .cell execution_count=28}\n``` {.python .cell-code}\nfor a,b in zip(grads, ptgrads): test_close(a, b.grad, eps=0.01)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[28], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> a,b <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">zip</span>(grads, ptgrads): test_close(a, b<span style=\"color:rgb(98,98,98)\">.</span>grad, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'grads' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Refactor model\n\n### Layers as classes\n\n::: {#bd38ea45 .cell execution_count=29}\n``` {.python .cell-code}\nclass Relu():\n    def __call__(self, inp):\n        self.inp = inp\n        self.out = inp.clamp_min(0.)\n        return self.out\n    \n    def backward(self): self.inp.g = (self.inp>0).float() * self.out.g\n```\n:::\n\n\n::: {#a8dc3308 .cell execution_count=30}\n``` {.python .cell-code}\nclass Lin():\n    def __init__(self, w, b): self.w,self.b = w,b\n\n    def __call__(self, inp):\n        self.inp = inp\n        self.out = lin(inp, self.w, self.b)\n        return self.out\n\n    def backward(self):\n        self.inp.g = self.out.g @ self.w.t()\n        self.w.g = self.inp.t() @ self.out.g\n        self.b.g = self.out.g.sum(0)\n```\n:::\n\n\n::: {#2151655f .cell execution_count=31}\n``` {.python .cell-code}\nclass Mse():\n    def __call__(self, inp, targ):\n        self.inp,self.targ = inp,targ\n        self.out = mse(inp, targ)\n        return self.out\n    \n    def backward(self):\n        self.inp.g = 2. * (self.inp.squeeze() - self.targ).unsqueeze(-1) / self.targ.shape[0]\n```\n:::\n\n\n::: {#86277f20 .cell execution_count=32}\n``` {.python .cell-code}\nclass Model():\n    def __init__(self, w1, b1, w2, b2):\n        self.layers = [Lin(w1,b1), Relu(), Lin(w2,b2)]\n        self.loss = Mse()\n        \n    def __call__(self, x, targ):\n        for l in self.layers: x = l(x)\n        return self.loss(x, targ)\n    \n    def backward(self):\n        self.loss.backward()\n        for l in reversed(self.layers): l.backward()\n```\n:::\n\n\n::: {#6ad998e6 .cell execution_count=33}\n``` {.python .cell-code}\nmodel = Model(w1, b1, w2, b2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[33], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> Model(<span class=\"ansi-yellow-bg\">w1</span>, b1, w2, b2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'w1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#092717fe .cell execution_count=34}\n``` {.python .cell-code}\nloss = model(x_train, y_train)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[34], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> loss <span style=\"color:rgb(98,98,98)\">=</span> model(<span class=\"ansi-yellow-bg\">x_train</span>, y_train)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x_train' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b2154bd6 .cell execution_count=35}\n``` {.python .cell-code}\nmodel.backward()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">model</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">backward</span>()\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'function' object has no attribute 'backward'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#74a461b7 .cell execution_count=36}\n``` {.python .cell-code}\ntest_close(w2g, w2.g, eps=0.01)\ntest_close(b2g, b2.g, eps=0.01)\ntest_close(w1g, w1.g, eps=0.01)\ntest_close(b1g, b1.g, eps=0.01)\ntest_close(ig, x_train.g, eps=0.01)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[36], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">test_close</span>(w2g, w2<span style=\"color:rgb(98,98,98)\">.</span>g, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> test_close(b2g, b2<span style=\"color:rgb(98,98,98)\">.</span>g, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> test_close(w1g, w1<span style=\"color:rgb(98,98,98)\">.</span>g, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'test_close' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n### Module.forward()\n\n::: {#511d477f .cell execution_count=37}\n``` {.python .cell-code}\nclass Module():\n    def __call__(self, *args):\n        self.args = args\n        self.out = self.forward(*args)\n        return self.out\n\n    def forward(self): raise Exception('not implemented')\n    def backward(self): self.bwd(self.out, *self.args)\n    def bwd(self): raise Exception('not implemented')\n```\n:::\n\n\n::: {#3e71cb71 .cell execution_count=38}\n``` {.python .cell-code}\nclass Relu(Module):\n    def forward(self, inp): return inp.clamp_min(0.)\n    def bwd(self, out, inp): inp.g = (inp>0).float() * out.g\n```\n:::\n\n\n::: {#54eb5c6c .cell execution_count=39}\n``` {.python .cell-code}\nclass Lin(Module):\n    def __init__(self, w, b): self.w,self.b = w,b\n    def forward(self, inp): return inp@self.w + self.b\n    def bwd(self, out, inp):\n        inp.g = self.out.g @ self.w.t()\n        self.w.g = inp.t() @ self.out.g\n        self.b.g = self.out.g.sum(0)\n```\n:::\n\n\n::: {#7e8a3d3f .cell execution_count=40}\n``` {.python .cell-code}\nclass Mse(Module):\n    def forward (self, inp, targ): return (inp.squeeze() - targ).pow(2).mean()\n    def bwd(self, out, inp, targ): inp.g = 2*(inp.squeeze()-targ).unsqueeze(-1) / targ.shape[0]\n```\n:::\n\n\n::: {#962aa9e0 .cell execution_count=41}\n``` {.python .cell-code}\nmodel = Model(w1, b1, w2, b2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> Model(<span class=\"ansi-yellow-bg\">w1</span>, b1, w2, b2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'w1' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1c059a3a .cell execution_count=42}\n``` {.python .cell-code}\nloss = model(x_train, y_train)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> loss <span style=\"color:rgb(98,98,98)\">=</span> model(<span class=\"ansi-yellow-bg\">x_train</span>, y_train)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x_train' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#278a07ae .cell execution_count=43}\n``` {.python .cell-code}\nmodel.backward()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">model</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">backward</span>()\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'function' object has no attribute 'backward'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d6ddb197 .cell execution_count=44}\n``` {.python .cell-code}\ntest_close(w2g, w2.g, eps=0.01)\ntest_close(b2g, b2.g, eps=0.01)\ntest_close(w1g, w1.g, eps=0.01)\ntest_close(b1g, b1.g, eps=0.01)\ntest_close(ig, x_train.g, eps=0.01)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">test_close</span>(w2g, w2<span style=\"color:rgb(98,98,98)\">.</span>g, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> test_close(b2g, b2<span style=\"color:rgb(98,98,98)\">.</span>g, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> test_close(w1g, w1<span style=\"color:rgb(98,98,98)\">.</span>g, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'test_close' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n### Autograd\n\n::: {#d3c0ef99 .cell execution_count=45}\n``` {.python .cell-code}\nfrom torch import nn\nimport torch.nn.functional as F\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[45], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> nn\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">nn</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">F</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c263a4d5 .cell execution_count=46}\n``` {.python .cell-code}\nclass Linear(nn.Module):\n    def __init__(self, n_in, n_out):\n        super().__init__()\n        self.w = torch.randn(n_in,n_out).requires_grad_()\n        self.b = torch.zeros(n_out).requires_grad_()\n    def forward(self, inp): return inp@self.w + self.b\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[46], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">Linear</span>(<span class=\"ansi-yellow-bg\">nn</span><span style=\"color:rgb(98,98,98)\">.</span>Module):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, n_in, n_out):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'nn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#3987ab4f .cell execution_count=47}\n``` {.python .cell-code}\nclass Model(nn.Module):\n    def __init__(self, n_in, nh, n_out):\n        super().__init__()\n        self.layers = [Linear(n_in,nh), nn.ReLU(), Linear(nh,n_out)]\n        \n    def __call__(self, x, targ):\n        for l in self.layers: x = l(x)\n        return F.mse_loss(x, targ[:,None])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">Model</span>(<span class=\"ansi-yellow-bg\">nn</span><span style=\"color:rgb(98,98,98)\">.</span>Module):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, n_in, nh, n_out):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'nn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#20fe1f46 .cell execution_count=48}\n``` {.python .cell-code}\nmodel = Model(m, nh, 1)\nloss = model(x_train, y_train)\nloss.backward()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> Model(<span class=\"ansi-yellow-bg\">m</span>, nh, <span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> loss <span style=\"color:rgb(98,98,98)\">=</span> model(x_train, y_train)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> loss<span style=\"color:rgb(98,98,98)\">.</span>backward()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'm' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b5fde26d .cell execution_count=49}\n``` {.python .cell-code}\nl0 = model.layers[0]\nl0.b.grad\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">AttributeError</span>                            Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[49], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> l0 <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">model</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">layers</span>[<span style=\"color:rgb(98,98,98)\">0</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> l0<span style=\"color:rgb(98,98,98)\">.</span>b<span style=\"color:rgb(98,98,98)\">.</span>grad\n\n<span class=\"ansi-red-fg\">AttributeError</span>: 'function' object has no attribute 'layers'</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "03_backprop_files"
    ],
    "filters": [],
    "includes": {}
  }
}