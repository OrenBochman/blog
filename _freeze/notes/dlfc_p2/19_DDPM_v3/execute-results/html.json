{
  "hash": "7a5e64f2c63ad4d1f927ecb3aaa4f7c0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Denoising Diffusion Probabilistic Models with miniai\njupyter: python3\nimage: cover.png\n---\n\n\n\n\n## Imports\n\n::: {#71814beb .cell execution_count=1}\n``` {.python .cell-code}\nimport os\nos.environ['CUDA_VISIBLE_DEVICES']='1'\n```\n:::\n\n\n::: {#7694b37b .cell execution_count=2}\n``` {.python .cell-code}\nimport pickle,gzip,math,os,time,shutil,torch,random,logging\nimport fastcore.all as fc,matplotlib as mpl,numpy as np,matplotlib.pyplot as plt\nfrom collections.abc import Mapping\nfrom pathlib import Path\nfrom functools import partial\n\nfrom fastcore.foundation import L\nimport torchvision.transforms.functional as TF,torch.nn.functional as F\nfrom torch import tensor,nn,optim\nfrom torch.utils.data import DataLoader,default_collate\nfrom torch.nn import init\nfrom torch.optim import lr_scheduler\n\nfrom miniai.datasets import *\nfrom miniai.conv import *\nfrom miniai.learner import *\nfrom miniai.activations import *\nfrom miniai.init import *\nfrom miniai.sgd import *\nfrom miniai.resnet import *\nfrom miniai.augment import *\nfrom miniai.accel import *\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pickle</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">gzip</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">os</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">time</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">shutil</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">logging</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">collections</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">abc</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Mapping\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e703f1e8 .cell execution_count=3}\n``` {.python .cell-code}\nfrom torcheval.metrics import MulticlassAccuracy\nfrom datasets import load_dataset,load_dataset_builder\n\nmpl.rcParams['image.cmap'] = 'gray_r'\nlogging.disable(logging.WARNING)\n\nset_seed(42)\nif fc.defaults.cpus>8: fc.defaults.cpus=8\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[3], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> MulticlassAccuracy\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">datasets</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> load_dataset,load_dataset_builder\n<span class=\"ansi-green-fg ansi-bold\">      4</span> mpl<span style=\"color:rgb(98,98,98)\">.</span>rcParams[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">image.cmap</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">gray_r</span><span style=\"color:rgb(175,0,0)\">'</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torcheval/metrics/__init__.py:7</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Copyright (c) Meta Platforms, Inc. and affiliates.</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># All rights reserved.</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># This source code is licensed under the BSD-style license found in the</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># LICENSE file in the root directory of this source tree.</span>\n<span class=\"ansi-green-fg\">----&gt; 7</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> functional\n<span class=\"ansi-green-fg ansi-bold\">      8</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">aggregation</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> AUC, Cat, Max, Mean, Min, Sum, Throughput\n<span class=\"ansi-green-fg ansi-bold\">      9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">audio</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> FrechetAudioDistance\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torcheval/metrics/functional/__init__.py:7</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Copyright (c) Meta Platforms, Inc. and affiliates.</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># All rights reserved.</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># This source code is licensed under the BSD-style license found in the</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># LICENSE file in the root directory of this source tree.</span>\n<span class=\"ansi-green-fg\">----&gt; 7</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">aggregation</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> auc, mean, <span style=\"color:rgb(0,135,0)\">sum</span>, throughput\n<span class=\"ansi-green-fg ansi-bold\">      8</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">classification</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">      9</span>     binary_accuracy,\n<span class=\"ansi-green-fg ansi-bold\">     10</span>     binary_auprc,\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">     39</span>     topk_multilabel_accuracy,\n<span class=\"ansi-green-fg ansi-bold\">     40</span> )\n<span class=\"ansi-green-fg ansi-bold\">     41</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">image</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> peak_signal_noise_ratio\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torcheval/metrics/functional/aggregation/__init__.py:7</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Copyright (c) Meta Platforms, Inc. and affiliates.</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># All rights reserved.</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># This source code is licensed under the BSD-style license found in the</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># LICENSE file in the root directory of this source tree.</span>\n<span class=\"ansi-green-fg\">----&gt; 7</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">aggregation</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">auc</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> auc\n<span class=\"ansi-green-fg ansi-bold\">      8</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">aggregation</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">mean</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> mean\n<span class=\"ansi-green-fg ansi-bold\">      9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torcheval</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">aggregation</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">sum</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(0,135,0)\">sum</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torcheval/metrics/functional/aggregation/auc.py:7</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Copyright (c) Meta Platforms, Inc. and affiliates.</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># All rights reserved.</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(95,135,135)\">#</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># This source code is licensed under the BSD-style license found in the</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># LICENSE file in the root directory of this source tree.</span>\n<span class=\"ansi-green-fg\">----&gt; 7</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg ansi-bold\">     10</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_auc_compute</span>(\n<span class=\"ansi-green-fg ansi-bold\">     11</span>     x: torch<span style=\"color:rgb(98,98,98)\">.</span>Tensor, y: torch<span style=\"color:rgb(98,98,98)\">.</span>Tensor, reorder: <span style=\"color:rgb(0,135,0)\">bool</span> <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>\n<span class=\"ansi-green-fg ansi-bold\">     12</span> ) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> torch<span style=\"color:rgb(98,98,98)\">.</span>Tensor:\n<span class=\"ansi-green-fg ansi-bold\">     13</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Computes area under the curve using the trapezoidal rule.</span>\n<span class=\"ansi-green-fg ansi-bold\">     14</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Args:</span>\n<span class=\"ansi-green-fg ansi-bold\">     15</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">        x: x-coordinates,</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">     19</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">        Tensor containing AUC score (float)</span>\n<span class=\"ansi-green-fg ansi-bold\">     20</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#72db822f .cell execution_count=4}\n``` {.python .cell-code}\nxl,yl = 'image','label'\nname = \"fashion_mnist\"\ndsd = load_dataset(name)\n\n@inplace\ndef transformi(b): b[xl] = [F.pad(TF.to_tensor(o), (2,2,2,2))-0.5 for o in b[xl]]\n\nbs = 512\ntds = dsd.with_transform(transformi)\ndls = DataLoaders.from_dd(tds, bs, num_workers=8)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> xl,yl <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">image</span><span style=\"color:rgb(175,0,0)\">'</span>,<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">label</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> name <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">fashion_mnist</span><span style=\"color:rgb(175,0,0)\">\"</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> dsd <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">load_dataset</span>(name)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"color:rgb(175,0,255)\">@inplace</span>\n<span class=\"ansi-green-fg ansi-bold\">      6</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">transformi</span>(b): b[xl] <span style=\"color:rgb(98,98,98)\">=</span> [F<span style=\"color:rgb(98,98,98)\">.</span>pad(TF<span style=\"color:rgb(98,98,98)\">.</span>to_tensor(o), (<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>))<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">0.5</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> b[xl]]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'load_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8943238f .cell execution_count=5}\n``` {.python .cell-code}\nfrom types import SimpleNamespace\n```\n:::\n\n\n::: {#2be6598d .cell execution_count=6}\n``` {.python .cell-code}\ndef linear_sched(betamin=0.0001,betamax=0.02,n_steps=1000):\n    beta = torch.linspace(betamin, betamax, n_steps)\n    return SimpleNamespace(a=1.-beta, abar=(1.-beta).cumprod(dim=0), sig=beta.sqrt())\n```\n:::\n\n\n::: {#a214cc6b .cell execution_count=7}\n``` {.python .cell-code}\ndef abar(t, T): return (t/T*math.pi/2).cos()**2\n```\n:::\n\n\n::: {#da270c38 .cell execution_count=8}\n``` {.python .cell-code}\ndef cos_sched(n_steps=1000):\n    ts = torch.linspace(0, n_steps-1, n_steps)\n    ab = abar(ts,n_steps)\n    alp = ab/abar(ts-1,n_steps)\n    return SimpleNamespace(a=alp, abar=ab, sig=(1-alp).sqrt())\n```\n:::\n\n\n::: {#74b4d2eb .cell execution_count=9}\n``` {.python .cell-code}\nlin_abar = linear_sched().abar\ncos_abar = cos_sched().abar\nplt.plot(lin_abar, label='lin')\nplt.plot(cos_abar, label='cos')\nplt.legend();\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[9], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> lin_abar <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">linear_sched</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\">.</span>abar\n<span class=\"ansi-green-fg ansi-bold\">      2</span> cos_abar <span style=\"color:rgb(98,98,98)\">=</span> cos_sched()<span style=\"color:rgb(98,98,98)\">.</span>abar\n<span class=\"ansi-green-fg ansi-bold\">      3</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(lin_abar, label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">lin</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\nCell <span class=\"ansi-green-fg\">In[6], line 2</span>, in <span class=\"ansi-cyan-fg\">linear_sched</span><span class=\"ansi-blue-fg\">(betamin, betamax, n_steps)</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">linear_sched</span>(betamin<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.0001</span>,betamax<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.02</span>,n_steps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1000</span>):\n<span class=\"ansi-green-fg\">----&gt; 2</span>     beta <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>linspace(betamin, betamax, n_steps)\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> SimpleNamespace(a<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span><span style=\"color:rgb(98,98,98)\">-</span>beta, abar<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">1.</span><span style=\"color:rgb(98,98,98)\">-</span>beta)<span style=\"color:rgb(98,98,98)\">.</span>cumprod(dim<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0</span>), sig<span style=\"color:rgb(98,98,98)\">=</span>beta<span style=\"color:rgb(98,98,98)\">.</span>sqrt())\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#242616d1 .cell execution_count=10}\n``` {.python .cell-code}\nplt.plot(lin_abar[1:]-lin_abar[:-1], label='lin')\nplt.plot(cos_abar[1:]-cos_abar[:-1], label='cos')\nplt.legend();\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">plt</span><span style=\"color:rgb(98,98,98)\">.</span>plot(lin_abar[<span style=\"color:rgb(98,98,98)\">1</span>:]<span style=\"color:rgb(98,98,98)\">-</span>lin_abar[:<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>], label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">lin</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(cos_abar[<span style=\"color:rgb(98,98,98)\">1</span>:]<span style=\"color:rgb(98,98,98)\">-</span>cos_abar[:<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>], label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">cos</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> plt<span style=\"color:rgb(98,98,98)\">.</span>legend();\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'plt' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#eb826cfc .cell execution_count=11}\n``` {.python .cell-code}\nlin_abar = linear_sched(betamax=0.01).abar\nplt.plot(lin_abar, label='lin')\nplt.plot(cos_abar, label='cos')\nplt.legend();\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[11], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> lin_abar <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">linear_sched</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">betamax</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">0.01</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\">.</span>abar\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(lin_abar, label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">lin</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(cos_abar, label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">cos</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\nCell <span class=\"ansi-green-fg\">In[6], line 2</span>, in <span class=\"ansi-cyan-fg\">linear_sched</span><span class=\"ansi-blue-fg\">(betamin, betamax, n_steps)</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">linear_sched</span>(betamin<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.0001</span>,betamax<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.02</span>,n_steps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1000</span>):\n<span class=\"ansi-green-fg\">----&gt; 2</span>     beta <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>linspace(betamin, betamax, n_steps)\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> SimpleNamespace(a<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span><span style=\"color:rgb(98,98,98)\">-</span>beta, abar<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">1.</span><span style=\"color:rgb(98,98,98)\">-</span>beta)<span style=\"color:rgb(98,98,98)\">.</span>cumprod(dim<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0</span>), sig<span style=\"color:rgb(98,98,98)\">=</span>beta<span style=\"color:rgb(98,98,98)\">.</span>sqrt())\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f7ff67d3 .cell execution_count=12}\n``` {.python .cell-code}\nplt.plot(lin_abar[1:]-lin_abar[:-1], label='lin')\nplt.plot(cos_abar[1:]-cos_abar[:-1], label='cos')\nplt.legend();\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[12], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">plt</span><span style=\"color:rgb(98,98,98)\">.</span>plot(lin_abar[<span style=\"color:rgb(98,98,98)\">1</span>:]<span style=\"color:rgb(98,98,98)\">-</span>lin_abar[:<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>], label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">lin</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(cos_abar[<span style=\"color:rgb(98,98,98)\">1</span>:]<span style=\"color:rgb(98,98,98)\">-</span>cos_abar[:<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>], label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">cos</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> plt<span style=\"color:rgb(98,98,98)\">.</span>legend();\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'plt' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7a6324c4 .cell execution_count=13}\n``` {.python .cell-code}\nn_steps = 1000\nlin_abar = linear_sched(betamax=0.01)\nalphabar = lin_abar.abar\nalpha = lin_abar.a\nsigma = lin_abar.sig\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[13], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> n_steps <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1000</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> lin_abar <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">linear_sched</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">betamax</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">=</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">0.01</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> alphabar <span style=\"color:rgb(98,98,98)\">=</span> lin_abar<span style=\"color:rgb(98,98,98)\">.</span>abar\n<span class=\"ansi-green-fg ansi-bold\">      4</span> alpha <span style=\"color:rgb(98,98,98)\">=</span> lin_abar<span style=\"color:rgb(98,98,98)\">.</span>a\n\nCell <span class=\"ansi-green-fg\">In[6], line 2</span>, in <span class=\"ansi-cyan-fg\">linear_sched</span><span class=\"ansi-blue-fg\">(betamin, betamax, n_steps)</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">linear_sched</span>(betamin<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.0001</span>,betamax<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.02</span>,n_steps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1000</span>):\n<span class=\"ansi-green-fg\">----&gt; 2</span>     beta <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>linspace(betamin, betamax, n_steps)\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> SimpleNamespace(a<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span><span style=\"color:rgb(98,98,98)\">-</span>beta, abar<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">1.</span><span style=\"color:rgb(98,98,98)\">-</span>beta)<span style=\"color:rgb(98,98,98)\">.</span>cumprod(dim<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0</span>), sig<span style=\"color:rgb(98,98,98)\">=</span>beta<span style=\"color:rgb(98,98,98)\">.</span>sqrt())\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#91bdcdf6 .cell execution_count=14}\n``` {.python .cell-code}\ndef noisify(x0, ᾱ):\n    device = x0.device\n    n = len(x0)\n    t = torch.randint(0, n_steps, (n,), dtype=torch.long)\n    ε = torch.randn(x0.shape, device=device)\n    ᾱ_t = ᾱ[t].reshape(-1, 1, 1, 1).to(device)\n    xt = ᾱ_t.sqrt()*x0 + (1-ᾱ_t).sqrt()*ε\n    return (xt, t.to(device)), ε\n```\n:::\n\n\n::: {#0aabc356 .cell execution_count=15}\n``` {.python .cell-code}\ndt = dls.train\nxb,yb = next(iter(dt))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[15], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> dt <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train\n<span class=\"ansi-green-fg ansi-bold\">      2</span> xb,yb <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(<span style=\"color:rgb(0,135,0)\">iter</span>(dt))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1afd13d2 .cell execution_count=16}\n``` {.python .cell-code}\n(xt,t),ε = noisify(xb[:25],alphabar)\nt\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[16], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> (xt,t),ε <span style=\"color:rgb(98,98,98)\">=</span> noisify(<span class=\"ansi-yellow-bg\">xb</span>[:<span style=\"color:rgb(98,98,98)\">25</span>],alphabar)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> t\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'xb' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d0c3445e .cell execution_count=17}\n``` {.python .cell-code}\ntitles = fc.map_ex(t[:25], '{}')\nshow_images(xt[:25], imsize=1.5, titles=titles)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[17], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> titles <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">fc</span><span style=\"color:rgb(98,98,98)\">.</span>map_ex(t[:<span style=\"color:rgb(98,98,98)\">25</span>], <span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{}</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> show_images(xt[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>titles)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'fc' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Training\n\n::: {#c6ee95e3 .cell execution_count=18}\n``` {.python .cell-code}\nfrom diffusers import UNet2DModel\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[18], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">diffusers</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> UNet2DModel\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/diffusers/__init__.py:5</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> __version__ <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">0.32.1</span><span style=\"color:rgb(175,0,0)\">\"</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">typing</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> TYPE_CHECKING\n<span class=\"ansi-green-fg\">----&gt; 5</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">      6</span>     DIFFUSERS_SLOW_IMPORT,\n<span class=\"ansi-green-fg ansi-bold\">      7</span>     OptionalDependencyNotAvailable,\n<span class=\"ansi-green-fg ansi-bold\">      8</span>     _LazyModule,\n<span class=\"ansi-green-fg ansi-bold\">      9</span>     is_flax_available,\n<span class=\"ansi-green-fg ansi-bold\">     10</span>     is_k_diffusion_available,\n<span class=\"ansi-green-fg ansi-bold\">     11</span>     is_librosa_available,\n<span class=\"ansi-green-fg ansi-bold\">     12</span>     is_note_seq_available,\n<span class=\"ansi-green-fg ansi-bold\">     13</span>     is_onnx_available,\n<span class=\"ansi-green-fg ansi-bold\">     14</span>     is_scipy_available,\n<span class=\"ansi-green-fg ansi-bold\">     15</span>     is_sentencepiece_available,\n<span class=\"ansi-green-fg ansi-bold\">     16</span>     is_torch_available,\n<span class=\"ansi-green-fg ansi-bold\">     17</span>     is_torchsde_available,\n<span class=\"ansi-green-fg ansi-bold\">     18</span>     is_transformers_available,\n<span class=\"ansi-green-fg ansi-bold\">     19</span> )\n<span class=\"ansi-green-fg ansi-bold\">     22</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Lazy Import based on</span>\n<span class=\"ansi-green-fg ansi-bold\">     23</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># https://github.com/huggingface/transformers/blob/main/src/transformers/__init__.py</span>\n<span class=\"ansi-green-fg ansi-bold\">     24</span> \n<span class=\"ansi-green-fg ansi-bold\">     25</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># When adding a new object to this init, please add it to `_import_structure`. The `_import_structure` is a dictionary submodule to list of object names,</span>\n<span class=\"ansi-green-fg ansi-bold\">     26</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># and is used to defer the actual importing for when the objects are requested.</span>\n<span class=\"ansi-green-fg ansi-bold\">     27</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># This way `import diffusers` provides the names in the namespace without actually importing anything (and especially none of the backends).</span>\n<span class=\"ansi-green-fg ansi-bold\">     29</span> _import_structure <span style=\"color:rgb(98,98,98)\">=</span> {\n<span class=\"ansi-green-fg ansi-bold\">     30</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">configuration_utils</span><span style=\"color:rgb(175,0,0)\">\"</span>: [<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ConfigMixin</span><span style=\"color:rgb(175,0,0)\">\"</span>],\n<span class=\"ansi-green-fg ansi-bold\">     31</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">loaders</span><span style=\"color:rgb(175,0,0)\">\"</span>: [<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">FromOriginalModelMixin</span><span style=\"color:rgb(175,0,0)\">\"</span>],\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">     53</span>     ],\n<span class=\"ansi-green-fg ansi-bold\">     54</span> }\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/diffusers/utils/__init__.py:106</span>\n<span class=\"ansi-green-fg ansi-bold\">    104</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">logging</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> get_logger\n<span class=\"ansi-green-fg ansi-bold\">    105</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">outputs</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> BaseOutput\n<span class=\"ansi-green-fg\">--&gt; 106</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">peft_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">    107</span>     check_peft_version,\n<span class=\"ansi-green-fg ansi-bold\">    108</span>     delete_adapter_layers,\n<span class=\"ansi-green-fg ansi-bold\">    109</span>     get_adapter_name,\n<span class=\"ansi-green-fg ansi-bold\">    110</span>     get_peft_kwargs,\n<span class=\"ansi-green-fg ansi-bold\">    111</span>     recurse_remove_peft_layers,\n<span class=\"ansi-green-fg ansi-bold\">    112</span>     scale_lora_layers,\n<span class=\"ansi-green-fg ansi-bold\">    113</span>     set_adapter_layers,\n<span class=\"ansi-green-fg ansi-bold\">    114</span>     set_weights_and_activate_adapters,\n<span class=\"ansi-green-fg ansi-bold\">    115</span>     unscale_lora_layers,\n<span class=\"ansi-green-fg ansi-bold\">    116</span> )\n<span class=\"ansi-green-fg ansi-bold\">    117</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pil_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> PIL_INTERPOLATION, make_image_grid, numpy_to_pil, pt_to_pil\n<span class=\"ansi-green-fg ansi-bold\">    118</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">state_dict_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">    119</span>     convert_all_state_dict_to_peft,\n<span class=\"ansi-green-fg ansi-bold\">    120</span>     convert_state_dict_to_diffusers,\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    123</span>     convert_unet_state_dict_to_peft,\n<span class=\"ansi-green-fg ansi-bold\">    124</span> )\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/diffusers/utils/peft_utils.py:28</span>\n<span class=\"ansi-green-fg ansi-bold\">     24</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">import_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> is_peft_available, is_torch_available\n<span class=\"ansi-green-fg ansi-bold\">     27</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> is_torch_available():\n<span class=\"ansi-green-fg\">---&gt; 28</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg ansi-bold\">     31</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">recurse_remove_peft_layers</span>(model):\n<span class=\"ansi-green-fg ansi-bold\">     32</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"color:rgb(175,0,0)\">r</span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     33</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Recursively replace all instances of `LoraLayer` with corresponding new layers in `model`.</span>\n<span class=\"ansi-green-fg ansi-bold\">     34</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#127fc9c3 .cell execution_count=19}\n``` {.python .cell-code}\nclass UNet(UNet2DModel):\n    def forward(self, x): return super().forward(*x).sample\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[19], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">UNet</span>(<span class=\"ansi-yellow-bg\">UNet2DModel</span>):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">forward</span>(<span style=\"color:rgb(0,135,0)\">self</span>, x): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span>forward(<span style=\"color:rgb(98,98,98)\">*</span>x)<span style=\"color:rgb(98,98,98)\">.</span>sample\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'UNet2DModel' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4342d9ee .cell execution_count=20}\n``` {.python .cell-code}\ndef init_ddpm(model):\n    for o in model.down_blocks:\n        for p in o.resnets:\n            p.conv2.weight.data.zero_()\n            for p in fc.L(o.downsamplers): init.orthogonal_(p.conv.weight)\n\n    for o in model.up_blocks:\n        for p in o.resnets: p.conv2.weight.data.zero_()\n\n    model.conv_out.weight.data.zero_()\n```\n:::\n\n\n::: {#47950cdc .cell execution_count=21}\n``` {.python .cell-code}\ndef collate_ddpm(b): return noisify(default_collate(b)[xl], alphabar)\ndef dl_ddpm(ds, nw=4): return DataLoader(ds, batch_size=bs, collate_fn=collate_ddpm, num_workers=nw)\n```\n:::\n\n\n::: {#d98e911d .cell execution_count=22}\n``` {.python .cell-code}\ndls = DataLoaders(dl_ddpm(tds['train']), dl_ddpm(tds['test']))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[22], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> dls <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">DataLoaders</span>(dl_ddpm(tds[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">train</span><span style=\"color:rgb(175,0,0)\">'</span>]), dl_ddpm(tds[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">test</span><span style=\"color:rgb(175,0,0)\">'</span>]))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'DataLoaders' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#caa3edb6 .cell execution_count=23}\n``` {.python .cell-code}\nlr = 1e-2\nepochs = 25\nopt_func = partial(optim.AdamW, eps=1e-5)\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\ncbs = [DeviceCB(), MixedPrecision(), ProgressCB(plot=True), MetricsCB(), BatchSchedCB(sched)]\nmodel = UNet(in_channels=1, out_channels=1, block_out_channels=(32, 64, 128, 256), norm_num_groups=8)\ninit_ddpm(model)\nlearn = Learner(model, dls, nn.MSELoss(), lr=lr, cbs=cbs, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1e-2</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">25</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> opt_func <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">partial</span>(optim<span style=\"color:rgb(98,98,98)\">.</span>AdamW, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-5</span>)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(dls<span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'partial' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4b235bbf .cell execution_count=24}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[24], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6aac7cfa .cell execution_count=25}\n``` {.python .cell-code}\nmdl_path = Path('models')\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[25], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> mdl_path <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">Path</span>(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'Path' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#87aebfc0 .cell execution_count=26}\n``` {.python .cell-code}\n# torch.save(learn.model, mdl_path/'fashion_ddpm3_25.pkl')\n```\n:::\n\n\n::: {#63b2adc4 .cell execution_count=27}\n``` {.python .cell-code}\nmodel = torch.load(mdl_path/'fashion_ddpm3_25.pkl').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>load(mdl_path<span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">fashion_ddpm3_25.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)<span style=\"color:rgb(98,98,98)\">.</span>cuda()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#cb167c2a .cell execution_count=28}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample(model, sz):\n    ps = next(model.parameters())\n    x_t = torch.randn(sz).to(ps)\n    preds = []\n    for t in reversed(range(n_steps)):\n        t_batch = torch.full((x_t.shape[0],), t, device=ps.device, dtype=torch.long)\n        z = (torch.randn(x_t.shape) if t > 0 else torch.zeros(x_t.shape)).to(ps)\n        ᾱ_t1 = alphabar[t-1]  if t > 0 else torch.tensor(1)\n        b̄_t = 1-alphabar[t]\n        b̄_t1 = 1-ᾱ_t1\n        noise = model((x_t, t_batch))\n        x_0_hat = ((x_t - b̄_t.sqrt() * noise)/alphabar[t].sqrt())\n        x_t = x_0_hat * ᾱ_t1.sqrt()*(1-alpha[t])/b̄_t + x_t * alpha[t].sqrt()*b̄_t1/b̄_t + sigma[t]*z\n        preds.append(x_t.float().cpu())\n    return preds\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[28], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample</span>(model, sz):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     ps <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(model<span style=\"color:rgb(98,98,98)\">.</span>parameters())\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     x_t <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(sz)<span style=\"color:rgb(98,98,98)\">.</span>to(ps)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1d428636 .cell execution_count=29}\n``` {.python .cell-code}\nn_samples = 512\n```\n:::\n\n\n::: {#c74db0db .cell execution_count=30}\n``` {.python .cell-code}\n%%time\nsamples = sample(model, (n_samples, 1, 32, 32))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sample' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7ae7211d .cell execution_count=31}\n``` {.python .cell-code}\ns = (samples[-1]*2)#.clamp(-1,1)\ns.min(),s.max()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[31], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">samples</span>[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"font-style:italic;color:rgb(95,135,135)\">#.clamp(-1,1)</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> s<span style=\"color:rgb(98,98,98)\">.</span>min(),s<span style=\"color:rgb(98,98,98)\">.</span>max()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'samples' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d90cd558 .cell execution_count=32}\n``` {.python .cell-code}\nshow_images(s[:16], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[32], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">16</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#57fcbf75 .cell execution_count=33}\n``` {.python .cell-code}\n@inplace\ndef transformi2(b): b[xl] = [F.pad(TF.to_tensor(o), (2,2,2,2))*2-1 for o in b[xl]]\n\ntds2 = dsd.with_transform(transformi2)\ndls2 = DataLoaders.from_dd(tds2, bs, num_workers=fc.defaults.cpus)\n\ncmodel = torch.load('models/data_aug2.pkl')\ndel(cmodel[8])\ndel(cmodel[7])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[33], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@inplace</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">transformi2</span>(b): b[xl] <span style=\"color:rgb(98,98,98)\">=</span> [F<span style=\"color:rgb(98,98,98)\">.</span>pad(TF<span style=\"color:rgb(98,98,98)\">.</span>to_tensor(o), (<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>))<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span><span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> b[xl]]\n<span class=\"ansi-green-fg ansi-bold\">      4</span> tds2 <span style=\"color:rgb(98,98,98)\">=</span> dsd<span style=\"color:rgb(98,98,98)\">.</span>with_transform(transformi2)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'inplace' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0d56ac17 .cell execution_count=34}\n``` {.python .cell-code}\nfrom miniai.fid import ImageEval\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[34], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">miniai</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">fid</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> ImageEval\n\nFile <span class=\"ansi-green-fg\">~/work/blog/notes/dlfc_p2/miniai/fid.py:7</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> __all__ <span style=\"color:rgb(98,98,98)\">=</span> [<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">ImageEval</span><span style=\"color:rgb(175,0,0)\">'</span>]\n<span class=\"ansi-green-fg ansi-bold\">      6</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># %% ../nbs/18_fid.ipynb 2</span>\n<span class=\"ansi-green-fg\">----&gt; 7</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pickle</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">gzip</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">os</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">time</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">shutil</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span>\n<span class=\"ansi-green-fg ansi-bold\">      8</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">collections</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">abc</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Mapping\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0b2a80c1 .cell execution_count=35}\n``` {.python .cell-code}\nie = ImageEval(cmodel, dls2, cbs=[DeviceCB()])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> ie <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">ImageEval</span>(cmodel, dls2, cbs<span style=\"color:rgb(98,98,98)\">=</span>[DeviceCB()])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ImageEval' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8fe91279 .cell execution_count=36}\n``` {.python .cell-code}\nie.fid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[36], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e29be7ce .cell execution_count=37}\n``` {.python .cell-code}\ns.min(),s.max()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[37], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">s</span><span style=\"color:rgb(98,98,98)\">.</span>min(),s<span style=\"color:rgb(98,98,98)\">.</span>max()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 's' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1294d1a5 .cell execution_count=38}\n``` {.python .cell-code}\nie.fid(xb*2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[38], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(xb<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n### Skip sampling\n\n::: {#32cb053c .cell execution_count=39}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample_skip(model, sz):\n    ps = next(model.parameters())\n    x_t = torch.randn(sz).to(ps)\n    preds = []\n    for t in reversed(range(n_steps)):\n        t_batch = torch.full((x_t.shape[0],), t, device=ps.device, dtype=torch.long)\n        z = (torch.randn(x_t.shape) if t > 0 else torch.zeros(x_t.shape)).to(ps)\n        ᾱ_t1 = alphabar[t-1]  if t > 0 else torch.tensor(1)\n        b̄_t = 1-alphabar[t]\n        b̄_t1 = 1-ᾱ_t1\n        if t%3==0 or t<50: noise = model((x_t, t_batch))\n        x_0_hat = ((x_t - b̄_t.sqrt() * noise)/alphabar[t].sqrt())\n        x_t = x_0_hat * ᾱ_t1.sqrt()*(1-alpha[t])/b̄_t + x_t * alpha[t].sqrt()*b̄_t1/b̄_t + sigma[t]*z\n        preds.append(x_t.cpu().float())\n    return preds\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[39], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample_skip</span>(model, sz):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     ps <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(model<span style=\"color:rgb(98,98,98)\">.</span>parameters())\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     x_t <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(sz)<span style=\"color:rgb(98,98,98)\">.</span>to(ps)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#20bd1bba .cell execution_count=40}\n``` {.python .cell-code}\n%%time\nsamples = sample_skip(model, (n_samples, 1, 32, 32))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sample_skip' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#bf9087e7 .cell execution_count=41}\n``` {.python .cell-code}\ns = (samples[-1]*2)#.clamp(-1,1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">samples</span>[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"font-style:italic;color:rgb(95,135,135)\">#.clamp(-1,1)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'samples' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#3e5da9e8 .cell execution_count=42}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8639fa0c .cell execution_count=43}\n``` {.python .cell-code}\nie.fid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#42211446 .cell execution_count=44}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample2(model, sz):\n    ps = next(model.parameters())\n    x_t = torch.randn(sz).to(ps)\n    sample_at = {t for t in range(n_steps) if (t+101)%((t+101)//100)==0}\n    preds = []\n    for t in reversed(range(n_steps)):\n        t_batch = torch.full((x_t.shape[0],), t, device=ps.device, dtype=torch.long)\n        z = (torch.randn(x_t.shape) if t > 0 else torch.zeros(x_t.shape)).to(ps)\n        ᾱ_t1 = alphabar[t-1]  if t > 0 else torch.tensor(1)\n        b̄_t = 1-alphabar[t]\n        b̄_t1 = 1-ᾱ_t1\n        if t in sample_at: noise = model((x_t, t_batch))\n        x_0_hat = ((x_t - b̄_t.sqrt() * noise)/alphabar[t].sqrt())\n        x_t = x_0_hat * ᾱ_t1.sqrt()*(1-alpha[t])/b̄_t + x_t * alpha[t].sqrt()*b̄_t1/b̄_t + sigma[t]*z\n        if t in sample_at: preds.append(x_t.float().cpu())\n    return preds\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample2</span>(model, sz):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     ps <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(model<span style=\"color:rgb(98,98,98)\">.</span>parameters())\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     x_t <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(sz)<span style=\"color:rgb(98,98,98)\">.</span>to(ps)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#37ef53a2 .cell execution_count=45}\n``` {.python .cell-code}\n%%time\nsamples = sample2(model, (n_samples, 1, 32, 32))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">&lt;timed exec&gt;:1</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sample2' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#afd60bc5 .cell execution_count=46}\n``` {.python .cell-code}\ns = (samples[-1]*2)#.clamp(-1,1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[46], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">samples</span>[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span>)<span style=\"font-style:italic;color:rgb(95,135,135)\">#.clamp(-1,1)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'samples' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2d43487b .cell execution_count=47}\n``` {.python .cell-code}\nshow_images(s[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9bd3c697 .cell execution_count=48}\n``` {.python .cell-code}\nie.fid(s)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "19_DDPM_v3_files"
    ],
    "filters": [],
    "includes": {}
  }
}