{
  "hash": "8e63bc5a645e37331c8538c86f1eb384",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Karras pre-conditioning\njupyter: python3\nimage: cover.png\n---\n\n::: {#d253255c .cell execution_count=1}\n``` {.python .cell-code}\nimport os\nos.environ['CUDA_VISIBLE_DEVICES']='0'\n```\n:::\n\n\n::: {#60665780 .cell execution_count=2}\n``` {.python .cell-code}\nimport timm, torch, random, datasets, math, fastcore.all as fc, numpy as np, matplotlib as mpl, matplotlib.pyplot as plt\nimport k_diffusion as K, torchvision.transforms as T\nimport torchvision.transforms.functional as TF,torch.nn.functional as F\n\nfrom torch.utils.data import DataLoader,default_collate\nfrom pathlib import Path\nfrom torch.nn import init\nfrom fastcore.foundation import L\nfrom torch import nn,tensor\nfrom datasets import load_dataset\nfrom operator import itemgetter\nfrom torcheval.metrics import MulticlassAccuracy\nfrom functools import partial\nfrom torch.optim import lr_scheduler\nfrom torch import optim\n\nfrom miniai.datasets import *\nfrom miniai.conv import *\nfrom miniai.learner import *\nfrom miniai.activations import *\nfrom miniai.init import *\nfrom miniai.sgd import *\nfrom miniai.resnet import *\nfrom miniai.augment import *\nfrom miniai.accel import *\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">timm</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">datasets</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">k_diffusion</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">K</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torchvision</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">transforms</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">T</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torchvision</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">transforms</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">TF</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">nn</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">F</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/timm/__init__.py:2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">version</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> __version__\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">layers</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> is_scriptable, is_exportable, set_scriptable, set_exportable\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">models</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> create_model, list_models, list_pretrained, is_model, list_modules, model_entrypoint, \\\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     is_model_pretrained, get_pretrained_cfg, get_pretrained_cfg_value\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/timm/layers/__init__.py:1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">activations</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">adaptive_avgmax_pool</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> \\\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     adaptive_avgmax_pool2d, select_adaptive_pool2d, AdaptiveAvgMaxPool2d, SelectAdaptivePool2d\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">attention2d</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> MultiQueryAttention2d, Attention2d, MultiQueryAttentionV2\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/timm/layers/activations.py:9</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\" Activations</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> \n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">A collection of activations fn and modules with a common interface so that they can</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">      6</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Hacked together by / Copyright 2020 Ross Wightman</span>\n<span class=\"ansi-green-fg ansi-bold\">      7</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg\">----&gt; 9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg ansi-bold\">     10</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> nn <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> nn\n<span class=\"ansi-green-fg ansi-bold\">     11</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">nn</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> functional <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> F\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5c8c0ee7 .cell execution_count=3}\n``` {.python .cell-code}\nfrom fastprogress import progress_bar\nfrom diffusers import UNet2DModel, DDIMPipeline, DDPMPipeline, DDIMScheduler, DDPMScheduler\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[3], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastprogress</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> progress_bar\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">diffusers</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> UNet2DModel, DDIMPipeline, DDPMPipeline, DDIMScheduler, DDPMScheduler\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/diffusers/__init__.py:5</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> __version__ <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">0.32.1</span><span style=\"color:rgb(175,0,0)\">\"</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">typing</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> TYPE_CHECKING\n<span class=\"ansi-green-fg\">----&gt; 5</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">      6</span>     DIFFUSERS_SLOW_IMPORT,\n<span class=\"ansi-green-fg ansi-bold\">      7</span>     OptionalDependencyNotAvailable,\n<span class=\"ansi-green-fg ansi-bold\">      8</span>     _LazyModule,\n<span class=\"ansi-green-fg ansi-bold\">      9</span>     is_flax_available,\n<span class=\"ansi-green-fg ansi-bold\">     10</span>     is_k_diffusion_available,\n<span class=\"ansi-green-fg ansi-bold\">     11</span>     is_librosa_available,\n<span class=\"ansi-green-fg ansi-bold\">     12</span>     is_note_seq_available,\n<span class=\"ansi-green-fg ansi-bold\">     13</span>     is_onnx_available,\n<span class=\"ansi-green-fg ansi-bold\">     14</span>     is_scipy_available,\n<span class=\"ansi-green-fg ansi-bold\">     15</span>     is_sentencepiece_available,\n<span class=\"ansi-green-fg ansi-bold\">     16</span>     is_torch_available,\n<span class=\"ansi-green-fg ansi-bold\">     17</span>     is_torchsde_available,\n<span class=\"ansi-green-fg ansi-bold\">     18</span>     is_transformers_available,\n<span class=\"ansi-green-fg ansi-bold\">     19</span> )\n<span class=\"ansi-green-fg ansi-bold\">     22</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Lazy Import based on</span>\n<span class=\"ansi-green-fg ansi-bold\">     23</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># https://github.com/huggingface/transformers/blob/main/src/transformers/__init__.py</span>\n<span class=\"ansi-green-fg ansi-bold\">     24</span> \n<span class=\"ansi-green-fg ansi-bold\">     25</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># When adding a new object to this init, please add it to `_import_structure`. The `_import_structure` is a dictionary submodule to list of object names,</span>\n<span class=\"ansi-green-fg ansi-bold\">     26</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># and is used to defer the actual importing for when the objects are requested.</span>\n<span class=\"ansi-green-fg ansi-bold\">     27</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># This way `import diffusers` provides the names in the namespace without actually importing anything (and especially none of the backends).</span>\n<span class=\"ansi-green-fg ansi-bold\">     29</span> _import_structure <span style=\"color:rgb(98,98,98)\">=</span> {\n<span class=\"ansi-green-fg ansi-bold\">     30</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">configuration_utils</span><span style=\"color:rgb(175,0,0)\">\"</span>: [<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ConfigMixin</span><span style=\"color:rgb(175,0,0)\">\"</span>],\n<span class=\"ansi-green-fg ansi-bold\">     31</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">loaders</span><span style=\"color:rgb(175,0,0)\">\"</span>: [<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">FromOriginalModelMixin</span><span style=\"color:rgb(175,0,0)\">\"</span>],\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">     53</span>     ],\n<span class=\"ansi-green-fg ansi-bold\">     54</span> }\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/diffusers/utils/__init__.py:106</span>\n<span class=\"ansi-green-fg ansi-bold\">    104</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">logging</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> get_logger\n<span class=\"ansi-green-fg ansi-bold\">    105</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">outputs</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> BaseOutput\n<span class=\"ansi-green-fg\">--&gt; 106</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">peft_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">    107</span>     check_peft_version,\n<span class=\"ansi-green-fg ansi-bold\">    108</span>     delete_adapter_layers,\n<span class=\"ansi-green-fg ansi-bold\">    109</span>     get_adapter_name,\n<span class=\"ansi-green-fg ansi-bold\">    110</span>     get_peft_kwargs,\n<span class=\"ansi-green-fg ansi-bold\">    111</span>     recurse_remove_peft_layers,\n<span class=\"ansi-green-fg ansi-bold\">    112</span>     scale_lora_layers,\n<span class=\"ansi-green-fg ansi-bold\">    113</span>     set_adapter_layers,\n<span class=\"ansi-green-fg ansi-bold\">    114</span>     set_weights_and_activate_adapters,\n<span class=\"ansi-green-fg ansi-bold\">    115</span>     unscale_lora_layers,\n<span class=\"ansi-green-fg ansi-bold\">    116</span> )\n<span class=\"ansi-green-fg ansi-bold\">    117</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pil_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> PIL_INTERPOLATION, make_image_grid, numpy_to_pil, pt_to_pil\n<span class=\"ansi-green-fg ansi-bold\">    118</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">state_dict_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> (\n<span class=\"ansi-green-fg ansi-bold\">    119</span>     convert_all_state_dict_to_peft,\n<span class=\"ansi-green-fg ansi-bold\">    120</span>     convert_state_dict_to_diffusers,\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    123</span>     convert_unet_state_dict_to_peft,\n<span class=\"ansi-green-fg ansi-bold\">    124</span> )\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/diffusers/utils/peft_utils.py:28</span>\n<span class=\"ansi-green-fg ansi-bold\">     24</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">import_utils</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> is_peft_available, is_torch_available\n<span class=\"ansi-green-fg ansi-bold\">     27</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> is_torch_available():\n<span class=\"ansi-green-fg\">---&gt; 28</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg ansi-bold\">     31</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">recurse_remove_peft_layers</span>(model):\n<span class=\"ansi-green-fg ansi-bold\">     32</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"color:rgb(175,0,0)\">r</span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     33</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Recursively replace all instances of `LoraLayer` with corresponding new layers in `model`.</span>\n<span class=\"ansi-green-fg ansi-bold\">     34</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6b8b3ab1 .cell execution_count=4}\n``` {.python .cell-code}\ntorch.set_printoptions(precision=5, linewidth=140, sci_mode=False)\ntorch.manual_seed(1)\nmpl.rcParams['image.cmap'] = 'gray_r'\nmpl.rcParams['figure.dpi'] = 70\n\nimport logging\nlogging.disable(logging.WARNING)\n\nset_seed(42)\nif fc.defaults.cpus>8: fc.defaults.cpus=8\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>set_printoptions(precision<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">5</span>, linewidth<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">140</span>, sci_mode<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> torch<span style=\"color:rgb(98,98,98)\">.</span>manual_seed(<span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> mpl<span style=\"color:rgb(98,98,98)\">.</span>rcParams[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">image.cmap</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">gray_r</span><span style=\"color:rgb(175,0,0)\">'</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2bf230b7 .cell execution_count=5}\n``` {.python .cell-code}\nxl,yl = 'image','label'\nname = \"fashion_mnist\"\nn_steps = 1000\nbs = 512\ndsd = load_dataset(name)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[5], line 5</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> n_steps <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1000</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> bs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">512</span>\n<span class=\"ansi-green-fg\">----&gt; 5</span> dsd <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">load_dataset</span>(name)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'load_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#090955c4 .cell execution_count=6}\n``` {.python .cell-code}\n@inplace\ndef transformi(b): b[xl] = [F.pad(TF.to_tensor(o), (2,2,2,2))*2-1 for o in b[xl]]\n\ntds = dsd.with_transform(transformi)\ndls = DataLoaders.from_dd(tds, bs)\n\ndl = dls.train\nxb,yb = b = next(iter(dl))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[6], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@inplace</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">transformi</span>(b): b[xl] <span style=\"color:rgb(98,98,98)\">=</span> [F<span style=\"color:rgb(98,98,98)\">.</span>pad(TF<span style=\"color:rgb(98,98,98)\">.</span>to_tensor(o), (<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>,<span style=\"color:rgb(98,98,98)\">2</span>))<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">2</span><span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> b[xl]]\n<span class=\"ansi-green-fg ansi-bold\">      4</span> tds <span style=\"color:rgb(98,98,98)\">=</span> dsd<span style=\"color:rgb(98,98,98)\">.</span>with_transform(transformi)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'inplace' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0994bb2f .cell execution_count=7}\n``` {.python .cell-code}\n# sig_data = xb.std()\nsig_data = 0.66\n```\n:::\n\n\n`y` is clean signal, `n` is `N(0,1)` noise.\n\n![image.png](attachment:image.png)\n\n::: {#ee971b1b .cell execution_count=8}\n``` {.python .cell-code}\ndef scalings(sig):\n    totvar = sig**2+sig_data**2\n    # c_skip,c_out,c_in\n    return sig_data**2/totvar,sig*sig_data/totvar.sqrt(),1/totvar.sqrt()\n```\n:::\n\n\n![image.png](attachment:image.png)\n\n::: {#cc4a4e72 .cell execution_count=9}\n``` {.python .cell-code}\nsig_samp = (torch.randn([10000])*1.2-1.2).exp()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[9], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sig_samp <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>randn([<span style=\"color:rgb(98,98,98)\">10000</span>])<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">1.2</span><span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1.2</span>)<span style=\"color:rgb(98,98,98)\">.</span>exp()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d01480bf .cell execution_count=10}\n``` {.python .cell-code}\nplt.hist(sig_samp);\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">plt</span><span style=\"color:rgb(98,98,98)\">.</span>hist(sig_samp);\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'plt' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a3626cf7 .cell execution_count=11}\n``` {.python .cell-code}\nimport seaborn as sns\n```\n:::\n\n\n::: {#b3ce0291 .cell execution_count=12}\n``` {.python .cell-code}\nsns.kdeplot(sig_samp, clip=(0,10));\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[12], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sns<span style=\"color:rgb(98,98,98)\">.</span>kdeplot(<span class=\"ansi-yellow-bg\">sig_samp</span>, clip<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">0</span>,<span style=\"color:rgb(98,98,98)\">10</span>));\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sig_samp' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f2bad75c .cell execution_count=13}\n``` {.python .cell-code}\ndef noisify(x0):\n    device = x0.device\n    sig = (torch.randn([len(x0)])*1.2-1.2).exp().to(x0).reshape(-1,1,1,1)\n    noise = torch.randn_like(x0, device=device)\n    c_skip,c_out,c_in = scalings(sig)\n    noised_input = x0 + noise*sig\n    target = (x0-c_skip*noised_input)/c_out\n    return (noised_input*c_in,sig.squeeze()),target\n```\n:::\n\n\n::: {#c283b776 .cell execution_count=14}\n``` {.python .cell-code}\ndef collate_ddpm(b): return noisify(default_collate(b)[xl])\ndef dl_ddpm(ds): return DataLoader(ds, batch_size=bs, collate_fn=collate_ddpm, num_workers=8)\n```\n:::\n\n\n::: {#8d5ecbf9 .cell execution_count=15}\n``` {.python .cell-code}\ndls = DataLoaders(dl_ddpm(tds['train']), dl_ddpm(tds['test']))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[15], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> dls <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">DataLoaders</span>(dl_ddpm(tds[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">train</span><span style=\"color:rgb(175,0,0)\">'</span>]), dl_ddpm(tds[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">test</span><span style=\"color:rgb(175,0,0)\">'</span>]))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'DataLoaders' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8dcc7fb7 .cell execution_count=16}\n``` {.python .cell-code}\ndl = dls.train\n(noised_input,sig),target = b = next(iter(dl))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[16], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> dl <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train\n<span class=\"ansi-green-fg ansi-bold\">      2</span> (noised_input,sig),target <span style=\"color:rgb(98,98,98)\">=</span> b <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(<span style=\"color:rgb(0,135,0)\">iter</span>(dl))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c4c50b38 .cell execution_count=17}\n``` {.python .cell-code}\nshow_images(noised_input[:25], imsize=1.5, titles=fc.map_ex(sig[:25], '{:.02f}'))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[17], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(noised_input[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>map_ex(sig[:<span style=\"color:rgb(98,98,98)\">25</span>], <span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{:.02f}</span><span style=\"color:rgb(175,0,0)\">'</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#59d08093 .cell execution_count=18}\n``` {.python .cell-code}\nshow_images(target[:25], imsize=1.5, titles=fc.map_ex(sig[:25], '{:.02f}'))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[18], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(target[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>map_ex(sig[:<span style=\"color:rgb(98,98,98)\">25</span>], <span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{:.02f}</span><span style=\"color:rgb(175,0,0)\">'</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#976d1113 .cell execution_count=19}\n``` {.python .cell-code}\nnoised_input.mean(),noised_input.std(),target.mean(),target.std()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[19], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">noised_input</span><span style=\"color:rgb(98,98,98)\">.</span>mean(),noised_input<span style=\"color:rgb(98,98,98)\">.</span>std(),target<span style=\"color:rgb(98,98,98)\">.</span>mean(),target<span style=\"color:rgb(98,98,98)\">.</span>std()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'noised_input' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Train\n\n::: {#377914d0 .cell execution_count=20}\n``` {.python .cell-code}\nclass UNet(UNet2DModel):\n    def forward(self, x): return super().forward(*x).sample\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[20], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">UNet</span>(<span class=\"ansi-yellow-bg\">UNet2DModel</span>):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">forward</span>(<span style=\"color:rgb(0,135,0)\">self</span>, x): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span>forward(<span style=\"color:rgb(98,98,98)\">*</span>x)<span style=\"color:rgb(98,98,98)\">.</span>sample\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'UNet2DModel' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e9336e47 .cell execution_count=21}\n``` {.python .cell-code}\ndef init_ddpm(model):\n    for o in model.down_blocks:\n        for p in o.resnets:\n            p.conv2.weight.data.zero_()\n            for p in fc.L(o.downsamplers): init.orthogonal_(p.conv.weight)\n\n    for o in model.up_blocks:\n        for p in o.resnets: p.conv2.weight.data.zero_()\n\n    model.conv_out.weight.data.zero_()\n```\n:::\n\n\n::: {#54944323 .cell execution_count=22}\n``` {.python .cell-code}\nlr = 1e-2\nepochs = 25\nopt_func = partial(optim.Adam, eps=1e-5)\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\ncbs = [DeviceCB(), MixedPrecision(), ProgressCB(plot=True), MetricsCB(), BatchSchedCB(sched)]\nmodel = UNet(in_channels=1, out_channels=1, block_out_channels=(32, 64, 128, 256), norm_num_groups=8)\ninit_ddpm(model)\nlearn = Learner(model, dls, nn.MSELoss(), lr=lr, cbs=cbs, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[22], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1e-2</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">25</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> opt_func <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">partial</span>(optim<span style=\"color:rgb(98,98,98)\">.</span>Adam, eps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-5</span>)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(dls<span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'partial' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#caf45ef4 .cell execution_count=23}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7905a9a2 .cell execution_count=24}\n``` {.python .cell-code}\n# torch.save(learn.model, 'models/fashion_karras.pkl')\n# model = learn.model = torch.load('models/fashion_karras.pkl').cuda()\n```\n:::\n\n\n::: {#5641077a .cell execution_count=25}\n``` {.python .cell-code}\ndef denoise(target, noised_input): return target*c_out + noised_input*c_skip\n```\n:::\n\n\n::: {#dd464d42 .cell execution_count=26}\n``` {.python .cell-code}\nwith torch.no_grad():\n    sigr = sig.cuda().reshape(-1,1,1,1)\n    c_skip,c_out,c_in = scalings(sigr)\n    targ_pred = learn.model((noised_input.cuda(),sig.cuda()))\n    x0_pred = denoise(targ_pred, noised_input.cuda()/c_in)    \n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[26], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad():\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     sigr <span style=\"color:rgb(98,98,98)\">=</span> sig<span style=\"color:rgb(98,98,98)\">.</span>cuda()<span style=\"color:rgb(98,98,98)\">.</span>reshape(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     c_skip,c_out,c_in <span style=\"color:rgb(98,98,98)\">=</span> scalings(sigr)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9f1d8f35 .cell execution_count=27}\n``` {.python .cell-code}\nshow_images(noised_input[:25], imsize=1.5, titles=fc.map_ex(sig[:25], '{:.02f}'))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(noised_input[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>map_ex(sig[:<span style=\"color:rgb(98,98,98)\">25</span>], <span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{:.02f}</span><span style=\"color:rgb(175,0,0)\">'</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f14c4235 .cell execution_count=28}\n``` {.python .cell-code}\nshow_images(x0_pred[:25].clamp(-1,1), imsize=1.5, titles=fc.map_ex(sig[:25], '{:.02f}'))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[28], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(x0_pred[:<span style=\"color:rgb(98,98,98)\">25</span>]<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>map_ex(sig[:<span style=\"color:rgb(98,98,98)\">25</span>], <span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{:.02f}</span><span style=\"color:rgb(175,0,0)\">'</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#857fe60f .cell execution_count=29}\n``` {.python .cell-code}\nshow_images(denoise(target.cuda(), noised_input.cuda()/c_in)[:25], imsize=1.5, titles=fc.map_ex(sig[:25], '{:.02f}'))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[29], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denoise(target<span style=\"color:rgb(98,98,98)\">.</span>cuda(), noised_input<span style=\"color:rgb(98,98,98)\">.</span>cuda()<span style=\"color:rgb(98,98,98)\">/</span>c_in)[:<span style=\"color:rgb(98,98,98)\">25</span>], imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>map_ex(sig[:<span style=\"color:rgb(98,98,98)\">25</span>], <span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{:.02f}</span><span style=\"color:rgb(175,0,0)\">'</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#700f4e07 .cell execution_count=30}\n``` {.python .cell-code}\nsig_r = tensor(80.).cuda().reshape(-1,1,1,1)\nc_skip,c_out,c_in = scalings(sig_r)\nx_r = torch.randn(32,1,32,32).to(model.device)*sig_r\nwith torch.no_grad():\n    targ_pred = learn.model((x_r*c_in,sig_r.squeeze()))\n    x0_pred = denoise(targ_pred, x_r)\nshow_images(x0_pred[:25], imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[30], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sig_r <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">tensor</span>(<span style=\"color:rgb(98,98,98)\">80.</span>)<span style=\"color:rgb(98,98,98)\">.</span>cuda()<span style=\"color:rgb(98,98,98)\">.</span>reshape(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> c_skip,c_out,c_in <span style=\"color:rgb(98,98,98)\">=</span> scalings(sig_r)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> x_r <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(<span style=\"color:rgb(98,98,98)\">32</span>,<span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">32</span>,<span style=\"color:rgb(98,98,98)\">32</span>)<span style=\"color:rgb(98,98,98)\">.</span>to(model<span style=\"color:rgb(98,98,98)\">.</span>device)<span style=\"color:rgb(98,98,98)\">*</span>sig_r\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'tensor' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ca65dd1d .cell execution_count=31}\n``` {.python .cell-code}\nx0_pred.max(),x0_pred.min(),x0_pred.mean(),x0_pred.std()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[31], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">x0_pred</span><span style=\"color:rgb(98,98,98)\">.</span>max(),x0_pred<span style=\"color:rgb(98,98,98)\">.</span>min(),x0_pred<span style=\"color:rgb(98,98,98)\">.</span>mean(),x0_pred<span style=\"color:rgb(98,98,98)\">.</span>std()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'x0_pred' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Sampling\n\n::: {#8b5ab98a .cell execution_count=32}\n``` {.python .cell-code}\nfrom miniai.fid import ImageEval\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[32], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">miniai</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">fid</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> ImageEval\n\nFile <span class=\"ansi-green-fg\">~/work/blog/notes/dlfc_p2/miniai/fid.py:7</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> __all__ <span style=\"color:rgb(98,98,98)\">=</span> [<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">ImageEval</span><span style=\"color:rgb(175,0,0)\">'</span>]\n<span class=\"ansi-green-fg ansi-bold\">      6</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># %% ../nbs/18_fid.ipynb 2</span>\n<span class=\"ansi-green-fg\">----&gt; 7</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pickle</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">gzip</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">os</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">time</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">shutil</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span>\n<span class=\"ansi-green-fg ansi-bold\">      8</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">collections</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">abc</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> Mapping\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4389c781 .cell execution_count=33}\n``` {.python .cell-code}\ncmodel = torch.load('models/data_aug2.pkl')\ndel(cmodel[8])\ndel(cmodel[7])\n\nbs = 2048\ntds = dsd.with_transform(transformi)\ndls = DataLoaders.from_dd(tds, bs, num_workers=fc.defaults.cpus)\n\ndt = dls.train\nxb,yb = next(iter(dt))\n\nie = ImageEval(cmodel, dls, cbs=[DeviceCB()])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[33], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> cmodel <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>load(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/data_aug2.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(cmodel[<span style=\"color:rgb(98,98,98)\">8</span>])\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(cmodel[<span style=\"color:rgb(98,98,98)\">7</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d11efef4 .cell execution_count=34}\n``` {.python .cell-code}\nsz = (512,1,32,32)\n```\n:::\n\n\n::: {#050b1368 .cell execution_count=35}\n``` {.python .cell-code}\nsz = (2048,1,32,32)\n```\n:::\n\n\n::: {#0ae9b018 .cell execution_count=36}\n``` {.python .cell-code}\ndef sigmas_karras(n, sigma_min=0.01, sigma_max=80., rho=7., device='cpu'):\n    ramp = torch.linspace(0, 1, n)\n    min_inv_rho = sigma_min**(1/rho)\n    max_inv_rho = sigma_max**(1/rho)\n    sigmas = (max_inv_rho + ramp * (min_inv_rho-max_inv_rho))**rho\n    return torch.cat([sigmas, tensor([0.])]).to(device)\n```\n:::\n\n\n::: {#219a0d00 .cell execution_count=37}\n``` {.python .cell-code}\nsk = sigmas_karras(100)\nplt.plot(sk);\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[37], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> sk <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">sigmas_karras</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">100</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(sk);\n\nCell <span class=\"ansi-green-fg\">In[36], line 2</span>, in <span class=\"ansi-cyan-fg\">sigmas_karras</span><span class=\"ansi-blue-fg\">(n, sigma_min, sigma_max, rho, device)</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sigmas_karras</span>(n, sigma_min<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.01</span>, sigma_max<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">80.</span>, rho<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">7.</span>, device<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">cpu</span><span style=\"color:rgb(175,0,0)\">'</span>):\n<span class=\"ansi-green-fg\">----&gt; 2</span>     ramp <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>linspace(<span style=\"color:rgb(98,98,98)\">0</span>, <span style=\"color:rgb(98,98,98)\">1</span>, n)\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     min_inv_rho <span style=\"color:rgb(98,98,98)\">=</span> sigma_min<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>(<span style=\"color:rgb(98,98,98)\">1</span><span style=\"color:rgb(98,98,98)\">/</span>rho)\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     max_inv_rho <span style=\"color:rgb(98,98,98)\">=</span> sigma_max<span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>(<span style=\"color:rgb(98,98,98)\">1</span><span style=\"color:rgb(98,98,98)\">/</span>rho)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f294ae45 .cell execution_count=38}\n``` {.python .cell-code}\ndef denoise(model, x, sig):\n    c_skip,c_out,c_in = scalings(sig)\n    return model((x*c_in, sig))*c_out + x*c_skip\n```\n:::\n\n\n::: {#2a89bd29 .cell execution_count=39}\n``` {.python .cell-code}\ndef get_ancestral_step(sigma_from, sigma_to, eta=1.):\n    if not eta: return sigma_to, 0.\n    var_to,var_from = sigma_to**2,sigma_from**2\n    sigma_up = min(sigma_to, eta * (var_to * (var_from-var_to)/var_from)**0.5)\n    return (var_to-sigma_up**2)**0.5, sigma_up\n```\n:::\n\n\n::: {#d6772f52 .cell execution_count=40}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample_euler_ancestral(x, sigs, i, model, eta=1.):\n    sig,sig2 = sigs[i],sigs[i+1]\n    denoised = denoise(model, x, sig)\n    sigma_down,sigma_up = get_ancestral_step(sig, sig2, eta=eta)\n    x = x + (x-denoised)/sig*(sigma_down-sig)\n    return x + torch.randn_like(x)*sigma_up\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[40], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample_euler_ancestral</span>(x, sigs, i, model, eta<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     sig,sig2 <span style=\"color:rgb(98,98,98)\">=</span> sigs[i],sigs[i<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     denoised <span style=\"color:rgb(98,98,98)\">=</span> denoise(model, x, sig)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ac23a416 .cell execution_count=41}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample_euler(x, sigs, i, model):\n    sig,sig2 = sigs[i],sigs[i+1]\n    denoised = denoise(model, x, sig)\n    return x + (x-denoised)/sig*(sig2-sig)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample_euler</span>(x, sigs, i, model):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     sig,sig2 <span style=\"color:rgb(98,98,98)\">=</span> sigs[i],sigs[i<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     denoised <span style=\"color:rgb(98,98,98)\">=</span> denoise(model, x, sig)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4994a4da .cell execution_count=42}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample_heun(x, sigs, i, model, s_churn=0., s_tmin=0., s_tmax=float('inf'), s_noise=1.):\n    sig,sig2 = sigs[i],sigs[i+1]\n    n = len(sigs)\n    gamma = min(s_churn/(n-1), 2**0.5-1) if s_tmin<=sig<=s_tmax else 0.\n    eps = torch.randn_like(x) * s_noise\n    sigma_hat = sig * (gamma+1)\n    if gamma > 0: x = x + eps * (sigma_hat**2-sig**2)**0.5\n    denoised = denoise(model, x, sig)\n    d = (x-denoised)/sig\n    dt = sig2-sigma_hat\n    x_2 = x + d*dt\n    if sig2==0: return x_2\n    denoised_2 = denoise(model, x_2, sig2)\n    d_2 = (x_2-denoised_2)/sig2\n    d_prime = (d+d_2)/2\n    return x + d_prime*dt\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample_heun</span>(x, sigs, i, model, s_churn<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.</span>, s_tmin<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.</span>, s_tmax<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">float</span>(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">inf</span><span style=\"color:rgb(175,0,0)\">'</span>), s_noise<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.</span>):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     sig,sig2 <span style=\"color:rgb(98,98,98)\">=</span> sigs[i],sigs[i<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     n <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">len</span>(sigs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9223c0d9 .cell execution_count=43}\n``` {.python .cell-code}\ndef sample(sampler, model, steps=100, sigma_max=80., **kwargs):\n    preds = []\n    x = torch.randn(sz).to(model.device)*sigma_max\n    sigs = sigmas_karras(steps, device=model.device, sigma_max=sigma_max)\n    for i in progress_bar(range(len(sigs)-1)):\n        x = sampler(x, sigs, i, model, **kwargs)\n        preds.append(x)\n    return preds\n```\n:::\n\n\n::: {#4e44918b .cell execution_count=44}\n``` {.python .cell-code}\n# preds = sample_lms(model, steps=20, order=3)\n# preds = sample(sample_euler_ancestral, model, steps=100, eta=0.5)\npreds = sample(sample_euler, model, steps=100)\n# preds = sample(sample_heun, model, steps=20, s_churn=0.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># preds = sample_lms(model, steps=20, order=3)</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># preds = sample(sample_euler_ancestral, model, steps=100, eta=0.5)</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> preds <span style=\"color:rgb(98,98,98)\">=</span> sample(<span class=\"ansi-yellow-bg\">sample_euler</span>, model, steps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">100</span>)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># preds = sample(sample_heun, model, steps=20, s_churn=0.5)</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'sample_euler' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f97a96f0 .cell execution_count=45}\n``` {.python .cell-code}\ns = preds[-1]\ns.min(),s.max()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[45], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> s <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">preds</span>[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> s<span style=\"color:rgb(98,98,98)\">.</span>min(),s<span style=\"color:rgb(98,98,98)\">.</span>max()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'preds' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a55e8ea6 .cell execution_count=46}\n``` {.python .cell-code}\nshow_images(s[:25].clamp(-1,1), imsize=1.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[46], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(s[:<span style=\"color:rgb(98,98,98)\">25</span>]<span style=\"color:rgb(98,98,98)\">.</span>clamp(<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>,<span style=\"color:rgb(98,98,98)\">1</span>), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0331576c .cell execution_count=47}\n``` {.python .cell-code}\n# euler 100\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># euler 100</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8737cc3c .cell execution_count=48}\n``` {.python .cell-code}\n# euler 100\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># euler 100</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c1e7d6f7 .cell execution_count=49}\n``` {.python .cell-code}\n# ancestral 100 0.5\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[49], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># ancestral 100 0.5</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#55db49df .cell execution_count=50}\n``` {.python .cell-code}\n# heun 50\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[50], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># heun 50</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f39a7b48 .cell execution_count=51}\n``` {.python .cell-code}\n# heun 20\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[51], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># heun 20</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#960e7b7f .cell execution_count=52}\n``` {.python .cell-code}\n# heun 20, churn 0.5\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[52], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># heun 20, churn 0.5</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d216bd47 .cell execution_count=53}\n``` {.python .cell-code}\n# lms 20\nie.fid(s),ie.kid(s),s.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[53], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># lms 20</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(s),ie<span style=\"color:rgb(98,98,98)\">.</span>kid(s),s<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9a2ed9e6 .cell execution_count=54}\n``` {.python .cell-code}\n# reals\nie.fid(xb)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[54], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># reals</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span class=\"ansi-yellow-bg\">ie</span><span style=\"color:rgb(98,98,98)\">.</span>fid(xb)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'ie' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0517df68 .cell execution_count=55}\n``` {.python .cell-code}\nfrom scipy import integrate\n```\n:::\n\n\n::: {#4a07d40d .cell execution_count=56}\n``` {.python .cell-code}\ndef linear_multistep_coeff(order, t, i, j):\n    if order-1 > i: raise ValueError(f'Order {order} too high for step {i}')\n    def fn(tau):\n        prod = 1.\n        for k in range(order):\n            if j == k: continue\n            prod *= (tau-t[i-k]) / (t[i-j]-t[i-k])\n        return prod\n    return integrate.quad(fn, t[i], t[i+1], epsrel=1e-4)[0]\n```\n:::\n\n\n::: {#9dba2e55 .cell execution_count=57}\n``` {.python .cell-code}\n@torch.no_grad()\ndef sample_lms(model, steps=100, order=4, sigma_max=80.):\n    preds = []\n    x = torch.randn(sz).to(model.device)*sigma_max\n    sigs = sigmas_karras(steps, device=model.device, sigma_max=sigma_max)\n    ds = []\n    for i in progress_bar(range(len(sigs)-1)):\n        sig = sigs[i]\n        denoised = denoise(model, x, sig)\n        d = (x-denoised)/sig\n        ds.append(d)\n        if len(ds) > order: ds.pop(0)\n        cur_order = min(i+1, order)\n        coeffs = [linear_multistep_coeff(cur_order, sigs, i, j) for j in range(cur_order)]\n        x = x + sum(coeff*d for coeff, d in zip(coeffs, reversed(ds)))\n        preds.append(x)\n    return preds\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[57], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(175,0,255)\">@torch</span><span style=\"color:rgb(98,98,98)\">.</span>no_grad()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">sample_lms</span>(model, steps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">100</span>, order<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">4</span>, sigma_max<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">80.</span>):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     preds <span style=\"color:rgb(98,98,98)\">=</span> []\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     x <span style=\"color:rgb(98,98,98)\">=</span> torch<span style=\"color:rgb(98,98,98)\">.</span>randn(sz)<span style=\"color:rgb(98,98,98)\">.</span>to(model<span style=\"color:rgb(98,98,98)\">.</span>device)<span style=\"color:rgb(98,98,98)\">*</span>sigma_max\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "23_karras_files"
    ],
    "filters": [],
    "includes": {}
  }
}