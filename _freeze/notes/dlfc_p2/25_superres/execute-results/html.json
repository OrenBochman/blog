{
  "hash": "887dfcbbaf7eb8e8734caa4be0248282",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Tiny Imagenet\njupyter: python3\nimage: cover.png\n---\n\n::: {#53e3e895 .cell execution_count=1}\n``` {.python .cell-code}\nimport os\n# os.environ['CUDA_VISIBLE_DEVICES']='1'\n```\n:::\n\n\n::: {#8f36a66a .cell execution_count=2}\n``` {.python .cell-code}\nimport timm, torch, random, datasets, math, fastcore.all as fc, numpy as np, matplotlib as mpl, matplotlib.pyplot as plt\nimport torchvision.transforms as T\nimport torchvision.transforms.functional as TF,torch.nn.functional as F\n\nfrom torch.utils.data import DataLoader,default_collate\nfrom pathlib import Path\nfrom torch.nn import init\nfrom fastcore.foundation import L\nfrom torch import nn,tensor\nfrom datasets import load_dataset\nfrom operator import itemgetter\nfrom torcheval.metrics import MulticlassAccuracy\nfrom functools import partial\nfrom torch.optim import lr_scheduler\nfrom torch import optim\nfrom torchvision.io import read_image,ImageReadMode\n\nfrom miniai.datasets import *\nfrom miniai.conv import *\nfrom miniai.learner import *\nfrom miniai.activations import *\nfrom miniai.init import *\nfrom miniai.sgd import *\nfrom miniai.resnet import *\nfrom miniai.augment import *\nfrom miniai.accel import *\nfrom miniai.training import *\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ImportError</span>                               Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">timm</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">random</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">datasets</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">math</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fastcore</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">all</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">fc</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">mpl</span><span style=\"color:rgb(98,98,98)\">,</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">matplotlib</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">pyplot</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">plt</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torchvision</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">transforms</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">T</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torchvision</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">transforms</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">TF</span><span style=\"color:rgb(98,98,98)\">,</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">nn</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">functional</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">F</span>\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/timm/__init__.py:2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">version</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> __version__\n<span class=\"ansi-green-fg\">----&gt; 2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">layers</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> is_scriptable, is_exportable, set_scriptable, set_exportable\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">models</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> create_model, list_models, list_pretrained, is_model, list_modules, model_entrypoint, \\\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     is_model_pretrained, get_pretrained_cfg, get_pretrained_cfg_value\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/timm/layers/__init__.py:1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">activations</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">adaptive_avgmax_pool</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> \\\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     adaptive_avgmax_pool2d, select_adaptive_pool2d, AdaptiveAvgMaxPool2d, SelectAdaptivePool2d\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">attention2d</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> MultiQueryAttention2d, Attention2d, MultiQueryAttentionV2\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/timm/layers/activations.py:9</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\" Activations</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> \n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">A collection of activations fn and modules with a common interface so that they can</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">      6</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Hacked together by / Copyright 2020 Ross Wightman</span>\n<span class=\"ansi-green-fg ansi-bold\">      7</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg\">----&gt; 9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg ansi-bold\">     10</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> nn <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> nn\n<span class=\"ansi-green-fg ansi-bold\">     11</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">nn</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> functional <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> F\n\nFile <span class=\"ansi-green-fg\">~/work/blog/.venv/lib/python3.10/site-packages/torch/__init__.py:237</span>\n<span class=\"ansi-green-fg ansi-bold\">    235</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> USE_GLOBAL_DEPS:\n<span class=\"ansi-green-fg ansi-bold\">    236</span>         _load_global_deps()\n<span class=\"ansi-green-fg\">--&gt; 237</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">_C</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"color:rgb(98,98,98)\">*</span>  <span style=\"font-style:italic;color:rgb(95,135,135)\"># noqa: F403</span>\n<span class=\"ansi-green-fg ansi-bold\">    239</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Appease the type checker; ordinarily this binding is inserted by the</span>\n<span class=\"ansi-green-fg ansi-bold\">    240</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># torch._C module initialization code in C</span>\n<span class=\"ansi-green-fg ansi-bold\">    241</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> TYPE_CHECKING:\n\n<span class=\"ansi-red-fg\">ImportError</span>: libcudnn.so.8: cannot open shared object file: No such file or directory</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#948733ca .cell execution_count=3}\n``` {.python .cell-code}\nfrom fastprogress import progress_bar\nfrom glob import glob\n```\n:::\n\n\n::: {#f1eb7ad2 .cell execution_count=4}\n``` {.python .cell-code}\ntorch.set_printoptions(precision=5, linewidth=140, sci_mode=False)\ntorch.manual_seed(1)\nmpl.rcParams['figure.dpi'] = 70\n\nset_seed(42)\nif fc.defaults.cpus>8: fc.defaults.cpus=8\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[4], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>set_printoptions(precision<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">5</span>, linewidth<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">140</span>, sci_mode<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> torch<span style=\"color:rgb(98,98,98)\">.</span>manual_seed(<span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> mpl<span style=\"color:rgb(98,98,98)\">.</span>rcParams[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">figure.dpi</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">70</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Data processing\n\n::: {#39071fbb .cell execution_count=5}\n``` {.python .cell-code}\npath = Path.home()/'data'/'tiny-imagenet-200'\nbs = 512\n# bs = 32\nxmean,xstd = (tensor([0.47565, 0.40303, 0.31555]), tensor([0.28858, 0.24402, 0.26615]))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[5], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> path <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">Path</span><span style=\"color:rgb(98,98,98)\">.</span>home()<span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">data</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">tiny-imagenet-200</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> bs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">512</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># bs = 32</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'Path' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#33a56d29 .cell execution_count=6}\n``` {.python .cell-code}\ntfms = nn.Sequential(T.Pad(8), T.RandomCrop(64), T.RandomHorizontalFlip())\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[6], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> tfms <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">nn</span><span style=\"color:rgb(98,98,98)\">.</span>Sequential(T<span style=\"color:rgb(98,98,98)\">.</span>Pad(<span style=\"color:rgb(98,98,98)\">8</span>), T<span style=\"color:rgb(98,98,98)\">.</span>RandomCrop(<span style=\"color:rgb(98,98,98)\">64</span>), T<span style=\"color:rgb(98,98,98)\">.</span>RandomHorizontalFlip())\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'nn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d03cea71 .cell execution_count=7}\n``` {.python .cell-code}\nclass TinyDS:\n    def __init__(self, path):\n        self.path = Path(path)\n        self.files = glob(str(path/'**/*.JPEG'), recursive=True)\n    def __len__(self): return len(self.files)\n    def __getitem__(self, i):\n        img = read_image(self.files[i], mode=ImageReadMode.RGB)/255\n        return tfms((img-xmean[:,None,None])/xstd[:,None,None])\n\nclass TfmDS:\n    def __init__(self, ds, tfmx=fc.noop, tfmy=fc.noop): self.ds,self.tfmx,self.tfmy = ds,tfmx,tfmy\n    def __len__(self): return len(self.ds)\n    def __getitem__(self, i):\n        item = self.ds[i]\n        return self.tfmx(item),self.tfmy(item)\n\ndef denorm(x): return (x*xstd[:,None,None]+xmean[:,None,None]).clamp(0,1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[7], line 10</span>\n<span class=\"ansi-green-fg ansi-bold\">      7</span>         img <span style=\"color:rgb(98,98,98)\">=</span> read_image(<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>files[i], mode<span style=\"color:rgb(98,98,98)\">=</span>ImageReadMode<span style=\"color:rgb(98,98,98)\">.</span>RGB)<span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(98,98,98)\">255</span>\n<span class=\"ansi-green-fg ansi-bold\">      8</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> tfms((img<span style=\"color:rgb(98,98,98)\">-</span>xmean[:,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>])<span style=\"color:rgb(98,98,98)\">/</span>xstd[:,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>,<span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>])\n<span class=\"ansi-green-fg\">---&gt; 10</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">TfmDS</span>:\n<span class=\"ansi-green-fg ansi-bold\">     11</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, ds, tfmx<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>noop, tfmy<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>noop): <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ds,<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>tfmx,<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>tfmy <span style=\"color:rgb(98,98,98)\">=</span> ds,tfmx,tfmy\n<span class=\"ansi-green-fg ansi-bold\">     12</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__len__</span>(<span style=\"color:rgb(0,135,0)\">self</span>): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ds)\n\nCell <span class=\"ansi-green-fg\">In[7], line 11</span>, in <span class=\"ansi-cyan-fg\">TfmDS</span><span class=\"ansi-blue-fg\">()</span>\n<span class=\"ansi-green-fg ansi-bold\">     10</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">TfmDS</span>:\n<span class=\"ansi-green-fg\">---&gt; 11</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, ds, tfmx<span style=\"color:rgb(98,98,98)\">=</span><span class=\"ansi-yellow-bg\">fc</span><span style=\"color:rgb(98,98,98)\">.</span>noop, tfmy<span style=\"color:rgb(98,98,98)\">=</span>fc<span style=\"color:rgb(98,98,98)\">.</span>noop): <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ds,<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>tfmx,<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>tfmy <span style=\"color:rgb(98,98,98)\">=</span> ds,tfmx,tfmy\n<span class=\"ansi-green-fg ansi-bold\">     12</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__len__</span>(<span style=\"color:rgb(0,135,0)\">self</span>): <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ds)\n<span class=\"ansi-green-fg ansi-bold\">     13</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__getitem__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, i):\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'fc' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ef4914ff .cell execution_count=8}\n``` {.python .cell-code}\ndef tfmx(x, erase=True):\n    x = TF.resize(x, (32,32))[None]\n    x = F.interpolate(x, scale_factor=2)\n    if erase: x = rand_erase(x)\n    return x[0]\n```\n:::\n\n\n::: {#5edd6aff .cell execution_count=9}\n``` {.python .cell-code}\ntds = TinyDS(path/'train')\nvds = TinyDS(path/'val')\n\ntfm_tds = TfmDS(tds, tfmx)\ntfm_vds = TfmDS(vds, partial(tfmx, erase=False))\n\ndls = DataLoaders(*get_dls(tfm_tds, tfm_vds, bs=bs, num_workers=8))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[9], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> tds <span style=\"color:rgb(98,98,98)\">=</span> TinyDS(<span class=\"ansi-yellow-bg\">path</span><span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">train</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> vds <span style=\"color:rgb(98,98,98)\">=</span> TinyDS(path<span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">val</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> tfm_tds <span style=\"color:rgb(98,98,98)\">=</span> TfmDS(tds, tfmx)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'path' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#07933bf1 .cell execution_count=10}\n``` {.python .cell-code}\nxb,yb = next(iter(dls.train))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> xb,yb <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(<span style=\"color:rgb(0,135,0)\">iter</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9c364857 .cell execution_count=11}\n``` {.python .cell-code}\nshow_images(denorm(xb[:4]), imsize=2.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[11], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(xb[:<span style=\"color:rgb(98,98,98)\">4</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#06182fed .cell execution_count=12}\n``` {.python .cell-code}\nshow_images(denorm(yb[:4]), imsize=2.5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[12], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(yb[:<span style=\"color:rgb(98,98,98)\">4</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2.5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Denoising autoencoder\n\n::: {#a54b846b .cell execution_count=13}\n``` {.python .cell-code}\ndef up_block(ni, nf, ks=3, act=act_gr, norm=None):\n    return nn.Sequential(nn.UpsamplingNearest2d(scale_factor=2),\n                         ResBlock(ni, nf, ks=ks, act=act, norm=norm))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[13], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">up_block</span>(ni, nf, ks<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">3</span>, act<span style=\"color:rgb(98,98,98)\">=</span><span class=\"ansi-yellow-bg\">act_gr</span>, norm<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> nn<span style=\"color:rgb(98,98,98)\">.</span>Sequential(nn<span style=\"color:rgb(98,98,98)\">.</span>UpsamplingNearest2d(scale_factor<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>),\n<span class=\"ansi-green-fg ansi-bold\">      3</span>                          ResBlock(ni, nf, ks<span style=\"color:rgb(98,98,98)\">=</span>ks, act<span style=\"color:rgb(98,98,98)\">=</span>act, norm<span style=\"color:rgb(98,98,98)\">=</span>norm))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'act_gr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b3bd00d8 .cell execution_count=14}\n``` {.python .cell-code}\ndef get_model(act=act_gr, nfs=(32,64,128,256,512,1024), norm=nn.BatchNorm2d, drop=0.1):\n    layers = [ResBlock(3, nfs[0], ks=5, stride=1, act=act, norm=norm)]\n    layers += [ResBlock(nfs[i], nfs[i+1], act=act, norm=norm, stride=2) for i in range(len(nfs)-1)]\n    layers += [up_block(nfs[i], nfs[i-1], act=act, norm=norm) for i in range(len(nfs)-1,0,-1)]\n    layers += [ResBlock(nfs[0], 3, act=nn.Identity, norm=norm)]\n    return nn.Sequential(*layers).apply(iw)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[14], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">get_model</span>(act<span style=\"color:rgb(98,98,98)\">=</span><span class=\"ansi-yellow-bg\">act_gr</span>, nfs<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">32</span>,<span style=\"color:rgb(98,98,98)\">64</span>,<span style=\"color:rgb(98,98,98)\">128</span>,<span style=\"color:rgb(98,98,98)\">256</span>,<span style=\"color:rgb(98,98,98)\">512</span>,<span style=\"color:rgb(98,98,98)\">1024</span>), norm<span style=\"color:rgb(98,98,98)\">=</span>nn<span style=\"color:rgb(98,98,98)\">.</span>BatchNorm2d, drop<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.1</span>):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     layers <span style=\"color:rgb(98,98,98)\">=</span> [ResBlock(<span style=\"color:rgb(98,98,98)\">3</span>, nfs[<span style=\"color:rgb(98,98,98)\">0</span>], ks<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">5</span>, stride<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1</span>, act<span style=\"color:rgb(98,98,98)\">=</span>act, norm<span style=\"color:rgb(98,98,98)\">=</span>norm)]\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     layers <span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">=</span> [ResBlock(nfs[i], nfs[i<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>], act<span style=\"color:rgb(98,98,98)\">=</span>act, norm<span style=\"color:rgb(98,98,98)\">=</span>norm, stride<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>) <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(<span style=\"color:rgb(0,135,0)\">len</span>(nfs)<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'act_gr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6d2f958c .cell execution_count=15}\n``` {.python .cell-code}\niw = partial(init_weights, leaky=0.1)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[15], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> iw <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">partial</span>(init_weights, leaky<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.1</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'partial' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#95a3ffa5 .cell execution_count=16}\n``` {.python .cell-code}\nmetrics = MetricsCB()\ncbs = [DeviceCB(), metrics, ProgressCB(plot=True), MixedPrecision()]\nlr_cbs = [DeviceCB(), ProgressCB(), MixedPrecision()]\nopt_func = partial(optim.AdamW, eps=1e-5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[16], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> metrics <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">MetricsCB</span>()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> cbs <span style=\"color:rgb(98,98,98)\">=</span> [DeviceCB(), metrics, ProgressCB(plot<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>), MixedPrecision()]\n<span class=\"ansi-green-fg ansi-bold\">      3</span> lr_cbs <span style=\"color:rgb(98,98,98)\">=</span> [DeviceCB(), ProgressCB(), MixedPrecision()]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'MetricsCB' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#bac15684 .cell execution_count=17}\n``` {.python .cell-code}\nLearner(get_model().apply(iw), dls, F.mse_loss, cbs=lr_cbs, opt_func=opt_func).lr_find(start_lr=1e-4, gamma=1.2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[17], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">Learner</span>(get_model()<span style=\"color:rgb(98,98,98)\">.</span>apply(iw), dls, F<span style=\"color:rgb(98,98,98)\">.</span>mse_loss, cbs<span style=\"color:rgb(98,98,98)\">=</span>lr_cbs, opt_func<span style=\"color:rgb(98,98,98)\">=</span>opt_func)<span style=\"color:rgb(98,98,98)\">.</span>lr_find(start_lr<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-4</span>, gamma<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'Learner' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#41e09df5 .cell execution_count=18}\n``` {.python .cell-code}\nepochs = 5\nlr = 1e-3\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(get_model().apply(iw), dls, F.mse_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[18], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">5</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1e-3</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#20f0711a .cell execution_count=19}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[19], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d0265309 .cell execution_count=20}\n``` {.python .cell-code}\np,t,inp = learn.capture_preds(inps=True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[20], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> p,t,inp <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>capture_preds(inps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#36080e04 .cell execution_count=21}\n``` {.python .cell-code}\nshow_images(denorm(inp[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[21], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(inp[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#67b8d454 .cell execution_count=22}\n``` {.python .cell-code}\nshow_images(denorm(p[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[22], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(p[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Unet\n\n::: {#2b551d2f .cell execution_count=23}\n``` {.python .cell-code}\ndel(learn)\nclean_mem()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[23], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(learn)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> clean_mem()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f2613c81 .cell execution_count=24}\n``` {.python .cell-code}\nclass TinyUnet(nn.Module):\n    def __init__(self, act=act_gr, nfs=(32,64,128,256,512,1024), norm=nn.BatchNorm2d):\n        super().__init__()\n        self.start = ResBlock(3, nfs[0], stride=1, act=act, norm=norm)\n        self.dn = nn.ModuleList([ResBlock(nfs[i], nfs[i+1], act=act, norm=norm, stride=2)\n                                 for i in range(len(nfs)-1)])\n        self.up = nn.ModuleList([up_block(nfs[i], nfs[i-1], act=act, norm=norm)\n                                 for i in range(len(nfs)-1,0,-1)])\n        self.up += [ResBlock(nfs[0], 3, act=act, norm=norm)]\n        self.end = ResBlock(3, 3, act=nn.Identity, norm=norm)\n\n    def forward(self, x):\n        layers = []\n        layers.append(x)\n        x = self.start(x)\n        for l in self.dn:\n            layers.append(x)\n            x = l(x)\n        n = len(layers)\n        for i,l in enumerate(self.up):\n            if i!=0: x += layers[n-i]\n            x = l(x)\n        return self.end(x+layers[0])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[24], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">TinyUnet</span>(<span class=\"ansi-yellow-bg\">nn</span><span style=\"color:rgb(98,98,98)\">.</span>Module):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, act<span style=\"color:rgb(98,98,98)\">=</span>act_gr, nfs<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">32</span>,<span style=\"color:rgb(98,98,98)\">64</span>,<span style=\"color:rgb(98,98,98)\">128</span>,<span style=\"color:rgb(98,98,98)\">256</span>,<span style=\"color:rgb(98,98,98)\">512</span>,<span style=\"color:rgb(98,98,98)\">1024</span>), norm<span style=\"color:rgb(98,98,98)\">=</span>nn<span style=\"color:rgb(98,98,98)\">.</span>BatchNorm2d):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'nn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d1d1dddb .cell execution_count=25}\n``` {.python .cell-code}\ndef zero_wgts(l):\n    with torch.no_grad():\n        l.weight.zero_()\n        l.bias.zero_()\n```\n:::\n\n\n::: {#d37745c8 .cell execution_count=26}\n``` {.python .cell-code}\nmodel = TinyUnet()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[26], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">TinyUnet</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'TinyUnet' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1280e3dd .cell execution_count=27}\n``` {.python .cell-code}\nlast_res = model.up[-1]\nzero_wgts(last_res.convs[-1][-1])\nzero_wgts(last_res.idconv[0])\nzero_wgts(model.end.convs[-1][-1])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> last_res <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">model</span><span style=\"color:rgb(98,98,98)\">.</span>up[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> zero_wgts(last_res<span style=\"color:rgb(98,98,98)\">.</span>convs[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>][<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>])\n<span class=\"ansi-green-fg ansi-bold\">      3</span> zero_wgts(last_res<span style=\"color:rgb(98,98,98)\">.</span>idconv[<span style=\"color:rgb(98,98,98)\">0</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#023d937c .cell execution_count=28}\n``` {.python .cell-code}\nLearner(model, dls, F.mse_loss, cbs=lr_cbs, opt_func=opt_func).lr_find(start_lr=1e-4, gamma=1.2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[28], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">Learner</span>(model, dls, F<span style=\"color:rgb(98,98,98)\">.</span>mse_loss, cbs<span style=\"color:rgb(98,98,98)\">=</span>lr_cbs, opt_func<span style=\"color:rgb(98,98,98)\">=</span>opt_func)<span style=\"color:rgb(98,98,98)\">.</span>lr_find(start_lr<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-4</span>, gamma<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'Learner' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ed4fb7d1 .cell execution_count=29}\n``` {.python .cell-code}\nmodel = TinyUnet()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[29], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">TinyUnet</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'TinyUnet' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7b3a7190 .cell execution_count=30}\n``` {.python .cell-code}\nlast_res = model.up[-1]\nzero_wgts(last_res.convs[-1][-1])\nzero_wgts(last_res.idconv[0])\nzero_wgts(model.end.convs[-1][-1])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[30], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> last_res <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">model</span><span style=\"color:rgb(98,98,98)\">.</span>up[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> zero_wgts(last_res<span style=\"color:rgb(98,98,98)\">.</span>convs[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>][<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>])\n<span class=\"ansi-green-fg ansi-bold\">      3</span> zero_wgts(last_res<span style=\"color:rgb(98,98,98)\">.</span>idconv[<span style=\"color:rgb(98,98,98)\">0</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f0403098 .cell execution_count=31}\n``` {.python .cell-code}\nepochs = 20\nlr = 1e-2\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(model, dls, F.mse_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[31], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">20</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1e-2</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ff1d30a8 .cell execution_count=32}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[32], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e81b748f .cell execution_count=33}\n``` {.python .cell-code}\np,t,inp = learn.capture_preds(inps=True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[33], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> p,t,inp <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>capture_preds(inps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#44bb7a91 .cell execution_count=34}\n``` {.python .cell-code}\nshow_images(denorm(inp[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[34], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(inp[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4a7f93aa .cell execution_count=35}\n``` {.python .cell-code}\nshow_images(denorm(p[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(p[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e90fb534 .cell execution_count=36}\n``` {.python .cell-code}\nshow_images(denorm(t[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[36], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(t[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Perceptual loss\n\n::: {#6463d30e .cell execution_count=37}\n``` {.python .cell-code}\n# del(learn)\n# clean_mem()\n```\n:::\n\n\n::: {#e2e47052 .cell execution_count=38}\n``` {.python .cell-code}\ncmodel = torch.load('models/inettiny-custom-25').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[38], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> cmodel <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>load(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/inettiny-custom-25</span><span style=\"color:rgb(175,0,0)\">'</span>)<span style=\"color:rgb(98,98,98)\">.</span>cuda()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b97d4aec .cell execution_count=39}\n``` {.python .cell-code}\nxb,yb = next(iter(dls.valid))\nwith torch.autocast('cuda'),torch.no_grad(): preds = to_cpu(cmodel(yb.cuda().half()))\npreds.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[39], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> xb,yb <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(<span style=\"color:rgb(0,135,0)\">iter</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>valid))\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> torch<span style=\"color:rgb(98,98,98)\">.</span>autocast(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">cuda</span><span style=\"color:rgb(175,0,0)\">'</span>),torch<span style=\"color:rgb(98,98,98)\">.</span>no_grad(): preds <span style=\"color:rgb(98,98,98)\">=</span> to_cpu(cmodel(yb<span style=\"color:rgb(98,98,98)\">.</span>cuda()<span style=\"color:rgb(98,98,98)\">.</span>half()))\n<span class=\"ansi-green-fg ansi-bold\">      3</span> preds<span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#674dbfdf .cell execution_count=40}\n``` {.python .cell-code}\nid2str = (path/'wnids.txt').read_text().splitlines()\nall_synsets = [o.split('\\t') for o in (path/'words.txt').read_text().splitlines()]\nsynsets = {k:v.split(',', maxsplit=1)[0] for k,v in all_synsets if k in id2str}\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[40], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> id2str <span style=\"color:rgb(98,98,98)\">=</span> (<span class=\"ansi-yellow-bg\">path</span><span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">wnids.txt</span><span style=\"color:rgb(175,0,0)\">'</span>)<span style=\"color:rgb(98,98,98)\">.</span>read_text()<span style=\"color:rgb(98,98,98)\">.</span>splitlines()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> all_synsets <span style=\"color:rgb(98,98,98)\">=</span> [o<span style=\"color:rgb(98,98,98)\">.</span>split(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,0)\">\\t</span><span style=\"color:rgb(175,0,0)\">'</span>) <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> (path<span style=\"color:rgb(98,98,98)\">/</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">words.txt</span><span style=\"color:rgb(175,0,0)\">'</span>)<span style=\"color:rgb(98,98,98)\">.</span>read_text()<span style=\"color:rgb(98,98,98)\">.</span>splitlines()]\n<span class=\"ansi-green-fg ansi-bold\">      3</span> synsets <span style=\"color:rgb(98,98,98)\">=</span> {k:v<span style=\"color:rgb(98,98,98)\">.</span>split(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">,</span><span style=\"color:rgb(175,0,0)\">'</span>, maxsplit<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1</span>)[<span style=\"color:rgb(98,98,98)\">0</span>] <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> k,v <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> all_synsets <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> k <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> id2str}\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'path' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#645eb556 .cell execution_count=41}\n``` {.python .cell-code}\ntitles = [synsets[id2str[o]] for o in preds.argmax(dim=1)]\nshow_images(denorm(yb[:16]), imsize=2, titles=titles[:16])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> titles <span style=\"color:rgb(98,98,98)\">=</span> [synsets[id2str[o]] <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span class=\"ansi-yellow-bg\">preds</span><span style=\"color:rgb(98,98,98)\">.</span>argmax(dim<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1</span>)]\n<span class=\"ansi-green-fg ansi-bold\">      2</span> show_images(denorm(yb[:<span style=\"color:rgb(98,98,98)\">16</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>, titles<span style=\"color:rgb(98,98,98)\">=</span>titles[:<span style=\"color:rgb(98,98,98)\">16</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'preds' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5f6f0565 .cell execution_count=42}\n``` {.python .cell-code}\nfor i in range(4,len(cmodel)): del(cmodel[4])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(<span style=\"color:rgb(98,98,98)\">4</span>,<span style=\"color:rgb(0,135,0)\">len</span>(cmodel)): <span style=\"font-weight:bold;color:rgb(0,135,0)\">del</span>(cmodel[<span style=\"color:rgb(98,98,98)\">4</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'cmodel' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f5415ebd .cell execution_count=43}\n``` {.python .cell-code}\nlearn.model = torch.load('models/superres-cross.pkl')\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> learn<span style=\"color:rgb(98,98,98)\">.</span>model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>load(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/superres-cross.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#4c5f421c .cell execution_count=44}\n``` {.python .cell-code}\nwith torch.autocast('cuda'),torch.no_grad():\n    feat = to_cpu(cmodel(yb.cuda())).float()\n    t = to_cpu(learn.model(yb.cuda())).float()\n    pred_feat = to_cpu(cmodel(t.cuda())).float()\n\nfeat.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>autocast(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">cuda</span><span style=\"color:rgb(175,0,0)\">'</span>),torch<span style=\"color:rgb(98,98,98)\">.</span>no_grad():\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     feat <span style=\"color:rgb(98,98,98)\">=</span> to_cpu(cmodel(yb<span style=\"color:rgb(98,98,98)\">.</span>cuda()))<span style=\"color:rgb(98,98,98)\">.</span>float()\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     t <span style=\"color:rgb(98,98,98)\">=</span> to_cpu(learn<span style=\"color:rgb(98,98,98)\">.</span>model(yb<span style=\"color:rgb(98,98,98)\">.</span>cuda()))<span style=\"color:rgb(98,98,98)\">.</span>float()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#fbbd42a3 .cell execution_count=45}\n``` {.python .cell-code}\ndef comb_loss(inp, tgt):\n    with torch.autocast('cuda'):\n        with torch.no_grad(): tgt_feat = cmodel(tgt).float()\n        inp_feat = cmodel(inp).float()\n    feat_loss = F.mse_loss(inp_feat, tgt_feat)\n    return F.mse_loss(inp,tgt) + feat_loss/10\n```\n:::\n\n\n::: {#73e877c5 .cell execution_count=46}\n``` {.python .cell-code}\ndef get_unet():\n    model = TinyUnet()\n    last_res = model.up[-1]\n    zero_wgts(last_res.convs[-1][-1])\n    zero_wgts(last_res.idconv[0])\n    zero_wgts(model.end.convs[-1][-1])\n    return model\n```\n:::\n\n\n::: {#25cc0501 .cell execution_count=47}\n``` {.python .cell-code}\nLearner(get_unet(), dls, comb_loss, cbs=lr_cbs, opt_func=opt_func).lr_find(start_lr=1e-4, gamma=1.2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">Learner</span>(get_unet(), dls, comb_loss, cbs<span style=\"color:rgb(98,98,98)\">=</span>lr_cbs, opt_func<span style=\"color:rgb(98,98,98)\">=</span>opt_func)<span style=\"color:rgb(98,98,98)\">.</span>lr_find(start_lr<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e-4</span>, gamma<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1.2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'Learner' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ee15dbe6 .cell execution_count=48}\n``` {.python .cell-code}\nepochs = 20\nlr = 1e-2\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(get_unet(), dls, comb_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">20</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1e-2</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#12e7e10c .cell execution_count=49}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[49], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#95291043 .cell execution_count=50}\n``` {.python .cell-code}\np,t,inp = learn.capture_preds(inps=True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[50], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> p,t,inp <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>capture_preds(inps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#3d212e7a .cell execution_count=51}\n``` {.python .cell-code}\nshow_images(denorm(inp[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[51], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(inp[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#7bcd01bb .cell execution_count=52}\n``` {.python .cell-code}\nshow_images(denorm(p[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[52], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(p[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#3c97ab62 .cell execution_count=53}\n``` {.python .cell-code}\nshow_images(denorm(t[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[53], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(t[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Perceptual loss\n\n::: {#ebc82e94 .cell execution_count=54}\n``` {.python .cell-code}\nmodel = get_unet()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[54], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">get_unet</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n\nCell <span class=\"ansi-green-fg\">In[46], line 2</span>, in <span class=\"ansi-cyan-fg\">get_unet</span><span class=\"ansi-blue-fg\">()</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">get_unet</span>():\n<span class=\"ansi-green-fg\">----&gt; 2</span>     model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">TinyUnet</span>()\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     last_res <span style=\"color:rgb(98,98,98)\">=</span> model<span style=\"color:rgb(98,98,98)\">.</span>up[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     zero_wgts(last_res<span style=\"color:rgb(98,98,98)\">.</span>convs[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>][<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'TinyUnet' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1c554cfb .cell execution_count=55}\n``` {.python .cell-code}\npmodel = torch.load('models/inettiny-custom-25')\nmodel.start.load_state_dict(pmodel[0].state_dict())\nfor i in range(5): model.dn[i].load_state_dict(pmodel[i+1].state_dict())\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[55], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> pmodel <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>load(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/inettiny-custom-25</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> model<span style=\"color:rgb(98,98,98)\">.</span>start<span style=\"color:rgb(98,98,98)\">.</span>load_state_dict(pmodel[<span style=\"color:rgb(98,98,98)\">0</span>]<span style=\"color:rgb(98,98,98)\">.</span>state_dict())\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(<span style=\"color:rgb(98,98,98)\">5</span>): model<span style=\"color:rgb(98,98,98)\">.</span>dn[i]<span style=\"color:rgb(98,98,98)\">.</span>load_state_dict(pmodel[i<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">.</span>state_dict())\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ec10b52b .cell execution_count=56}\n``` {.python .cell-code}\nfor o in model.dn.parameters(): o.requires_grad_(False)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[56], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> model<span style=\"color:rgb(98,98,98)\">.</span>dn<span style=\"color:rgb(98,98,98)\">.</span>parameters(): o<span style=\"color:rgb(98,98,98)\">.</span>requires_grad_(<span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f31454c9 .cell execution_count=57}\n``` {.python .cell-code}\nepochs = 1\nlr = 3e-3\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(model, dls, comb_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[57], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">3e-3</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8c68aa3f .cell execution_count=58}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[58], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#eff294b2 .cell execution_count=59}\n``` {.python .cell-code}\nfor o in model.dn.parameters(): o.requires_grad_(True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[59], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> model<span style=\"color:rgb(98,98,98)\">.</span>dn<span style=\"color:rgb(98,98,98)\">.</span>parameters(): o<span style=\"color:rgb(98,98,98)\">.</span>requires_grad_(<span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b19bd33a .cell execution_count=60}\n``` {.python .cell-code}\nepochs = 20\nlr = 3e-3\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(model, dls, comb_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[60], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">20</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">3e-3</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#e2c55f40 .cell execution_count=61}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[61], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#cb71100c .cell execution_count=62}\n``` {.python .cell-code}\ntorch.save(learn.model, 'models/superres-pcp.pkl')\n# learn.model = torch.load('models/superres-pcp.pkl').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[62], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>save(learn<span style=\"color:rgb(98,98,98)\">.</span>model, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/superres-pcp.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># learn.model = torch.load('models/superres-pcp.pkl').cuda()</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#563fe8b7 .cell execution_count=63}\n``` {.python .cell-code}\np,t,inp = learn.capture_preds(inps=True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[63], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> p,t,inp <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>capture_preds(inps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#78023e36 .cell execution_count=64}\n``` {.python .cell-code}\nshow_images(denorm(inp[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[64], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(inp[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b1f0e893 .cell execution_count=65}\n``` {.python .cell-code}\nshow_images(denorm(p[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[65], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(p[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#fa4dbebe .cell execution_count=66}\n``` {.python .cell-code}\nshow_images(denorm(t[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[66], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(t[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#45a55960 .cell execution_count=67}\n``` {.python .cell-code}\ntorch.save(learn.model, 'models/superres-pcp.pkl')\n# learn.model = torch.load('models/superres-pcp.pkl').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[67], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>save(learn<span style=\"color:rgb(98,98,98)\">.</span>model, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/superres-pcp.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># learn.model = torch.load('models/superres-pcp.pkl').cuda()</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Cross-convs\n\n::: {#bede2e0a .cell execution_count=68}\n``` {.python .cell-code}\ndef cross_conv(nf, act, norm):\n    return nn.Sequential(\n        ResBlock(nf, nf, act=act, norm=norm),\n        nn.Conv2d(nf, nf, 3, padding=1)\n    )\n```\n:::\n\n\n::: {#e018ee5c .cell execution_count=69}\n``` {.python .cell-code}\nclass TinyUnet(nn.Module):\n    def __init__(self, act=act_gr, nfs=(32,64,128,256,512,1024), norm=nn.BatchNorm2d):\n        super().__init__()\n        self.start = ResBlock(3, nfs[0], ks=5, stride=1, act=act, norm=norm)\n        self.dn = nn.ModuleList([ResBlock(nfs[i], nfs[i+1], act=act, norm=norm, stride=2)\n                                 for i in range(len(nfs)-1)])\n        self.xs = nn.ModuleList([cross_conv(nfs[i], act, norm)\n                                 for i in range(len(nfs)-1,0,-1)])\n        self.xs += [cross_conv(nfs[0], act, norm)]\n        self.up = nn.ModuleList([up_block(nfs[i], nfs[i-1], act=act, norm=norm)\n                                 for i in range(len(nfs)-1,0,-1)])\n        self.up += [ResBlock(nfs[0], 3, act=act, norm=norm)]\n        self.end = ResBlock(3, 3, act=nn.Identity, norm=norm)\n\n    def forward(self, x):\n        layers = []\n        layers.append(x)\n        x = self.start(x)\n        for i,l in enumerate(self.dn):\n            layers.append(x)\n            x = l(x)\n        n = len(layers)\n        for i,l in enumerate(self.up):\n            if i!=0: x += self.xs[i](layers[n-i])\n            x = l(x)\n        return self.end(x+layers[0])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[69], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">class</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">TinyUnet</span>(<span class=\"ansi-yellow-bg\">nn</span><span style=\"color:rgb(98,98,98)\">.</span>Module):\n<span class=\"ansi-green-fg ansi-bold\">      2</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, act<span style=\"color:rgb(98,98,98)\">=</span>act_gr, nfs<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">32</span>,<span style=\"color:rgb(98,98,98)\">64</span>,<span style=\"color:rgb(98,98,98)\">128</span>,<span style=\"color:rgb(98,98,98)\">256</span>,<span style=\"color:rgb(98,98,98)\">512</span>,<span style=\"color:rgb(98,98,98)\">1024</span>), norm<span style=\"color:rgb(98,98,98)\">=</span>nn<span style=\"color:rgb(98,98,98)\">.</span>BatchNorm2d):\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"color:rgb(0,135,0)\">super</span>()<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,255)\">__init__</span>()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'nn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b47090bd .cell execution_count=70}\n``` {.python .cell-code}\npmodel = torch.load('models/inettiny-custom-25')\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[70], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> pmodel <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>load(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/inettiny-custom-25</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#485ef490 .cell execution_count=71}\n``` {.python .cell-code}\nmodel = get_unet()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[71], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">get_unet</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n\nCell <span class=\"ansi-green-fg\">In[46], line 2</span>, in <span class=\"ansi-cyan-fg\">get_unet</span><span class=\"ansi-blue-fg\">()</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">get_unet</span>():\n<span class=\"ansi-green-fg\">----&gt; 2</span>     model <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">TinyUnet</span>()\n<span class=\"ansi-green-fg ansi-bold\">      3</span>     last_res <span style=\"color:rgb(98,98,98)\">=</span> model<span style=\"color:rgb(98,98,98)\">.</span>up[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>]\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     zero_wgts(last_res<span style=\"color:rgb(98,98,98)\">.</span>convs[<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>][<span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">1</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'TinyUnet' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#b35ceec8 .cell execution_count=72}\n``` {.python .cell-code}\nmodel.start.load_state_dict(pmodel[0].state_dict())\nfor i in range(5): model.dn[i].load_state_dict(pmodel[i+1].state_dict())\nfor o in model.dn.parameters(): o.requires_grad_(False)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[72], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">model</span><span style=\"color:rgb(98,98,98)\">.</span>start<span style=\"color:rgb(98,98,98)\">.</span>load_state_dict(pmodel[<span style=\"color:rgb(98,98,98)\">0</span>]<span style=\"color:rgb(98,98,98)\">.</span>state_dict())\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> i <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span style=\"color:rgb(0,135,0)\">range</span>(<span style=\"color:rgb(98,98,98)\">5</span>): model<span style=\"color:rgb(98,98,98)\">.</span>dn[i]<span style=\"color:rgb(98,98,98)\">.</span>load_state_dict(pmodel[i<span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">.</span>state_dict())\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> model<span style=\"color:rgb(98,98,98)\">.</span>dn<span style=\"color:rgb(98,98,98)\">.</span>parameters(): o<span style=\"color:rgb(98,98,98)\">.</span>requires_grad_(<span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#0bbc32bb .cell execution_count=73}\n``` {.python .cell-code}\nepochs = 1\nlr = 3e-3\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(model, dls, comb_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[73], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">3e-3</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c6645ff7 .cell execution_count=74}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[74], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#73dcf727 .cell execution_count=75}\n``` {.python .cell-code}\nfor o in model.dn.parameters(): o.requires_grad_(True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[75], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> o <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> model<span style=\"color:rgb(98,98,98)\">.</span>dn<span style=\"color:rgb(98,98,98)\">.</span>parameters(): o<span style=\"color:rgb(98,98,98)\">.</span>requires_grad_(<span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'model' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#bdd8c071 .cell execution_count=76}\n``` {.python .cell-code}\nepochs = 20\nlr = 1e-2\ntmax = epochs * len(dls.train)\nsched = partial(lr_scheduler.OneCycleLR, max_lr=lr, total_steps=tmax)\nxtra = [BatchSchedCB(sched)]\nlearn = Learner(model, dls, comb_loss, lr=lr, cbs=cbs+xtra, opt_func=opt_func)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[76], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> epochs <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">20</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> lr <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">1e-2</span>\n<span class=\"ansi-green-fg\">----&gt; 3</span> tmax <span style=\"color:rgb(98,98,98)\">=</span> epochs <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(0,135,0)\">len</span>(<span class=\"ansi-yellow-bg\">dls</span><span style=\"color:rgb(98,98,98)\">.</span>train)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> sched <span style=\"color:rgb(98,98,98)\">=</span> partial(lr_scheduler<span style=\"color:rgb(98,98,98)\">.</span>OneCycleLR, max_lr<span style=\"color:rgb(98,98,98)\">=</span>lr, total_steps<span style=\"color:rgb(98,98,98)\">=</span>tmax)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> xtra <span style=\"color:rgb(98,98,98)\">=</span> [BatchSchedCB(sched)]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'dls' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#823435bc .cell execution_count=77}\n``` {.python .cell-code}\nlearn.fit(epochs)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[77], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>fit(epochs)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#db4f576d .cell execution_count=78}\n``` {.python .cell-code}\np,t,inp = learn.capture_preds(inps=True)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[78], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> p,t,inp <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">learn</span><span style=\"color:rgb(98,98,98)\">.</span>capture_preds(inps<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'learn' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#767c4065 .cell execution_count=79}\n``` {.python .cell-code}\nshow_images(denorm(inp[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[79], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(inp[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#bff65ee3 .cell execution_count=80}\n``` {.python .cell-code}\nshow_images(denorm(p[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[80], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(p[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5445c69c .cell execution_count=81}\n``` {.python .cell-code}\nshow_images(denorm(t[:9]), imsize=2)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[81], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">show_images</span>(denorm(t[:<span style=\"color:rgb(98,98,98)\">9</span>]), imsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'show_images' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#dd164803 .cell execution_count=82}\n``` {.python .cell-code}\ntorch.save(learn.model, 'models/superres-cross.pkl')\n# learn.model = torch.load('models/superres-pcp.pkl').cuda()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[82], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">torch</span><span style=\"color:rgb(98,98,98)\">.</span>save(learn<span style=\"color:rgb(98,98,98)\">.</span>model, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">models/superres-cross.pkl</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># learn.model = torch.load('models/superres-pcp.pkl').cuda()</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'torch' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "25_superres_files"
    ],
    "filters": [],
    "includes": {}
  }
}