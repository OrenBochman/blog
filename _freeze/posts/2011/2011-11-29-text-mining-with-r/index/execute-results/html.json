{
  "hash": "1bb730facfa456c165e1f3439628cea7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Text Mining With R\nsubtitle: a number of NLP tasks in R\ndesctiption: \"\"\ndate: 2011-11-29\ncategories:\n    - R\n    - NLP\n    - Text Mining\n---\n\n\nComputational Linguistics tasks:\n\n-   [x] create a corpus\n-   [x] clean it up\n-   [ ] create a vocabulary\n-   [ ] create a frequency list\n-   [x] create a term document matrix TDF\n-   [ ] list n-grams\n-   [ ] generate word clouds\n-   [ ] mine TDF it for collocations\n-   similarity\n    -   cosine similarity\n    -   TDIDF\n    -   Nearest neighbor word clustering\n-   embedding\n    -   [ ] word embedding\n    -   [ ] sentence embedding\n-   [ ] concordance\n    -   KWIC, keywords in context\n    -   KWOC, keywords out of context\n\n# Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire_install <- function(libs) {\n\n    for (i in libs){\n        if( !is.element(i, .packages(all.available = TRUE)) ) {\n            install.packages(i)\n        }\n        library(i,character.only = TRUE)\n        }\n}\n\nrequire_install(libs=c('tm','SnowballC','tidytext','dplyr','wordcloud'))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: NLP\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: RColorBrewer\n```\n\n\n:::\n:::\n\n\n# Corpus\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndoc1 <- \"drugs, hospitals, doctors\"\ndoc2 <- \"smog, pollution, micro-plastics, environment.\"\ndoc3 <- \"doctors, hospitals, healthcare\"\ndoc4 <- \"pollution, environment, water.\"\ndoc5 <- \"I love NLP with deep learning.\"\ndoc6 <- \"I love machine learning.\"\ndoc7 <- \"He said he was keeping the wolf from the door.\"\ndoc8 <- \"Time flies like an arrow, fruit flies like a banana.\"\ndoc9 <- \"pollution, greenhouse gasses, GHG, hydrofluorocarbons, ozone hole, global warming. Montreal Protocol.\"\ndoc10 <- \"greenhouse gasses, hydrofluorocarbons, perfluorocarbons, sulfur hexafluoride, carbon dioxide, carbon monoxide, CO2, hydrofluorocarbons, methane, nitrous oxide.\"\ncorpus <- c(doc1, doc2, doc3, doc4,doc5, doc6,doc7,doc8,doc9,doc10)   # <1>\ntm_corpus <- Corpus(VectorSource(corpus))                       # <2>\n```\n:::\n\n\n1.  concat docs into corpus var\n2.  created a corpus of class Corpus from the corpus var\n\nNext, let's inspect the corpus\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(tm_corpus) # <3>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drugs, hospitals, doctors                                                                                                                                      \n [2] smog, pollution, micro-plastics, environment.                                                                                                                  \n [3] doctors, hospitals, healthcare                                                                                                                                 \n [4] pollution, environment, water.                                                                                                                                 \n [5] I love NLP with deep learning.                                                                                                                                 \n [6] I love machine learning.                                                                                                                                       \n [7] He said he was keeping the wolf from the door.                                                                                                                 \n [8] Time flies like an arrow, fruit flies like a banana.                                                                                                           \n [9] pollution, greenhouse gasses, GHG, hydrofluorocarbons, ozone hole, global warming. Montreal Protocol.                                                          \n[10] greenhouse gasses, hydrofluorocarbons, perfluorocarbons, sulfur hexafluoride, carbon dioxide, carbon monoxide, CO2, hydrofluorocarbons, methane, nitrous oxide.\n```\n\n\n:::\n:::\n\n\n3.  inspect the corpus\n\n## Text preprocessing\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_corpus <- tm_map(tm_corpus, tolower) # <4>\ninspect(tm_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drugs, hospitals, doctors                                                                                                                                      \n [2] smog, pollution, micro-plastics, environment.                                                                                                                  \n [3] doctors, hospitals, healthcare                                                                                                                                 \n [4] pollution, environment, water.                                                                                                                                 \n [5] i love nlp with deep learning.                                                                                                                                 \n [6] i love machine learning.                                                                                                                                       \n [7] he said he was keeping the wolf from the door.                                                                                                                 \n [8] time flies like an arrow, fruit flies like a banana.                                                                                                           \n [9] pollution, greenhouse gasses, ghg, hydrofluorocarbons, ozone hole, global warming. montreal protocol.                                                          \n[10] greenhouse gasses, hydrofluorocarbons, perfluorocarbons, sulfur hexafluoride, carbon dioxide, carbon monoxide, co2, hydrofluorocarbons, methane, nitrous oxide.\n```\n\n\n:::\n:::\n\n\n4.  this makes all the tokens lowercase\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_corpus <- tm_map(tm_corpus, content_transformer(removePunctuation)) # <5>\ninspect(tm_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drugs hospitals doctors                                                                                                                              \n [2] smog pollution microplastics environment                                                                                                             \n [3] doctors hospitals healthcare                                                                                                                         \n [4] pollution environment water                                                                                                                          \n [5] i love nlp with deep learning                                                                                                                        \n [6] i love machine learning                                                                                                                              \n [7] he said he was keeping the wolf from the door                                                                                                        \n [8] time flies like an arrow fruit flies like a banana                                                                                                   \n [9] pollution greenhouse gasses ghg hydrofluorocarbons ozone hole global warming montreal protocol                                                       \n[10] greenhouse gasses hydrofluorocarbons perfluorocarbons sulfur hexafluoride carbon dioxide carbon monoxide co2 hydrofluorocarbons methane nitrous oxide\n```\n\n\n:::\n:::\n\n\n5.  this removes punctuation tokens\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_corpus <- tm_map(tm_corpus, removeWords, stopwords(\"english\")) # <6>\ninspect(tm_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drugs hospitals doctors                                                                                                                              \n [2] smog pollution microplastics environment                                                                                                             \n [3] doctors hospitals healthcare                                                                                                                         \n [4] pollution environment water                                                                                                                          \n [5]  love nlp  deep learning                                                                                                                             \n [6]  love machine learning                                                                                                                               \n [7]  said   keeping  wolf   door                                                                                                                         \n [8] time flies like  arrow fruit flies like  banana                                                                                                      \n [9] pollution greenhouse gasses ghg hydrofluorocarbons ozone hole global warming montreal protocol                                                       \n[10] greenhouse gasses hydrofluorocarbons perfluorocarbons sulfur hexafluoride carbon dioxide carbon monoxide co2 hydrofluorocarbons methane nitrous oxide\n```\n\n\n:::\n:::\n\n\n6.  this removes stop words\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_corpus <- tm_map(tm_corpus, removeNumbers) # <7>\ninspect(tm_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drugs hospitals doctors                                                                                                                             \n [2] smog pollution microplastics environment                                                                                                            \n [3] doctors hospitals healthcare                                                                                                                        \n [4] pollution environment water                                                                                                                         \n [5]  love nlp  deep learning                                                                                                                            \n [6]  love machine learning                                                                                                                              \n [7]  said   keeping  wolf   door                                                                                                                        \n [8] time flies like  arrow fruit flies like  banana                                                                                                     \n [9] pollution greenhouse gasses ghg hydrofluorocarbons ozone hole global warming montreal protocol                                                      \n[10] greenhouse gasses hydrofluorocarbons perfluorocarbons sulfur hexafluoride carbon dioxide carbon monoxide co hydrofluorocarbons methane nitrous oxide\n```\n\n\n:::\n:::\n\n\n7.  this removes numbers\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_corpus <- tm_map(tm_corpus, stemDocument, language=\"english\") # <8>\ninspect(tm_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drug hospit doctor                                                                                                                       \n [2] smog pollut microplast environ                                                                                                           \n [3] doctor hospit healthcar                                                                                                                  \n [4] pollut environ water                                                                                                                     \n [5] love nlp deep learn                                                                                                                      \n [6] love machin learn                                                                                                                        \n [7] said keep wolf door                                                                                                                      \n [8] time fli like arrow fruit fli like banana                                                                                                \n [9] pollut greenhous gass ghg hydrofluorocarbon ozon hole global warm montreal protocol                                                      \n[10] greenhous gass hydrofluorocarbon perfluorocarbon sulfur hexafluorid carbon dioxid carbon monoxid co hydrofluorocarbon methan nitrous oxid\n```\n\n\n:::\n:::\n\n\n8.  this stems the words\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_corpus <- tm_map(tm_corpus, stripWhitespace) # <9>\ninspect(tm_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<SimpleCorpus>>\nMetadata:  corpus specific: 1, document level (indexed): 0\nContent:  documents: 10\n\n [1] drug hospit doctor                                                                                                                       \n [2] smog pollut microplast environ                                                                                                           \n [3] doctor hospit healthcar                                                                                                                  \n [4] pollut environ water                                                                                                                     \n [5] love nlp deep learn                                                                                                                      \n [6] love machin learn                                                                                                                        \n [7] said keep wolf door                                                                                                                      \n [8] time fli like arrow fruit fli like banana                                                                                                \n [9] pollut greenhous gass ghg hydrofluorocarbon ozon hole global warm montreal protocol                                                      \n[10] greenhous gass hydrofluorocarbon perfluorocarbon sulfur hexafluorid carbon dioxid carbon monoxid co hydrofluorocarbon methan nitrous oxid\n```\n\n\n:::\n:::\n\n\n9.  Removing Whitespaces - a single white space or group of whitespaces may be considered to be a token within a corpus. This is how we remove these token\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndtm <- DocumentTermMatrix(tm_corpus)\ninspect(dtm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<<DocumentTermMatrix (documents: 10, terms: 43)>>\nNon-/sparse entries: 53/377\nSparsity           : 88%\nMaximal term length: 17\nWeighting          : term frequency (tf)\nSample             :\n    Terms\nDocs doctor environ fli gass hospit hydrofluorocarbon learn like love pollut\n  1       1       0   0    0      1                 0     0    0    0      0\n  10      0       0   0    1      0                 2     0    0    0      0\n  2       0       1   0    0      0                 0     0    0    0      1\n  3       1       0   0    0      1                 0     0    0    0      0\n  4       0       1   0    0      0                 0     0    0    0      1\n  5       0       0   0    0      0                 0     1    0    1      0\n  6       0       0   0    0      0                 0     1    0    1      0\n  7       0       0   0    0      0                 0     0    0    0      0\n  8       0       0   2    0      0                 0     0    2    0      0\n  9       0       0   0    1      0                 1     0    0    0      1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfindFreqTerms(dtm, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"doctor\"            \"hospit\"            \"environ\"          \n [4] \"pollut\"            \"learn\"             \"love\"             \n [7] \"fli\"               \"like\"              \"gass\"             \n[10] \"greenhous\"         \"hydrofluorocarbon\" \"carbon\"           \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfindAssocs(dtm, \"polution\", 0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$polution\nnumeric(0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nas.matrix(dtm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Terms\nDocs doctor drug hospit environ microplast pollut smog healthcar water deep\n  1       1    1      1       0          0      0    0         0     0    0\n  2       0    0      0       1          1      1    1         0     0    0\n  3       1    0      1       0          0      0    0         1     0    0\n  4       0    0      0       1          0      1    0         0     1    0\n  5       0    0      0       0          0      0    0         0     0    1\n  6       0    0      0       0          0      0    0         0     0    0\n  7       0    0      0       0          0      0    0         0     0    0\n  8       0    0      0       0          0      0    0         0     0    0\n  9       0    0      0       0          0      1    0         0     0    0\n  10      0    0      0       0          0      0    0         0     0    0\n    Terms\nDocs learn love nlp machin door keep said wolf arrow banana fli fruit like time\n  1      0    0   0      0    0    0    0    0     0      0   0     0    0    0\n  2      0    0   0      0    0    0    0    0     0      0   0     0    0    0\n  3      0    0   0      0    0    0    0    0     0      0   0     0    0    0\n  4      0    0   0      0    0    0    0    0     0      0   0     0    0    0\n  5      1    1   1      0    0    0    0    0     0      0   0     0    0    0\n  6      1    1   0      1    0    0    0    0     0      0   0     0    0    0\n  7      0    0   0      0    1    1    1    1     0      0   0     0    0    0\n  8      0    0   0      0    0    0    0    0     1      1   2     1    2    1\n  9      0    0   0      0    0    0    0    0     0      0   0     0    0    0\n  10     0    0   0      0    0    0    0    0     0      0   0     0    0    0\n    Terms\nDocs gass ghg global greenhous hole hydrofluorocarbon montreal ozon protocol\n  1     0   0      0         0    0                 0        0    0        0\n  2     0   0      0         0    0                 0        0    0        0\n  3     0   0      0         0    0                 0        0    0        0\n  4     0   0      0         0    0                 0        0    0        0\n  5     0   0      0         0    0                 0        0    0        0\n  6     0   0      0         0    0                 0        0    0        0\n  7     0   0      0         0    0                 0        0    0        0\n  8     0   0      0         0    0                 0        0    0        0\n  9     1   1      1         1    1                 1        1    1        1\n  10    1   0      0         1    0                 2        0    0        0\n    Terms\nDocs warm carbon dioxid hexafluorid methan monoxid nitrous oxid perfluorocarbon\n  1     0      0      0           0      0       0       0    0               0\n  2     0      0      0           0      0       0       0    0               0\n  3     0      0      0           0      0       0       0    0               0\n  4     0      0      0           0      0       0       0    0               0\n  5     0      0      0           0      0       0       0    0               0\n  6     0      0      0           0      0       0       0    0               0\n  7     0      0      0           0      0       0       0    0               0\n  8     0      0      0           0      0       0       0    0               0\n  9     1      0      0           0      0       0       0    0               0\n  10    0      2      1           1      1       1       1    1               1\n    Terms\nDocs sulfur\n  1       0\n  2       0\n  3       0\n  4       0\n  5       0\n  6       0\n  7       0\n  8       0\n  9       0\n  10      1\n```\n\n\n:::\n:::\n\n\nload(url(\"https://cbail.github.io/Trump_Tweets.Rdata\")) head(trumptweets\\$text)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}