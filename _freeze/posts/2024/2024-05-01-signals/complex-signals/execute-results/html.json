{
  "hash": "04d22b256f36115c386fdfea0ce22714",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: ad hoc complex signaling systems\ncategories: [signaling games, complex signaling systems, compositionality, communication protocols]\n---\n\n\n\n\n\nRather them consider how complex signaling systems evolve from a lewis signaling game plus some modifications it might be worth while to better understand some complex signaling systems.\n\nEssentially One would equip the agents with a set of complex signals and see if they can acquire more powerful signaling system to communicate more effectively.\n\nThis should allow us to quantify:\n\n1. the expressivity of different features of complex signaling systems.\n2. the complexities of learning\n3. the complexities of avoiding deception\n\n\n::: {.callout-note}\n### What is compositionality in signaling systems?\n\n1. given a rudimentary signaling system how can we use it to construct and learn a more complex signaling systems?\n2. Once we have this two step process we can then consider the complex signaling system as a single unit and see if it can be learned directly ?\n3. After we have done it a few times we can we generalize the process to signaling systems with desiderata similar to natural languages?\n4. Can we specelize signaling systems to operate with specific RL tasks\n5. Can we use signaling systems as a symbolic abstraction of the environment and thus transfer learning from one environment to another?\n\n:::\n\n\n## Logical Aggregation \n\n## operators \n\n## Learning to negate:\n\n- states $St_0:St_{2M}$\n- lew_primitives = $Sig_0:Sig_{2N}$ indicating 0...n and nor 0 ... not n.\n- neg_primitives = $NOT, sig_0:sig_{N}$ \n- prefix coding negation = <NOT, neg_primitives> = Sig_{n+N} \n- suffix coding negation = <neg_primitives, NOT>\n- prefix protocol\n\n- In this case we don't have a clear benefit of suffix and prefix. but later we will see how prefix coding is a fit for the desiderata of complex signaling systems.\n\n- let's consider a 2 state with negation. \n- in the lewis game we have 2 signals 0 and 1.\n- in the negation_syste,\n- The semantics of negation (its meaning) can be defined as we are use to i.e. no 1 mean 0 and no 0 means 1. But in this case we dont get any benefit from the negation, we just get a system with longer signals.\n we can interpret it as a trick we learn to double the number of symbols we can use.\n\nnow consider a 4 symbol system with negation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n- A conjunctive signaling system\n- A disjunctive signaling system\n- A signaling system with conjunctions and disjunctions\n- Signaling with Run-length encoding\n- Signaling with Prefix-codes\n\n## Morphology\n\n- A signaling system with a morphological template\n\n## Synatax\n\n- A signaling system with a syntactic template\n- Signaling system with a multiple templates\n- Signaling system with a multiple templates\n\n\n## Sequence Aggregation\n\n\n- A Sequential signaling system with n signals\n- A matrix signaling system\n- Template signaling system\n\n",
    "supporting": [
      "complex-signals_files"
    ],
    "filters": [],
    "includes": {}
  }
}