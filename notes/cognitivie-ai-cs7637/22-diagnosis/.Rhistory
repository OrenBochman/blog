method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name'),
y=alt.Y('proportion')
)
points
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name'),
y=alt.Y('proportion')
)
points
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name'),
y=alt.Y('proportion'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name').scale(zero=False).title{"group"},
y=alt.Y('lb'),
y=alt.Y2('ub'),
)
error_bars + points
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name:N').scale(zero=False).title{"group"},
y=alt.Y('lb:Q'),
y=alt.Y2('ub:Q')
)
error_bars + points
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name:N').scale(zero=False).title{"group"},
y=alt.Y('lb:Q'),
y=alt.Y2('ub:Q')
)
error_bars + points
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name:N').scale(zero=False).title{"group"},
alt.Y('lb:Q'),
alt.Y2('ub:Q')
)
error_bars + points
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name:N').scale(zero=False),
alt.Y('lb:Q'),
alt.Y2('ub:Q'),
)
error_bars + points
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name:N').scale(zero=False),
alt.Y('lb:Q'),
alt.Y2('ub:Q'),
)
error_bars + points
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
alt.X('name:N'),
alt.Y('lb:Q'),
alt.Y2('ub:Q'),
)
error_bars + points
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q'),
y2= alt.Y2('ub:Q'),
)
error_bars + points
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q'),
y2= alt.Y2('ub:Q'),
)
points + error_bars
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N').scale(zero=False).title("yield"),
y = alt.Y('lb:Q').scale(zero=False).title("prop"),
y2= alt.Y2('ub:Q'),
)
points + error_bars
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N').scale(zero=False).title("yield"),
y = alt.Y('lb:Q').scale(zero=False).title("prop"),
y2= alt.Y2('ub:Q'),
)
points + error_bars
plt.show()
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N').scale(zero=False).title("yield"),
y = alt.Y('lb:Q').scale(zero=False).title("prop"),
y2= alt.Y2('ub:Q'),
)
points + error_bars
plt.show()
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N').scale(zero=False).title("yield"),
y = alt.Y('lb:Q').scale(zero=False).title("prop"),
y2= alt.Y2('ub:Q'),
)
vw=points + error_bars
vw
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N').scale(zero=False).title("yield"),
y = alt.Y('lb:Q').scale(zero=False).title("prop"),
y2= alt.Y2('ub:Q'),
)
vw=points + error_bars
vw
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N').scale(zero=False).title("yield"),
y = alt.Y('lb:Q').scale(zero=False).title("prop"),
y2= alt.Y2('ub:Q'),
)
vw=points + error_bars
vw
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
plt.show()
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
plt.show()
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
plt.show()
import pandas as pd
from statsmodels.stats.proportion import proportion_confint
nobs= 126272
alpha = 0.05
method = 'normal'
## for experiment
name='experiment'
count = 61818
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
exeriment = {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
## for control
name='control'
count = 64454
proportion = count/nobs
lb,ub=proportion_confint(count, nobs, alpha=0.05, method='normal')
control= {'name':name, 'count':count, 'lb':lb,'ub':ub,"proportion":proportion}
df = pd.DataFrame.from_records(data=(exeriment,control),index=['1', '2'])
df
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
plt.show()
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
#| label: fig-ci
#| fig-cap: ci
import altair as alt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
#| label: fig-ci
#| fig-cap: ci
import altair as alt
import matplotlib.pyplot as plt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
#plt.show()
#| label: fig-ci
#| fig-cap: ci
import altair as alt
import matplotlib.pyplot as plt
points = alt.Chart(df).mark_point(filled=True, color='black').encode(
x=alt.X('name:N'),
y=alt.Y('proportion:Q'),
)
error_bars = alt.Chart(df).mark_errorbar().encode(
x = alt.X('name:N'),
y = alt.Y('lb:Q').scale(zero=False).title("lb"),
y2= alt.Y2('ub:Q').title("ub"),
)
vw =  points + error_bars
vw
plt.show()
reticulate::repl_python()
install.packages("renv")
renv::init()
reticulate::repl_python()
reticulate::repl_python()
