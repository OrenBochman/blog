---
title: Quarto Migration Notes
subtitle: |
  I have moved this blog from blogger to Jekyl and finaly to quarto.  
description: some migration notes from Blooger to Jekyl to Quarto blog.
date: 2024-01-30
categories: [quarto, blogging, code]
image: pexels-kaique-rocha-379960.jpg
image-alt: "man standing beside pipes by Kaique Rocha"
bibliography: references.bib 
---

I was able to stand on the shoulders of [:giants](#giants) when I migrated this blog.

## :giants {.invisible}

[@navarro2022], [@hill2022], [@kaye2022] 

## The devil is in the details

There are lots of details that should be in the guide that are scattered all over the quarto site.

I decided that all posts should have the following fields in their front matter:

1.  title
2.  subtitle
3.  description
4.  date
5.  categories
6.  image
7.  image-description

## Virtual Environments


-   are documented [here](https://quarto.org/docs/projects/virtual-environments.html#rstudio)
-   ideal one can have one virtual environment for the whole site


## Lightbox Galleries 

so far I used this only in the [this page](../2023-12-20-autogluon/index.html)

the light box plugin was integrated into Quarto in the version 4.1 which I migrated to. 
I have been using light box to make notes of talks and so on. So in for this blog 
adding light boxes is a breeze.

All that's realy needed is to change setting in the frontmatter:

```javascript
lightbox: true
```

which I did for all posts by adding the setting to the `_metadata.yaml` in the 
posts directory. And now all images default to opening within their own lightbox 
when clicked upon.

to disable the feature say, on a logo for example just add `.no-lightbox` css style to the image like this:

```markdown
![caption](filename.png){.no-lightbox}
```

if you want to be able to scroll through a series of images we need to decorate each images as follows:


```markdown
![caption](filename.png){group="my-gallery"}
```

An added bonus is that it is possible to zoom into these light-boxed images

## Extras

-   the about page is based on [postcards package](https://cran.r-project.org/web/packages/postcards/readme/README.html)
-   icons for navigation come from [bootstrap](https://icons.getbootstrap.com/?q=archive%3E)
-   cover images are from [pexels](www.pexels.com)


## Nutshell Addin

[:Nutshells](#Nutshells): seems like an interesting way to reduce the 
clutter by hiding unessential exposition. 

- Will users realize they can interact with these nutshells ^[in landing pages I 
  used to have an animation to get users to engage with in-lined content  ] ?
- Not sure if the implementation is good enough to be worth the hassle.
- They also seem to be unwieldy, ^[could we loose the callout/baloon]?
- Can we get the page to keep track of the nutshell state so we can bookmarkit ?
- I'm going to try it out and see if they are pages for which they are suitable.

### :Nutshells {.invisible}

which are links that expand inline into content


### Open issues:

- can I readily integrate books and presentation into this blog ?
  - can I drop them in or do I need to build them in another repo 
  - then deploy 
  - then link!?
- how about embedding repls
- how about embedding shiny live apps


